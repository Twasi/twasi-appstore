!function(t){var e={};function n(i){if(e[i])return e[i].exports;var o=e[i]={i:i,l:!1,exports:{}};return t[i].call(o.exports,o,o.exports,n),o.l=!0,o.exports}n.m=t,n.c=e,n.d=function(t,e,i){n.o(t,e)||Object.defineProperty(t,e,{enumerable:!0,get:i})},n.r=function(t){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(t,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(t,"__esModule",{value:!0})},n.t=function(t,e){if(1&e&&(t=n(t)),8&e)return t;if(4&e&&"object"==typeof t&&t&&t.__esModule)return t;var i=Object.create(null);if(n.r(i),Object.defineProperty(i,"default",{enumerable:!0,value:t}),2&e&&"string"!=typeof t)for(var o in t)n.d(i,o,function(e){return t[e]}.bind(null,o));return i},n.n=function(t){var e=t&&t.__esModule?function(){return t.default}:function(){return t};return n.d(e,"a",e),e},n.o=function(t,e){return Object.prototype.hasOwnProperty.call(t,e)},n.p="",n(n.s=1)}([function(t,e,n){"use strict";var i,o=function(t){return{topic:"twasi-songrequests/events",scope:"action",action:{type:"add",song:t}}},s={topic:"twasi-songrequests/events",scope:"action",action:{type:"queue"}},r=function(t){return void 0===t&&(t=!1),{topic:"twasi-songrequests/events",scope:"action",action:{type:t?"skip":"next"}}},u=function(t,e,n,i){return new(n||(n=Promise))((function(o,s){function r(t){try{a(i.next(t))}catch(t){s(t)}}function u(t){try{a(i.throw(t))}catch(t){s(t)}}function a(t){var e;t.done?o(t.value):(e=t.value,e instanceof n?e:new n((function(t){t(e)}))).then(r,u)}a((i=i.apply(t,e||[])).next())}))},a=function(t,e){var n,i,o,s,r={label:0,sent:function(){if(1&o[0])throw o[1];return o[1]},trys:[],ops:[]};return s={next:u(0),throw:u(1),return:u(2)},"function"==typeof Symbol&&(s[Symbol.iterator]=function(){return this}),s;function u(s){return function(u){return function(s){if(n)throw new TypeError("Generator is already executing.");for(;r;)try{if(n=1,i&&(o=2&s[0]?i.return:s[0]?i.throw||((o=i.return)&&o.call(i),0):i.next)&&!(o=o.call(i,s[1])).done)return o;switch(i=0,o&&(s=[2&s[0],o.value]),s[0]){case 0:case 1:o=s;break;case 4:return r.label++,{value:s[1],done:!1};case 5:r.label++,i=s[1],s=[0];continue;case 7:s=r.ops.pop(),r.trys.pop();continue;default:if(!(o=(o=r.trys).length>0&&o[o.length-1])&&(6===s[0]||2===s[0])){r=0;continue}if(3===s[0]&&(!o||s[1]>o[0]&&s[1]<o[3])){r.label=s[1];break}if(6===s[0]&&r.label<o[1]){r.label=o[1],o=s;break}if(o&&r.label<o[2]){r.label=o[2],r.ops.push(s);break}o[2]&&r.ops.pop(),r.trys.pop();continue}s=e.call(t,r)}catch(t){s=[6,t],i=0}finally{n=o=0}if(5&s[0])throw s[1];return{value:s[0]?s[1]:void 0,done:!0}}([s,u])}}},c=function(){function t(t,e,n){this.api=t,this.jwt=e,this.statusListener=n,this.events=new Map,this.connect()}return t.prototype.connect=function(){var t=this;setTimeout((function(){t.connect()}),3e3),this.client&&this.client.readyState===this.client.OPEN||(this.client=new WebSocket(this.api),this.client.onerror=function(){t.statusListener.statusChanged(i.DISCONNECTED)},this.client.onopen=function(){return t.authorize()},this.client.onclose=function(){t.statusListener.statusChanged(i.DISCONNECTED)},this.requests=new l(this.client,this.events))},t.prototype.authorize=function(){return u(this,void 0,void 0,(function(){var t,e;return a(this,(function(n){switch(n.label){case 0:return[4,this.requests.request({topic:"auth",scope:"action",action:{type:"JWT_TOKEN",token:this.jwt}})];case 1:return"success"!==(t=n.sent()).status?[3,3]:(e=t.result.user.twitchId,[4,this.requests.request({topic:"twasi-songrequests/events",scope:"subscribe",config:{channel:e}})]);case 2:t=n.sent(),n.label=3;case 3:return this.statusListener.statusChanged("success"===t.status?i.CONNECTED:i.UNAUTHORIZED),[2]}}))}))},t.prototype.on=function(t,e){this.events.has(t)?this.events.get(t).push(e):this.events.set(t,[e])},t.prototype.add=function(t){return u(this,void 0,void 0,(function(){return a(this,(function(e){switch(e.label){case 0:return[4,this.requests.request(o(t))];case 1:return[2,e.sent()]}}))}))},t.prototype.getQueue=function(){return u(this,void 0,void 0,(function(){return a(this,(function(t){switch(t.label){case 0:return[4,this.requests.request(s)];case 1:return[2,t.sent().result]}}))}))},t.prototype.next=function(t){return void 0===t&&(t=!1),u(this,void 0,void 0,(function(){return a(this,(function(e){switch(e.label){case 0:return[4,this.requests.request(r(t))];case 1:return[2,e.sent()]}}))}))},t}();!function(t){t[t.CONNECTED=0]="CONNECTED",t[t.DISCONNECTED=1]="DISCONNECTED",t[t.UNAUTHORIZED=2]="UNAUTHORIZED"}(i||(i={}));var h,p,l=function(){function t(t,e){var n=this;this.count=0,this.pending=new Map,this.events=new Map,e&&(this.events=e),this.client=t,this.client.onmessage=function(t){var e=JSON.parse(t.data);e.ref&&n.pending.has(e.ref)?(n.pending.get(e.ref)(e.result),n.pending.delete(e.ref)):e.event&&n.events.has(e.event)&&n.events.get(e.event).forEach((function(t){t(e.details,new Date(e.timeStamp))}))}}return t.prototype.request=function(t,e){var n=this;return void 0===e&&(e=3e3),t.ref||(t.ref=this.newRef()),new Promise((function(i,o){n.pending.set(t.ref,i),n.client.send(JSON.stringify(t)),setTimeout((function(){n.pending.has(t.ref)&&(n.pending.delete(t.ref),o("Timed Out"))}),e)}))},t.prototype.on=function(t,e){this.events.has(t)?this.events.get(t).push(e):this.events.set(t,[e])},t.prototype.newRef=function(){return(this.count++).toString()},t}(),f={topic:"twasi-songrequests/spotify-credentials",scope:"action",action:{type:"get"}},d={topic:"twasi-songrequests/spotify-credentials",scope:"action",action:{type:"init"}},y=function(t){return{topic:"twasi-songrequests/spotify-credentials",scope:"action",action:{type:"set",code:t}}},v={topic:"twasi-songrequests/spotify-credentials",scope:"action",action:{type:"refresh"}},w={topic:"twasi-songrequests/spotify-credentials",scope:"action",action:{type:"remove"}},b=function(t,e,n,i){return new(n||(n=Promise))((function(o,s){function r(t){try{a(i.next(t))}catch(t){s(t)}}function u(t){try{a(i.throw(t))}catch(t){s(t)}}function a(t){var e;t.done?o(t.value):(e=t.value,e instanceof n?e:new n((function(t){t(e)}))).then(r,u)}a((i=i.apply(t,e||[])).next())}))},g=function(t,e){var n,i,o,s,r={label:0,sent:function(){if(1&o[0])throw o[1];return o[1]},trys:[],ops:[]};return s={next:u(0),throw:u(1),return:u(2)},"function"==typeof Symbol&&(s[Symbol.iterator]=function(){return this}),s;function u(s){return function(u){return function(s){if(n)throw new TypeError("Generator is already executing.");for(;r;)try{if(n=1,i&&(o=2&s[0]?i.return:s[0]?i.throw||((o=i.return)&&o.call(i),0):i.next)&&!(o=o.call(i,s[1])).done)return o;switch(i=0,o&&(s=[2&s[0],o.value]),s[0]){case 0:case 1:o=s;break;case 4:return r.label++,{value:s[1],done:!1};case 5:r.label++,i=s[1],s=[0];continue;case 7:s=r.ops.pop(),r.trys.pop();continue;default:if(!(o=(o=r.trys).length>0&&o[o.length-1])&&(6===s[0]||2===s[0])){r=0;continue}if(3===s[0]&&(!o||s[1]>o[0]&&s[1]<o[3])){r.label=s[1];break}if(6===s[0]&&r.label<o[1]){r.label=o[1],o=s;break}if(o&&r.label<o[2]){r.label=o[2],r.ops.push(s);break}o[2]&&r.ops.pop(),r.trys.pop();continue}s=e.call(t,r)}catch(t){s=[6,t],i=0}finally{n=o=0}if(5&s[0])throw s[1];return{value:s[0]?s[1]:void 0,done:!0}}([s,u])}}},m=function(){function t(t,e){var n=this;this.token=null,this.expires=null,this.api=t,this.listener=e;window.addEventListener("message",(function(t){return b(n,void 0,void 0,(function(){return g(this,(function(e){switch(e.label){case 0:return"string"!=typeof t.data?[2]:t.data.startsWith("code:")?[4,this.set(t.data.substr("code:".length))]:[2];case 1:return e.sent(),this.win.postMessage("close","*"),[2]}}))}))}),!1)}return t.prototype.get=function(){return b(this,void 0,void 0,(function(){var t;return g(this,(function(e){switch(e.label){case 0:return[4,this.api.requests.request(f)];case 1:return t=e.sent(),this.handle(t.token?t:null),[2]}}))}))},t.prototype.init=function(){return b(this,void 0,void 0,(function(){var t;return g(this,(function(e){switch(e.label){case 0:return[4,this.api.requests.request(d)];case 1:return t=e.sent(),this.win=window.open(t.result.uri,"popUpWindow","height=500,width=400,left=100,top=100,resizable=yes,scrollbars=yes,toolbar=yes,menubar=no,location=no,directories=no, status=yes"),[2]}}))}))},t.prototype.set=function(t){return b(this,void 0,void 0,(function(){var e;return g(this,(function(n){switch(n.label){case 0:return[4,this.api.requests.request(y(t))];case 1:return e=n.sent(),this.handle(e),[2]}}))}))},t.prototype.refresh=function(){return b(this,void 0,void 0,(function(){var t;return g(this,(function(e){switch(e.label){case 0:return[4,this.api.requests.request(v)];case 1:return t=e.sent(),this.handle(t.token?t:null),[2]}}))}))},t.prototype.remove=function(){return b(this,void 0,void 0,(function(){return g(this,(function(t){switch(t.label){case 0:return[4,this.api.requests.request(w)];case 1:if("success"!==t.sent().status)throw"An error occured";return[2]}}))}))},t.prototype.handle=function(t){var e=this;t?(this.token=t.token,this.expires=new Date(t.expires),this.listener.spotifyAuthenticated(!0,t.token),setTimeout((function(){return b(e,void 0,void 0,(function(){return g(this,(function(e){switch(e.label){case 0:return this.token!==t.token?[2]:[4,this.refresh()];case 1:return e.sent(),[2]}}))}))}),this.expires.getTime()-Date.now())):this.listener.spotifyAuthenticated(!1)},t}(),P=function(t){this.events=t},q=(h=function(t,e){return(h=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(t,e){t.__proto__=e}||function(t,e){for(var n in e)e.hasOwnProperty(n)&&(t[n]=e[n])})(t,e)},function(t,e){function n(){this.constructor=t}h(t,e),t.prototype=null===e?Object.create(e):(n.prototype=e.prototype,new n)}),k=function(t,e,n,i){return new(n||(n=Promise))((function(o,s){function r(t){try{a(i.next(t))}catch(t){s(t)}}function u(t){try{a(i.throw(t))}catch(t){s(t)}}function a(t){var e;t.done?o(t.value):(e=t.value,e instanceof n?e:new n((function(t){t(e)}))).then(r,u)}a((i=i.apply(t,e||[])).next())}))},E=function(t,e){var n,i,o,s,r={label:0,sent:function(){if(1&o[0])throw o[1];return o[1]},trys:[],ops:[]};return s={next:u(0),throw:u(1),return:u(2)},"function"==typeof Symbol&&(s[Symbol.iterator]=function(){return this}),s;function u(s){return function(u){return function(s){if(n)throw new TypeError("Generator is already executing.");for(;r;)try{if(n=1,i&&(o=2&s[0]?i.return:s[0]?i.throw||((o=i.return)&&o.call(i),0):i.next)&&!(o=o.call(i,s[1])).done)return o;switch(i=0,o&&(s=[2&s[0],o.value]),s[0]){case 0:case 1:o=s;break;case 4:return r.label++,{value:s[1],done:!1};case 5:r.label++,i=s[1],s=[0];continue;case 7:s=r.ops.pop(),r.trys.pop();continue;default:if(!(o=(o=r.trys).length>0&&o[o.length-1])&&(6===s[0]||2===s[0])){r=0;continue}if(3===s[0]&&(!o||s[1]>o[0]&&s[1]<o[3])){r.label=s[1];break}if(6===s[0]&&r.label<o[1]){r.label=o[1],o=s;break}if(o&&r.label<o[2]){r.label=o[2],r.ops.push(s);break}o[2]&&r.ops.pop(),r.trys.pop();continue}s=e.call(t,r)}catch(t){s=[6,t],i=0}finally{n=o=0}if(5&s[0])throw s[1];return{value:s[0]?s[1]:void 0,done:!0}}([s,u])}}},S=function(t){function e(e,n){var i=t.call(this,e)||this;return i.events=e,i.api=n,i}return q(e,t),e.prototype.init=function(t){var e=this;this.player&&this.player.disconnect(),this.token=t;var n=new Spotify.Player({name:"Twasi-Panel",getOAuthToken:function(e){e(t)}});n.addListener("initialization_error",(function(t){var e=t.message;window.TSRI.reports.spotifyReports.push({type:"initialization_error",message:e})})),n.addListener("authentication_error",(function(t){var n=t.message;return k(e,void 0,void 0,(function(){return E(this,(function(t){return window.TSRI.reports.spotifyReports.push({type:"authentication_error",message:n}),[2]}))}))})),n.addListener("account_error",(function(t){var n=t.message;return k(e,void 0,void 0,(function(){return E(this,(function(t){return window.TSRI.reports.spotifyReports.push({type:"account_error",message:n}),[2]}))}))})),n.addListener("playback_error",(function(t){var n=t.message;return k(e,void 0,void 0,(function(){return E(this,(function(t){return window.TSRI.reports.spotifyReports.push({type:"playback_error",message:n}),[2]}))}))})),n.addListener("player_state_changed",(function(t){return k(e,void 0,void 0,(function(){return E(this,(function(e){return t?(t.position&&t.duration?this.events.onPositionChange(t.position,t.duration):t.paused||this.events.onPositionChange(0,this.song.duration),t.paused?this.events.onPause():this.events.onPlay(this.song),t.paused&&t.disallows.resuming&&t.position&&t.duration&&t.position/t.duration>.98&&this.events.onNext(),[2]):[2]}))}))})),n.addListener("ready",(function(t){var n=t.device_id;e.id=n})),n.addListener("not_ready",(function(t){t.device_id;return k(e,void 0,void 0,(function(){return E(this,(function(t){switch(t.label){case 0:return[4,window.TSRI.spotifyAuth.refresh()];case 1:return t.sent(),[2]}}))}))})),this.player=n,n.connect()},e.prototype.pause=function(){this.player.pause()},e.prototype.play=function(t,e){return k(this,void 0,void 0,(function(){return E(this,(function(e){switch(e.label){case 0:return this.song&&this.song.uri===t.uri?(this.player.resume(),[3,3]):[3,1];case 1:return this.song=t,[4,fetch("https://api.spotify.com/v1/me/player/play?device_id="+this.id,{method:"PUT",body:JSON.stringify({uris:[t.uri]}),headers:{"Content-Type":"application/json",Authorization:"Bearer "+this.token}})];case 2:e.sent(),e.label=3;case 3:return[2]}}))}))},e.prototype.seek=function(t){this.player.seek(this.song.duration*t)},e.prototype.setVolume=function(t,e){e-=.5,t=t/10*7.5,t+=.25*(e*=-2);try{this.player.setVolume(t)}catch(t){}},e.prototype.resume=function(){this.player.resume()},e}(P),T=function(){var t=function(e,n){return(t=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(t,e){t.__proto__=e}||function(t,e){for(var n in e)e.hasOwnProperty(n)&&(t[n]=e[n])})(e,n)};return function(e,n){function i(){this.constructor=e}t(e,n),e.prototype=null===n?Object.create(n):(i.prototype=n.prototype,new i)}}(),O=function(t){function e(e,n,i){var o=t.call(this,e)||this;if(!i)throw"API_NOT_READY";o.player=new YT.Player("youtube-player",{events:{onStateChange:function(t){return o.onUpdate(t)}}});var s=function(){o.setPos(),setTimeout(s,500)};return s(),o}return T(e,t),e.prototype.setPos=function(){try{this.events.onPositionChange(1e3*this.player.getCurrentTime(),1e3*this.player.getDuration())}catch(t){}},e.prototype.onUpdate=function(t){1===t.data?this.events.onPlay():0===t.data?this.events.onNext():this.events.onPause(),this.setPos()},e.prototype.pause=function(){this.player.pauseVideo()},e.prototype.play=function(t,e){this.player.loadVideoById(t.uri)},e.prototype.seek=function(t){this.player.seekTo(this.player.getDuration()*t)},e.prototype.setVolume=function(t,e){e-=.5,t=t/10*7.5,t+=.25*(e*=2);try{this.player.setVolume(100*t)}catch(t){}},e.prototype.resume=function(){this.player.playVideo()},e}(P);!function(t){t[t.NONE=0]="NONE",t[t.SPOTIFY=1]="SPOTIFY",t[t.YOUTUBE=2]="YOUTUBE"}(p||(p={}));var x={topic:"twasi-songrequests/events",scope:"action",action:{type:"back"}},_=function(t){return{topic:"twasi-songrequests/events",scope:"action",action:{type:"settings",settings:t}}},A=function(t,e,n,i){return new(n||(n=Promise))((function(o,s){function r(t){try{a(i.next(t))}catch(t){s(t)}}function u(t){try{a(i.throw(t))}catch(t){s(t)}}function a(t){var e;t.done?o(t.value):(e=t.value,e instanceof n?e:new n((function(t){t(e)}))).then(r,u)}a((i=i.apply(t,e||[])).next())}))},N=function(t,e){var n,i,o,s,r={label:0,sent:function(){if(1&o[0])throw o[1];return o[1]},trys:[],ops:[]};return s={next:u(0),throw:u(1),return:u(2)},"function"==typeof Symbol&&(s[Symbol.iterator]=function(){return this}),s;function u(s){return function(u){return function(s){if(n)throw new TypeError("Generator is already executing.");for(;r;)try{if(n=1,i&&(o=2&s[0]?i.return:s[0]?i.throw||((o=i.return)&&o.call(i),0):i.next)&&!(o=o.call(i,s[1])).done)return o;switch(i=0,o&&(s=[2&s[0],o.value]),s[0]){case 0:case 1:o=s;break;case 4:return r.label++,{value:s[1],done:!1};case 5:r.label++,i=s[1],s=[0];continue;case 7:s=r.ops.pop(),r.trys.pop();continue;default:if(!(o=(o=r.trys).length>0&&o[o.length-1])&&(6===s[0]||2===s[0])){r=0;continue}if(3===s[0]&&(!o||s[1]>o[0]&&s[1]<o[3])){r.label=s[1];break}if(6===s[0]&&r.label<o[1]){r.label=o[1],o=s;break}if(o&&r.label<o[2]){r.label=o[2],r.ops.push(s);break}o[2]&&r.ops.pop(),r.trys.pop();continue}s=e.call(t,r)}catch(t){s=[6,t],i=0}finally{n=o=0}if(5&s[0])throw s[1];return{value:s[0]?s[1]:void 0,done:!0}}([s,u])}}},C=function(){for(var t=0,e=0,n=arguments.length;e<n;e++)t+=arguments[e].length;var i=Array(t),o=0;for(e=0;e<n;e++)for(var s=arguments[e],r=0,u=s.length;r<u;r++,o++)i[o]=s[r];return i},U=function(){function t(t,e,n){var i=this;this.api=t,this.frontendEvents=e,this.song=null,this.queue=[],this._history=[],this.firstPlayback=!0,this.shouldPlay=!1,this.volume=.6,this.volumeBalance=.5,this.posPredicter=new I((function(t){return i.frontendEvents.position(t)})),this.spotify=new S(this.playbackProviderEvents(p.SPOTIFY),t),this.youtube=new O(this.playbackProviderEvents(p.YOUTUBE),t,n.youtubeApi),t.on("queue",(function(t){return i.setQueue(t.queue,t.history,i.shouldPlay)})),t.on("settings",(function(t){i.settings=t}))}return t.prototype.setEvents=function(t){this.frontendEvents=t,this.shouldPlay?t.play():t.pause();var e=C(this.queue);t.queueUpdate(e,this._history),t.song(this.song),t.settingsUpdate(this.settings)},t.prototype.play=function(t,e){return A(this,void 0,void 0,(function(){var n;return N(this,(function(i){switch(i.label){case 0:return this.shouldPlay=!0,e?(this.song&&this.pause(),this.song=e,(n=this.getController(e.provider)).setVolume(this.volume,this.volumeBalance),n.play(e,t),[3,4]):[3,1];case 1:return this.song?(this.firstPlayback||0===this.posPredicter.prediction?(this.firstPlayback=!1,this.play(!0,this.song)):this.getController(this.song.provider).resume(),[3,4]):[3,2];case 2:return[4,this.next()];case 3:i.sent(),i.label=4;case 4:return this.frontendEvents.song(this.song),this.shouldPlay=!0,[2]}}))}))},t.prototype.pause=function(){this.shouldPlay=!0,this.song&&this.getController(this.song.provider).pause()},t.prototype.getController=function(t){switch(t){case p.NONE:default:return null;case p.SPOTIFY:return this.spotify;case p.YOUTUBE:return this.youtube}},t.prototype.seek=function(t){this.song&&this.getController(this.song.provider).seek(t)},t.prototype.localAdd=function(t){this.queue.push(t),this.frontendEvents.queueUpdate(this.queue,this._history),this.posPredicter.predict||this.play(!1,void 0)},t.prototype.setQueue=function(t,e,n){if(void 0===n&&(n=!0),t.length){var i=t[0];n&&(!this.song||this.song&&this.song.uri!==i.uri)?this.play(!0,i):(this.frontendEvents.song(t[0]),this.song=i)}else this.posPredicter.resetPosition(),this.song&&this.pause(),this.song=null,this.frontendEvents.song(null),this.posPredicter.resetPosition();this.queue=t,this._history=e,this.frontendEvents.queueUpdate(this.queue,this._history)},t.prototype.localNext=function(){this.posPredicter.resetPosition(),this.song&&(this.pause(),this._history.unshift(this.song)),this.queue.length?(this.play(!0,this.queue[0]),this.queue.shift()):(this.song=null,this.frontendEvents.song(null),this.posPredicter.resetPosition()),this.frontendEvents.queueUpdate(this.queue,this._history)},t.prototype.back=function(){return A(this,void 0,void 0,(function(){var t;return N(this,(function(e){switch(e.label){case 0:return[4,this.api.requests.request(x)];case 1:if("success"!==(t=e.sent()).status)throw t.message;return[2]}}))}))},t.prototype.next=function(){return A(this,void 0,void 0,(function(){return N(this,(function(t){switch(t.label){case 0:return[4,this.api.requests.request(r(!1))];case 1:return t.sent(),[2]}}))}))},t.prototype.skip=function(){return A(this,void 0,void 0,(function(){return N(this,(function(t){switch(t.label){case 0:return[4,this.api.requests.request(r(!0))];case 1:return t.sent(),[2]}}))}))},t.prototype.apiAdd=function(t){return A(this,void 0,void 0,(function(){return N(this,(function(e){switch(e.label){case 0:return[4,this.api.requests.request(o(t))];case 1:return e.sent(),[2]}}))}))},t.prototype.playbackProviderEvents=function(t){var e=this;return{onPause:function(){e.song&&![p.NONE,t].includes(e.song.provider)||(e.posPredicter.predict=!1,e.frontendEvents.stop())},onPlay:function(n){e.song&&e.song.provider===t&&(e.posPredicter.predict=!0,e.frontendEvents.play())},onPositionChange:function(n,i){e.song&&e.song.provider===t&&e.posPredicter.setPosition(n,i)},onNext:function(){return e.next()}}},t.prototype.loadQueue=function(t){return void 0===t&&(t=!0),A(this,void 0,void 0,(function(){var e;return N(this,(function(n){switch(n.label){case 0:return[4,this.api.requests.request(s)];case 1:return e=n.sent().result,this.setQueue(e.queue,e.history,t),[2]}}))}))},t.prototype.setVolume=function(t){return A(this,void 0,void 0,(function(){return N(this,(function(e){switch(e.label){case 0:return[4,this.setSettings({volume:t})];case 1:return e.sent(),[2]}}))}))},t.prototype.setVolumeBalance=function(t){return A(this,void 0,void 0,(function(){return N(this,(function(e){switch(e.label){case 0:return[4,this.setSettings({volumeBalance:t})];case 1:return e.sent(),[2]}}))}))},t.prototype.setSettings=function(t){return A(this,void 0,void 0,(function(){var e;return N(this,(function(n){switch(n.label){case 0:return[4,this.api.requests.request(_(t))];case 1:return"success"===(e=n.sent()).status&&this.handleSettings(e.result),[2,e]}}))}))},t.prototype.handleSettings=function(t){this.frontendEvents.settingsUpdate(t),this.spotify.setVolume(t.volume,t.volumeBalance),this.youtube.setVolume(t.volume,t.volumeBalance)},t}(),I=function(){function t(t){var e=this;this.callback=t,this.predict=!1,this.lastPosition=Date.now(),this.duration=0,this.position=0,this.prediction=0;var n=function(){e.predictNow(),setTimeout(n,500)};n()}return t.prototype.setPosition=function(t,e){this.lastPosition=Date.now(),this.position=t,this.duration=e,this.predictNow()},t.prototype.resetPosition=function(){this.setPosition(0,0)},t.prototype.predictNow=function(){var t;0!==this.duration||0!==this.position?(this.predict&&(t=(this.position+(Date.now()-this.lastPosition))/this.duration),"number"==typeof t&&(this.prediction=t>1?1:t),this.callback(this.prediction)):this.callback(0)},t}(),D=function(t,e){return{topic:"twasi-songrequests/events",scope:"action",action:{type:"search",provider:p.SPOTIFY,token:t,query:e}}},R=function(t){return{topic:"twasi-songrequests/events",scope:"action",action:{type:"search",provider:p.YOUTUBE,query:t}}},j=function(t,e,n,i){return new(n||(n=Promise))((function(o,s){function r(t){try{a(i.next(t))}catch(t){s(t)}}function u(t){try{a(i.throw(t))}catch(t){s(t)}}function a(t){var e;t.done?o(t.value):(e=t.value,e instanceof n?e:new n((function(t){t(e)}))).then(r,u)}a((i=i.apply(t,e||[])).next())}))},Y=function(t,e){var n,i,o,s,r={label:0,sent:function(){if(1&o[0])throw o[1];return o[1]},trys:[],ops:[]};return s={next:u(0),throw:u(1),return:u(2)},"function"==typeof Symbol&&(s[Symbol.iterator]=function(){return this}),s;function u(s){return function(u){return function(s){if(n)throw new TypeError("Generator is already executing.");for(;r;)try{if(n=1,i&&(o=2&s[0]?i.return:s[0]?i.throw||((o=i.return)&&o.call(i),0):i.next)&&!(o=o.call(i,s[1])).done)return o;switch(i=0,o&&(s=[2&s[0],o.value]),s[0]){case 0:case 1:o=s;break;case 4:return r.label++,{value:s[1],done:!1};case 5:r.label++,i=s[1],s=[0];continue;case 7:s=r.ops.pop(),r.trys.pop();continue;default:if(!(o=(o=r.trys).length>0&&o[o.length-1])&&(6===s[0]||2===s[0])){r=0;continue}if(3===s[0]&&(!o||s[1]>o[0]&&s[1]<o[3])){r.label=s[1];break}if(6===s[0]&&r.label<o[1]){r.label=o[1],o=s;break}if(o&&r.label<o[2]){r.label=o[2],r.ops.push(s);break}o[2]&&r.ops.pop(),r.trys.pop();continue}s=e.call(t,r)}catch(t){s=[6,t],i=0}finally{n=o=0}if(5&s[0])throw s[1];return{value:s[0]?s[1]:void 0,done:!0}}([s,u])}}},B=function(){function t(t,e){this.api=t,this.spotify=e}return t.prototype.onSpotify=function(t){return j(this,void 0,void 0,(function(){var e;return Y(this,(function(n){switch(n.label){case 0:return[4,this.api.requests.request(D(this.spotify.token,t))];case 1:if("success"===(e=n.sent()).status)return[2,e.result];throw"An error occurred."}}))}))},t.prototype.onYouTube=function(t){return j(this,void 0,void 0,(function(){var e;return Y(this,(function(n){switch(n.label){case 0:return[4,this.api.requests.request(R(t),6e3)];case 1:if("success"===(e=n.sent()).status)return[2,e.result];throw"An error occurred."}}))}))},t}();n.d(e,"a",(function(){return V}));var z=function(t,e,n,i){return new(n||(n=Promise))((function(o,s){function r(t){try{a(i.next(t))}catch(t){s(t)}}function u(t){try{a(i.throw(t))}catch(t){s(t)}}function a(t){var e;t.done?o(t.value):(e=t.value,e instanceof n?e:new n((function(t){t(e)}))).then(r,u)}a((i=i.apply(t,e||[])).next())}))},L=function(t,e){var n,i,o,s,r={label:0,sent:function(){if(1&o[0])throw o[1];return o[1]},trys:[],ops:[]};return s={next:u(0),throw:u(1),return:u(2)},"function"==typeof Symbol&&(s[Symbol.iterator]=function(){return this}),s;function u(s){return function(u){return function(s){if(n)throw new TypeError("Generator is already executing.");for(;r;)try{if(n=1,i&&(o=2&s[0]?i.return:s[0]?i.throw||((o=i.return)&&o.call(i),0):i.next)&&!(o=o.call(i,s[1])).done)return o;switch(i=0,o&&(s=[2&s[0],o.value]),s[0]){case 0:case 1:o=s;break;case 4:return r.label++,{value:s[1],done:!1};case 5:r.label++,i=s[1],s=[0];continue;case 7:s=r.ops.pop(),r.trys.pop();continue;default:if(!(o=(o=r.trys).length>0&&o[o.length-1])&&(6===s[0]||2===s[0])){r=0;continue}if(3===s[0]&&(!o||s[1]>o[0]&&s[1]<o[3])){r.label=s[1];break}if(6===s[0]&&r.label<o[1]){r.label=o[1],o=s;break}if(o&&r.label<o[2]){r.label=o[2],r.ops.push(s);break}o[2]&&r.ops.pop(),r.trys.pop();continue}s=e.call(t,r)}catch(t){s=[6,t],i=0}finally{n=o=0}if(5&s[0])throw s[1];return{value:s[0]?s[1]:void 0,done:!0}}([s,u])}}},V=function(){function t(){this.status=Q,this.reports={spotifyReports:[]},this.authenticated=!1}return t.prototype.init=function(t,e,n){var o=this;if(this.events=n,this.API)return this.playback.setEvents(n),n.enableSpotifyAuth(!this.authenticated),void n.initialized(this.status);this.API=new c(e,t,{statusChanged:function(t){return z(o,void 0,void 0,(function(){return L(this,(function(e){switch(e.label){case 0:return this.status.api=0===t,this.e().initialized(this.status),this.status.api?[4,this.spotifyAuth.get()]:[3,2];case 1:e.sent(),e.label=2;case 2:return t!==i.CONNECTED?[3,4]:(this.loadQueue(!1),[4,this.playback.setSettings()]);case 3:e.sent(),e.label=4;case 4:return[2]}}))}))}}),this.playback=new U(this.API,this.events,this.status),this.search=new B(this.API,this.playback.spotify),this.spotifyAuth=new m(this.API,{statusChanged:this.spotifyStatus,spotifyAuthenticated:function(t,e){o.authenticated=t,o.e().enableSpotifyAuth(!t),e&&o.playback.spotify.init(e)}}),this.e().initialized(this.status)},t.prototype.spotifyStatus=function(t){this.status.spotify=t,this.e().initialized(this.status)},t.prototype.youtubeApiReady=function(){this.status.youtubeApi=!0,this.e().initialized(this.status)},t.prototype.spotifyApiReady=function(){this.status.spotifyApi=!0,this.e().initialized(this.status)},t.prototype.e=function(){return this.events?this.events:M},t.prototype.loadQueue=function(t){return void 0===t&&(t=!0),z(this,void 0,void 0,(function(){return L(this,(function(e){switch(e.label){case 0:return[4,this.playback.loadQueue(t)];case 1:return e.sent(),[2]}}))}))},t.prototype.report=function(t){return z(this,void 0,void 0,(function(){return L(this,(function(e){switch(e.label){case 0:return this.reports.reason=t,[4,this.API.requests.request((n=this.reports,{topic:"twasi-songrequests/events",scope:"action",action:{type:"report",message:n.message,report:n}}))];case 1:return e.sent(),[2]}var n}))}))},t}(),M={settingsUpdate:function(t){},queueUpdate:function(t){},enableSpotifyAuth:function(t){console.log("Spotify Authentication is now %s.",t?"enabled":"disabled")},initialized:function(t){},pause:function(){console.log("PAUSE")},play:function(){console.log("PLAY")},position:function(t){console.log("POS: "+t)},song:function(t){console.log("SONG: "+t.name)},stop:function(){console.log("STOP")}},Q={api:!1,spotifyApi:!1,spotify:!1,youtubeApi:!1,youtube:!1}},function(t,e,n){"use strict";n.r(e),function(t){var e=new(n(0).a),i=window;i.TSRI=e,i.onSpotifyWebPlaybackSDKReady=function(){return e.spotifyApiReady()},(window||t).onYouTubeIframeAPIReady=function(){return e.youtubeApiReady()},n(4)}.call(this,n(2))},function(t,e){var n;n=function(){return this}();try{n=n||new Function("return this")()}catch(t){"object"==typeof window&&(n=window)}t.exports=n},,function(t,e){if(!window.YT)var n={loading:0,loaded:0};if(!window.YTConfig)var i={host:"http://www.youtube.com"};n.loading||(n.loading=1,function(){var t=[];n.ready=function(e){n.loaded?e():t.push(e)},window.onYTReady=function(){n.loaded=1;for(var e=0;e<t.length;e++)try{t[e]()}catch(t){}},n.setConfig=function(t){for(var e in t)t.hasOwnProperty(e)&&(i[e]=t[e])};var e=document.createElement("script");e.type="text/javascript",e.id="www-widgetapi-script",e.src="https://s.ytimg.com/yts/jsbin/www-widgetapi-vflUFVyEP/www-widgetapi.js",e.async=!0;var o=document.currentScript;if(o){var s=o.nonce||o.getAttribute("nonce");s&&e.setAttribute("nonce",s)}var r=document.getElementsByTagName("script")[0];r.parentNode.insertBefore(e,r)}())}]);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,