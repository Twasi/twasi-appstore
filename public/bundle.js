!function(t){var e={};function n(o){if(e[o])return e[o].exports;var r=e[o]={i:o,l:!1,exports:{}};return t[o].call(r.exports,r,r.exports,n),r.l=!0,r.exports}n.m=t,n.c=e,n.d=function(t,e,o){n.o(t,e)||Object.defineProperty(t,e,{enumerable:!0,get:o})},n.r=function(t){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(t,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(t,"__esModule",{value:!0})},n.t=function(t,e){if(1&e&&(t=n(t)),8&e)return t;if(4&e&&"object"==typeof t&&t&&t.__esModule)return t;var o=Object.create(null);if(n.r(o),Object.defineProperty(o,"default",{enumerable:!0,value:t}),2&e&&"string"!=typeof t)for(var r in t)n.d(o,r,function(e){return t[e]}.bind(null,r));return o},n.n=function(t){var e=t&&t.__esModule?function(){return t.default}:function(){return t};return n.d(e,"a",e),e},n.o=function(t,e){return Object.prototype.hasOwnProperty.call(t,e)},n.p="",n(n.s=2)}([function(t,e){!function(t){function e(o){if(n[o])return n[o].exports;var r=n[o]={i:o,l:!1,exports:{}};return t[o].call(r.exports,r,r.exports,e),r.l=!0,r.exports}var n={};e.m=t,e.c=n,e.d=function(t,n,o){e.o(t,n)||Object.defineProperty(t,n,{configurable:!1,enumerable:!0,get:o})},e.n=function(t){var n=t&&t.__esModule?function(){return t.default}:function(){return t};return e.d(n,"a",n),n},e.o=function(t,e){return Object.prototype.hasOwnProperty.call(t,e)},e.p="",e(e.s=2)}([function(t,e,n){"use strict";var o={SPOTIFY_MESSAGE:"SP_MESSAGE",ACCOUNT_ERROR:"ACCOUNT_ERROR",AUTH_ERROR:"AUTH_ERROR",CONNECT:"CONNECT",CONNECTED:"CONNECTED",CURRENT_STATE:"CURRENT_STATE",DISCONNECT:"DISCONNECT",EVENT:"EVENT",GET_CURRENT_STATE:"GET_CURRENT_STATE",GET_TOKEN:"GET_TOKEN",GET_VOLUME:"GET_VOLUME",INIT:"INIT",LOADED:"LOADED",NEXT_TRACK:"NEXT_TRACK",PAUSE:"PAUSE",PLAYBACK_ERROR:"PLAYBACK_ERROR",PLAYER_INIT_ERROR:"PLAYER_INIT_ERROR",PLAYER_READY:"PLAYER_READY",PLAYER_NOT_READY:"PLAYER_NOT_READY",PLAYER_STATE_CHANGED:"PLAYER_STATE_CHANGED",PREV_TRACK:"PREV_TRACK",RESUME:"RESUME",SEEK:"SEEK",SET_NAME:"SET_NAME",SET_VOLUME:"SET_VOLUME",TOGGLE_PLAY:"TOGGLE_PLAY",TOKEN:"TOKEN",VOLUME:"VOLUME",accountError:function(t){return this._createEventMessage(o.ACCOUNT_ERROR,{message:t})},authError:function(t){return this._createEventMessage(o.AUTH_ERROR,t)},playbackError:function(t){return this._createEventMessage(o.PLAYBACK_ERROR,t)},playerReady:function(t){return this._createEventMessage(o.PLAYER_READY,t)},playerNotReady:function(t){return this._createEventMessage(o.PLAYER_NOT_READY,t)},connect:function(){return this._createMessage(o.CONNECT)},connected:function(t,e){return this._createMessage(o.CONNECTED,{connected:t,ref:e})},disconnect:function(){return this._createMessage(o.DISCONNECT)},init:function(t){return this._createMessage(o.INIT,t)},playerInitError:function(t){return this._createEventMessage(o.PLAYER_INIT_ERROR,t)},getToken:function(){return this._createMessage(o.GET_TOKEN)},token:function(t,e){return this._createMessage(o.TOKEN,{token:t,ref:e})},pause:function(){return this._createMessage(o.PAUSE)},resume:function(){return this._createMessage(o.RESUME)},togglePlay:function(){return this._createMessage(o.TOGGLE_PLAY)},seek:function(t){return this._createMessage(o.SEEK,t)},nextTrack:function(t){return this._createMessage(o.NEXT_TRACK,t)},previousTrack:function(t){return this._createMessage(o.PREV_TRACK,t)},getCurrentState:function(){return this._createMessage(o.GET_CURRENT_STATE)},currentState:function(t,e){return this._createMessage(o.CURRENT_STATE,{state:t,ref:e})},playerStateChanged:function(t){return this._createEventMessage(o.PLAYER_STATE_CHANGED,t)},getVolume:function(){return this._createMessage(o.GET_VOLUME)},volume:function(t,e){return this._createMessage(o.VOLUME,{volume:t,ref:e})},setVolume:function(t){return this._createMessage(o.SET_VOLUME,t)},setName:function(t){return this._createMessage(o.SET_NAME,t)},embeddedLoaded:function(){return this._createMessage(o.LOADED)},_createEventMessage:function(t,e){return this._createMessage(o.EVENT,{name:t,eventData:e})},_createMessage:function(t,e){return{type:o.SPOTIFY_MESSAGE,body:{topic:t,data:e?JSON.parse(JSON.stringify(e)):null}}}};t.exports=o},function(t,e){var n;n=function(){return this}();try{n=n||Function("return this")()||(0,eval)("this")}catch(t){"object"==typeof window&&(n=window)}t.exports=n},function(t,e,n){"use strict";function o(){var t=n(3);if(!document.body)throw new Error("Document doesn't have a body");if(window.Spotify={Player:t.setupPlayerEnv(window)},window.onSpotifyWebPlaybackSDKReady)window.onSpotifyWebPlaybackSDKReady();else{if(!window.onSpotifyPlayerAPIReady)throw new Error("onSpotifyWebPlaybackSDKReady is not defined");window.onSpotifyPlayerAPIReady()}}"complete"===document.readyState?o():window.addEventListener("load",o)},function(t,e,n){"use strict";var o=n(4),r=n(5),i=n(0),s=n(6);t.exports.setupPlayerEnv=function(t,e){var n,u="https://sdk.scdn.co/embedded/index.html",a=r.defer(),c=new o,f=e||function(e){var n=t.document.createElement("iframe");return n.src=e,n.setAttribute("alt","Audio Playback Container"),n.setAttribute("tabIndex","-1"),n.style.setProperty("position","absolute","important"),n.style.setProperty("left","-1px","important"),n.style.setProperty("width","0","important"),n.style.setProperty("height","0","important"),n.style.setProperty("border","none","important"),n.style.setProperty("outline","none","important"),n.allow="encrypted-media; autoplay",t.document.body.appendChild(n),n.contentWindow},p=function(e){e===i.LOADED&&(c.stopListening(t,p),a.resolve())};c.listen(t,p),n=f(u);var h=function(e){this._options=this._sanitizeOptions(e),this._handleMessages=this._handleMessages.bind(this),this._messageHandlers={},this._eventListeners={},this._setupMessageHandlers(),this._connectionRequests={},this._getCurrentStateRequests={},this._getVolumeRequests={},this.isLoaded=a.promise.then(function(){c.listen(t,this._handleMessages),this._sendMessage(i.init(this._options))}.bind(this))};return h.prototype._sanitizeOptions=function(e){var n=t&&t.location&&t.location.hostname||"";return{name:e.name||n,id:s.get(),getOAuthToken:e.getOAuthToken||e.getOauthToken,volume:e.volume||1}},h.prototype._setupMessageHandlers=function(){this._messageHandlers[i.GET_TOKEN]=this._onGetToken.bind(this),this._messageHandlers[i.EVENT]=this._onEvent.bind(this),this._messageHandlers[i.CONNECTED]=this._onConnected.bind(this),this._messageHandlers[i.CURRENT_STATE]=this._onCurrentState.bind(this),this._messageHandlers[i.VOLUME]=this._onVolume.bind(this)},h.prototype.connect=function(){return this.isLoaded.then(function(){var t=this._sendMessage(i.connect());return this._connectionRequests[t]=r.defer(),this._connectionRequests[t].promise}.bind(this))},h.prototype.on=function(t,e){if(!t)throw new TypeError("Argument `eventName` is required.");if("function"!=typeof e)throw new TypeError("Argument `listener` must be a function.");return this._eventListeners[t]=this._eventListeners[t]||[],-1===this._eventListeners[t].indexOf(e)&&(this._eventListeners[t].push(e),!0)},h.prototype.addListener=function(t,e){return this.on(t,e)},h.prototype.removeListener=function(t,e){if(!t)throw new TypeError("Argument `eventName` is required.");if(1===arguments.length)return this._eventListeners[t]=[],!0;if("function"!=typeof e)throw new TypeError("Argument `listener` must be a function.");var n=this._eventListeners[t];return!(!n||!n.length||(this._eventListeners[t]=n.filter((function(t){return t!==e})),0))},h.prototype.getCurrentState=function(){return this.isLoaded.then(function(){var t=this._sendMessage(i.getCurrentState());return this._getCurrentStateRequests[t]=r.defer(),this._getCurrentStateRequests[t].promise}.bind(this))},h.prototype.getVolume=function(){return this.isLoaded.then(function(){var t=this._sendMessage(i.getVolume());return this._getVolumeRequests[t]=r.defer(),this._getVolumeRequests[t].promise}.bind(this))},h.prototype.setName=function(t){return this._sendMessageWhenLoaded(i.setName(t))},h.prototype.setVolume=function(t){return this._sendMessageWhenLoaded(i.setVolume(t))},h.prototype.pause=function(){return this._sendMessageWhenLoaded(i.pause())},h.prototype.resume=function(){return this._sendMessageWhenLoaded(i.resume())},h.prototype.togglePlay=function(){return this._sendMessageWhenLoaded(i.togglePlay())},h.prototype.seek=function(t){return this._sendMessageWhenLoaded(i.seek(t))},h.prototype.previousTrack=function(t){return this._sendMessageWhenLoaded(i.previousTrack(t))},h.prototype.nextTrack=function(t){return this._sendMessageWhenLoaded(i.nextTrack(t))},h.prototype.disconnect=function(){return this._sendMessageWhenLoaded(i.disconnect())},h.prototype._getListeners=function(){var t={};return t[i.ACCOUNT_ERROR]="account_error",t[i.AUTH_ERROR]="authentication_error",t[i.PLAYBACK_ERROR]="playback_error",t[i.PLAYER_INIT_ERROR]="initialization_error",t[i.PLAYER_READY]="ready",t[i.PLAYER_NOT_READY]="not_ready",t[i.PLAYER_STATE_CHANGED]="player_state_changed",function(e){return this._eventListeners[t[e]]||[]}}(),h.prototype._onEvent=function(t){this._getListeners(t.name).forEach((function(e){e(t.eventData)}))},h.prototype._onGetToken=function(t,e){var n=this._options.getOAuthToken;if("function"!=typeof n){var o="getOAuthToken is not a function";if(this._getListeners(i.PLAYER_INIT_ERROR).length)return void this._onEvent({name:i.PLAYER_INIT_ERROR,eventData:{message:o}});throw new Error(o)}new r(n).then(function(t){this._sendMessage(i.token(t,e))}.bind(this))},h.prototype._onConnected=function(t){t.ref in this._connectionRequests&&(this._connectionRequests[t.ref].resolve(t.connected),delete this._connectionRequests[t.ref])},h.prototype._onCurrentState=function(t){t.ref in this._getCurrentStateRequests&&(this._getCurrentStateRequests[t.ref].resolve(t.state),delete this._getCurrentStateRequests[t.ref])},h.prototype._onVolume=function(t){t.ref in this._getVolumeRequests&&(this._getVolumeRequests[t.ref].resolve(t.volume),delete this._getVolumeRequests[t.ref])},h.prototype._handleMessages=function(t,e,n){t in this._messageHandlers&&this._messageHandlers[t](e,n)},h.prototype._sendMessage=function(t){return c.send(n,t,u)},h.prototype._sendMessageWhenLoaded=function(t){return this.isLoaded.then(this._sendMessage.bind(this,t))},h}},function(t,e,n){"use strict";var o=n(0),r=function(){this._onMessageCallback=function(){},this._receiveMessage=this._receiveMessage.bind(this),this._messageId=0};r.prototype.listen=function(t,e){this._onMessageCallback=e,t.addEventListener("message",this._receiveMessage)},r.prototype.stopListening=function(t){t.removeEventListener("message",this._receiveMessage)},r.prototype.send=function(t,e,n){return t.postMessage(this._addMessageId(e),n||"*"),e.seq},r.prototype._addMessageId=function(t){return t.seq=this._messageId++,t},r.prototype._receiveMessage=function(t){var e=t.data;e.type===o.SPOTIFY_MESSAGE&&e.body&&e.body.topic&&this._onMessageCallback(e.body.topic,e.body.data,e.seq)},t.exports=r},function(t,e,n){"use strict";(function(e){var n,o=e.Promise;if(!o)throw new Error("Fatal: no Promise implementation available.");(n=Object.defineProperty?function(t,e,n){return t[e]?t:(Object.defineProperty(t,e,{value:n,configurable:!0,writable:!0}),t)}:function(t,e,n){return t[e]?t:(t[e]=n,t)})(o,"defer",(function(){var t={};return t.promise=new o((function(e,n){t.resolve=e,t.reject=n})),t})),n(o.prototype,"spread",(function(t,e){return this.then((function(t){return o.all(t)})).then((function(e){return 1===e.length?t(e[0]):t.apply(this,e)}),e)})),t.exports=o}).call(e,n(1))},function(t,e,n){"use strict";(function(e){function o(){var t=new e.Uint8Array(16);return e.crypto.getRandomValues(t),i.toHex(t.join(""),40).slice(0,40)}function r(){for(var t=new Array(27),e=t.length;e--;)t[e]=Math.floor(8*Math.random());return i.toHex(t.join(""),40)}var i=n(7),s="function"==typeof e.Uint8Array&&void 0!==e.crypto&&"function"==typeof e.crypto.getRandomValues?o:r,u="_spharmony_device_id";t.exports={get:function(t,n){if(t&&"string"==typeof t)return t;if(n)return s();var o=e.localStorage.getItem(u);return o||(o=s(),e.localStorage.setItem(u,o)),o},generate:s,generateWithCrypto:o,generateWithRandom:r}}).call(e,n(1))},function(t,e,n){"use strict";function o(t,e,n){for(var o=0,r=0;r<t.length;++r){var i=t[r]*e+o;t[r]=i%n,o=~~(i/n)}for(;o;)t.push(o%n),o=~~(o/n)}function r(t,e,n,o){var r,i,s=0;for(i=0;i<e.length;++i)r=~~t[i]+e[i]*n+s,t[i]=r%o,s=~~(r/o);for(;s;)r=~~t[i]+s,t[i]=r%o,s=~~(r/o),++i}function i(t,e,n){for(var i=[0],s=[1],u=0;u<t.length;++u)r(i,s,t[u],n),o(s,e,n);return i}function s(t,e){for(var n=[],o=0;o<t.length;++o)n.push(e[t[o]]);return n.reverse()}function u(t,e){for(;t.length<e;)t.push(0);return t}var a="0123456789abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ",c={},f={};!function(){var t,e;for(t=0,e=a.length;t<e;++t)f[a[t]]=t;for(t=0;t<16;++t)c["0123456789abcdef"[t]]=t;for(t=0;t<16;++t)c["0123456789ABCDEF"[t]]=t}(),t.exports={fromBytes:function(t,e){return s(u(i(t.slice(0).reverse(),256,62),e),a).join("")},toBytes:function(t,e){return u(i(s(t,f),62,256),e).reverse()},toHex:function(t,e){return s(u(i(s(t,f),62,16),e),a).join("")},fromHex:function(t,e){return s(u(i(s(t,c),16,62),e),a).join("")}}}])},function(t,e){if(!window.YT)var n={loading:0,loaded:0};if(!window.YTConfig)var o={host:"http://www.youtube.com"};n.loading||(n.loading=1,function(){var t=[];n.ready=function(e){n.loaded?e():t.push(e)},window.onYTReady=function(){n.loaded=1;for(var e=0;e<t.length;e++)try{t[e]()}catch(t){}},n.setConfig=function(t){for(var e in t)t.hasOwnProperty(e)&&(o[e]=t[e])};var e=document.createElement("script");e.type="text/javascript",e.id="www-widgetapi-script",e.src="https://s.ytimg.com/yts/jsbin/www-widgetapi-vflUFVyEP/www-widgetapi.js",e.async=!0;var r=document.currentScript;if(r){var i=r.nonce||r.getAttribute("nonce");i&&e.setAttribute("nonce",i)}var s=document.getElementsByTagName("script")[0];s.parentNode.insertBefore(e,s)}())},function(t,e,n){"use strict";n.r(e);var o,r=function(t,e,n,o){return new(n||(n=Promise))((function(r,i){function s(t){try{a(o.next(t))}catch(t){i(t)}}function u(t){try{a(o.throw(t))}catch(t){i(t)}}function a(t){var e;t.done?r(t.value):(e=t.value,e instanceof n?e:new n((function(t){t(e)}))).then(s,u)}a((o=o.apply(t,e||[])).next())}))},i=function(t,e){var n,o,r,i,s={label:0,sent:function(){if(1&r[0])throw r[1];return r[1]},trys:[],ops:[]};return i={next:u(0),throw:u(1),return:u(2)},"function"==typeof Symbol&&(i[Symbol.iterator]=function(){return this}),i;function u(i){return function(u){return function(i){if(n)throw new TypeError("Generator is already executing.");for(;s;)try{if(n=1,o&&(r=2&i[0]?o.return:i[0]?o.throw||((r=o.return)&&r.call(o),0):o.next)&&!(r=r.call(o,i[1])).done)return r;switch(o=0,r&&(i=[2&i[0],r.value]),i[0]){case 0:case 1:r=i;break;case 4:return s.label++,{value:i[1],done:!1};case 5:s.label++,o=i[1],i=[0];continue;case 7:i=s.ops.pop(),s.trys.pop();continue;default:if(!(r=(r=s.trys).length>0&&r[r.length-1])&&(6===i[0]||2===i[0])){s=0;continue}if(3===i[0]&&(!r||i[1]>r[0]&&i[1]<r[3])){s.label=i[1];break}if(6===i[0]&&s.label<r[1]){s.label=r[1],r=i;break}if(r&&s.label<r[2]){s.label=r[2],s.ops.push(i);break}r[2]&&s.ops.pop(),s.trys.pop();continue}i=e.call(t,s)}catch(t){i=[6,t],o=0}finally{n=r=0}if(5&i[0])throw i[1];return{value:i[0]?i[1]:void 0,done:!0}}([i,u])}}},s=function(){function t(t,e,n){this.api=t,this.jwt=e,this.statusListener=n,this.connect()}return t.prototype.connect=function(){var t=this;setTimeout((function(){t.connect()}),3e3),this.client&&this.client.OPEN||(this.client=new WebSocket(this.api),this.client.onopen=function(){return t.authorize()},this.client.onclose=function(){t.statusListener.statusChanged(o.DISCONNECTED)},this.requests=new c(this.client))},t.prototype.authorize=function(){return r(this,void 0,void 0,(function(){var t;return i(this,(function(e){switch(e.label){case 0:return[4,this.requests.request({topic:"auth",scope:"action",action:{type:"JWT_TOKEN",token:this.jwt}})];case 1:return t=e.sent(),this.statusListener.statusChanged("success"===t.status?o.CONNECTED:o.UNAUTHORIZED),[2]}}))}))},t}();!function(t){t[t.CONNECTED=0]="CONNECTED",t[t.DISCONNECTED=1]="DISCONNECTED",t[t.UNAUTHORIZED=2]="UNAUTHORIZED"}(o||(o={}));var u,a,c=function(){function t(t){var e=this;this.count=0,this.pending=new Map,this.client=t,this.client.onmessage=function(t){var n=JSON.parse(t.data);e.pending.has(n.ref)&&(e.pending.get(n.ref)(n.result),e.pending.delete(n.ref))}}return t.prototype.request=function(t,e){var n=this;return void 0===e&&(e=3e3),t.ref||(t.ref=this.newRef()),new Promise((function(o,r){n.pending.set(t.ref,o),n.client.send(JSON.stringify(t)),setTimeout((function(){n.pending.has(t.ref)&&(n.pending.delete(t.ref),r("Timed Out"))}),e)}))},t.prototype.newRef=function(){return(this.count++).toString()},t}(),f={topic:"twasi-songrequests/spotify-credentials",scope:"action",action:{type:"get"}},p={topic:"twasi-songrequests/spotify-credentials",scope:"action",action:{type:"init"}},h=function(t){return{topic:"twasi-songrequests/spotify-credentials",scope:"action",action:{type:"set",code:t}}},l={topic:"twasi-songrequests/spotify-credentials",scope:"action",action:{type:"refresh"}},d=function(t,e,n,o){return new(n||(n=Promise))((function(r,i){function s(t){try{a(o.next(t))}catch(t){i(t)}}function u(t){try{a(o.throw(t))}catch(t){i(t)}}function a(t){var e;t.done?r(t.value):(e=t.value,e instanceof n?e:new n((function(t){t(e)}))).then(s,u)}a((o=o.apply(t,e||[])).next())}))},y=function(t,e){var n,o,r,i,s={label:0,sent:function(){if(1&r[0])throw r[1];return r[1]},trys:[],ops:[]};return i={next:u(0),throw:u(1),return:u(2)},"function"==typeof Symbol&&(i[Symbol.iterator]=function(){return this}),i;function u(i){return function(u){return function(i){if(n)throw new TypeError("Generator is already executing.");for(;s;)try{if(n=1,o&&(r=2&i[0]?o.return:i[0]?o.throw||((r=o.return)&&r.call(o),0):o.next)&&!(r=r.call(o,i[1])).done)return r;switch(o=0,r&&(i=[2&i[0],r.value]),i[0]){case 0:case 1:r=i;break;case 4:return s.label++,{value:i[1],done:!1};case 5:s.label++,o=i[1],i=[0];continue;case 7:i=s.ops.pop(),s.trys.pop();continue;default:if(!(r=(r=s.trys).length>0&&r[r.length-1])&&(6===i[0]||2===i[0])){s=0;continue}if(3===i[0]&&(!r||i[1]>r[0]&&i[1]<r[3])){s.label=i[1];break}if(6===i[0]&&s.label<r[1]){s.label=r[1],r=i;break}if(r&&s.label<r[2]){s.label=r[2],s.ops.push(i);break}r[2]&&s.ops.pop(),s.trys.pop();continue}i=e.call(t,s)}catch(t){i=[6,t],o=0}finally{n=r=0}if(5&i[0])throw i[1];return{value:i[0]?i[1]:void 0,done:!0}}([i,u])}}},g=function(){function t(t,e){var n=this;this.token=null,this.expires=null,this.api=t,this.listener=e;window.addEventListener("message",(function(t){return d(n,void 0,void 0,(function(){return y(this,(function(e){switch(e.label){case 0:return"string"!=typeof t.data?[2]:t.data.startsWith("code:")?[4,this.set(t.data.substr("code:".length))]:[2];case 1:return e.sent(),this.win.postMessage("close","*"),[2]}}))}))}),!1)}return t.prototype.get=function(){return d(this,void 0,void 0,(function(){var t;return y(this,(function(e){switch(e.label){case 0:return[4,this.api.requests.request(f)];case 1:return t=e.sent(),this.handle(t.token?t:null),[2]}}))}))},t.prototype.init=function(){return d(this,void 0,void 0,(function(){var t;return y(this,(function(e){switch(e.label){case 0:return[4,this.api.requests.request(p)];case 1:return t=e.sent(),this.win=window.open(t.result.uri,"popUpWindow","height=500,width=400,left=100,top=100,resizable=yes,scrollbars=yes,toolbar=yes,menubar=no,location=no,directories=no, status=yes"),[2]}}))}))},t.prototype.set=function(t){return d(this,void 0,void 0,(function(){var e;return y(this,(function(n){switch(n.label){case 0:return[4,this.api.requests.request(h(t))];case 1:return e=n.sent(),this.handle(e),[2]}}))}))},t.prototype.refresh=function(){return d(this,void 0,void 0,(function(){var t;return y(this,(function(e){switch(e.label){case 0:return[4,this.api.requests.request(l)];case 1:return t=e.sent(),this.handle(t.token?t:null),[2]}}))}))},t.prototype.handle=function(t){var e=this;t?(this.token=t.token,this.expires=new Date(t.expires),this.listener.spotifyAuthenticated(!0,t.token),setTimeout((function(){return d(e,void 0,void 0,(function(){return y(this,(function(e){switch(e.label){case 0:return this.token!==t.token?[2]:[4,this.refresh()];case 1:return e.sent(),[2]}}))}))}),this.expires.getTime()-Date.now())):this.listener.spotifyAuthenticated(!1)},t}(),_=function(t){this.events=t},v=(u=function(t,e){return(u=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(t,e){t.__proto__=e}||function(t,e){for(var n in e)e.hasOwnProperty(n)&&(t[n]=e[n])})(t,e)},function(t,e){function n(){this.constructor=t}u(t,e),t.prototype=null===e?Object.create(e):(n.prototype=e.prototype,new n)}),E=function(t,e,n,o){return new(n||(n=Promise))((function(r,i){function s(t){try{a(o.next(t))}catch(t){i(t)}}function u(t){try{a(o.throw(t))}catch(t){i(t)}}function a(t){var e;t.done?r(t.value):(e=t.value,e instanceof n?e:new n((function(t){t(e)}))).then(s,u)}a((o=o.apply(t,e||[])).next())}))},b=function(t,e){var n,o,r,i,s={label:0,sent:function(){if(1&r[0])throw r[1];return r[1]},trys:[],ops:[]};return i={next:u(0),throw:u(1),return:u(2)},"function"==typeof Symbol&&(i[Symbol.iterator]=function(){return this}),i;function u(i){return function(u){return function(i){if(n)throw new TypeError("Generator is already executing.");for(;s;)try{if(n=1,o&&(r=2&i[0]?o.return:i[0]?o.throw||((r=o.return)&&r.call(o),0):o.next)&&!(r=r.call(o,i[1])).done)return r;switch(o=0,r&&(i=[2&i[0],r.value]),i[0]){case 0:case 1:r=i;break;case 4:return s.label++,{value:i[1],done:!1};case 5:s.label++,o=i[1],i=[0];continue;case 7:i=s.ops.pop(),s.trys.pop();continue;default:if(!(r=(r=s.trys).length>0&&r[r.length-1])&&(6===i[0]||2===i[0])){s=0;continue}if(3===i[0]&&(!r||i[1]>r[0]&&i[1]<r[3])){s.label=i[1];break}if(6===i[0]&&s.label<r[1]){s.label=r[1],r=i;break}if(r&&s.label<r[2]){s.label=r[2],s.ops.push(i);break}r[2]&&s.ops.pop(),s.trys.pop();continue}i=e.call(t,s)}catch(t){i=[6,t],o=0}finally{n=r=0}if(5&i[0])throw i[1];return{value:i[0]?i[1]:void 0,done:!0}}([i,u])}}},T=function(t){function e(e,n){var o=t.call(this,e)||this;o.events=e,o.api=n;var r=function(){return E(o,void 0,void 0,(function(){return b(this,(function(t){switch(t.label){case 0:return[4,this.positionUpdate()];case 1:return t.sent(),setTimeout(r,500),[2]}}))}))};return r().then(),o}return v(e,t),e.prototype.init=function(t){var e=this;this.player&&this.player.disconnect(),this.token=t;var n=new Spotify.Player({name:"Twasi-Panel",getOAuthToken:function(e){e(t)}});n.addListener("initialization_error",(function(t){var e=t.message;console.error(e)})),n.addListener("authentication_error",(function(t){var e=t.message;console.error(e)})),n.addListener("account_error",(function(t){var e=t.message;console.error(e)})),n.addListener("playback_error",(function(t){var e=t.message;console.error(e)})),n.addListener("player_state_changed",(function(t){return E(e,void 0,void 0,(function(){return b(this,(function(e){return t.position&&t.duration&&this.events.onPositionChange(t.position,t.duration),t.paused?this.events.onPause():this.events.onPlay(this.song),t.paused&&t.disallows.resuming&&this.events.onNext(),[2]}))}))})),n.addListener("ready",(function(t){var n=t.device_id;e.id=n})),n.addListener("not_ready",(function(t){var e=t.device_id;console.log("Device ID has gone offline",e)})),this.player=n,n.connect()},e.prototype.pause=function(){this.player.pause()},e.prototype.play=function(t){return E(this,void 0,void 0,(function(){return b(this,(function(e){switch(e.label){case 0:return this.song&&this.song.uri===t.uri?(this.player.resume(),[2]):(this.song=t,[4,fetch("https://api.spotify.com/v1/me/player/play?device_id="+this.id,{method:"PUT",body:JSON.stringify({uris:[t.uri]}),headers:{"Content-Type":"application/json",Authorization:"Bearer "+this.token}})]);case 1:return e.sent(),[2]}}))}))},e.prototype.seek=function(t){this.player.seek(this.song.duration*t)},e.prototype.setVolume=function(t){this.player.setVolume(t)},e.prototype.resume=function(){this.player.resume()},e.prototype.positionUpdate=function(){return E(this,void 0,void 0,(function(){var t;return b(this,(function(e){switch(e.label){case 0:return e.trys.push([0,2,,3]),[4,this.player.getCurrentState()];case 1:return(t=e.sent())&&this.events.onPositionChange(t.position,t.duration),[3,3];case 2:return e.sent(),[3,3];case 3:return[2]}}))}))},e}(_),w=function(){var t=function(e,n){return(t=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(t,e){t.__proto__=e}||function(t,e){for(var n in e)e.hasOwnProperty(n)&&(t[n]=e[n])})(e,n)};return function(e,n){function o(){this.constructor=e}t(e,n),e.prototype=null===n?Object.create(n):(o.prototype=n.prototype,new o)}}(),m=function(t){function e(){return null!==t&&t.apply(this,arguments)||this}return w(e,t),e.prototype.pause=function(){},e.prototype.play=function(t){},e.prototype.seek=function(t){},e.prototype.setVolume=function(t){},e.prototype.resume=function(){},e}(_);!function(t){t[t.NONE=0]="NONE",t[t.SPOTIFY=1]="SPOTIFY",t[t.YOUTUBE=2]="YOUTUBE"}(a||(a={}));var R=function(){function t(t,e){var n=this;this.api=t,this.frontendEvents=e,this.song=null,this.queue=[],this.posPredicter=new O(e.position),this.spotify=new T({onPause:function(){n.song.provider===a.SPOTIFY&&(n.posPredicter.predict=!1,n.frontendEvents.stop())},onPlay:function(t){n.posPredicter.predict=!0,n.frontendEvents.play()},onPositionChange:function(t,e){n.song.provider===a.SPOTIFY&&n.posPredicter.setPosition(t,e)},onNext:function(){return n.next()}},t),this.youtube=new m(null)}return t.prototype.play=function(t){t?(this.song&&this.getController(this.song.provider).pause(),this.song=t,this.getController(t.provider).play(t)):this.song?this.getController(this.song.provider).resume():this.next()},t.prototype.pause=function(){this.song&&this.getController(this.song.provider).pause()},t.prototype.getController=function(t){switch(t){case a.NONE:default:return null;case a.SPOTIFY:return this.spotify;case a.YOUTUBE:return this.youtube}},t.prototype.seek=function(t){this.song&&this.getController(this.song.provider).seek(t)},t.prototype.add=function(t){this.queue.push(t),this.frontendEvents.queueUpdate(this.queue),this.posPredicter.predict||this.play()},t.prototype.setQueue=function(t){if(t.length){var e=t[0];this.song&&this.song.uri===e.uri?this.frontendEvents.song(e):this.play(e),this.song=e,t.shift()}else this.frontendEvents.song(null);this.queue=t,this.frontendEvents.queueUpdate(this.queue),this.posPredicter.predict||this.play()},t.prototype.next=function(){if(this.song&&this.getController(this.song.provider).pause(),this.queue.length){var t=this.queue[0];this.queue.shift(),this.song=t,this.play(t)}else this.pause(),this.song=null,this.frontendEvents.song(null);this.frontendEvents.queueUpdate(this.queue)},t}(),O=function(){function t(t){var e=this;this.predict=!1,this.lastPosition=Date.now(),this.duration=0,this.position=0,this.prediction=0;var n=function(){var o;e.predict&&(o=(e.position+(Date.now()-e.lastPosition))/e.duration),"number"==typeof o&&(e.prediction=o>1?1:o),t(e.prediction),setTimeout(n,500)};n()}return t.prototype.setPosition=function(t,e){this.lastPosition=Date.now(),this.position=t,this.duration=e},t}(),A=function(t,e,n,o){return new(n||(n=Promise))((function(r,i){function s(t){try{a(o.next(t))}catch(t){i(t)}}function u(t){try{a(o.throw(t))}catch(t){i(t)}}function a(t){var e;t.done?r(t.value):(e=t.value,e instanceof n?e:new n((function(t){t(e)}))).then(s,u)}a((o=o.apply(t,e||[])).next())}))},P=function(t,e){var n,o,r,i,s={label:0,sent:function(){if(1&r[0])throw r[1];return r[1]},trys:[],ops:[]};return i={next:u(0),throw:u(1),return:u(2)},"function"==typeof Symbol&&(i[Symbol.iterator]=function(){return this}),i;function u(i){return function(u){return function(i){if(n)throw new TypeError("Generator is already executing.");for(;s;)try{if(n=1,o&&(r=2&i[0]?o.return:i[0]?o.throw||((r=o.return)&&r.call(o),0):o.next)&&!(r=r.call(o,i[1])).done)return r;switch(o=0,r&&(i=[2&i[0],r.value]),i[0]){case 0:case 1:r=i;break;case 4:return s.label++,{value:i[1],done:!1};case 5:s.label++,o=i[1],i=[0];continue;case 7:i=s.ops.pop(),s.trys.pop();continue;default:if(!(r=(r=s.trys).length>0&&r[r.length-1])&&(6===i[0]||2===i[0])){s=0;continue}if(3===i[0]&&(!r||i[1]>r[0]&&i[1]<r[3])){s.label=i[1];break}if(6===i[0]&&s.label<r[1]){s.label=r[1],r=i;break}if(r&&s.label<r[2]){s.label=r[2],s.ops.push(i);break}r[2]&&s.ops.pop(),s.trys.pop();continue}i=e.call(t,s)}catch(t){i=[6,t],o=0}finally{n=r=0}if(5&i[0])throw i[1];return{value:i[0]?i[1]:void 0,done:!0}}([i,u])}}},S=function(){function t(){this.status=C}return t.prototype.init=function(t,e,n){var o=this;this.events=n,this.API=new s(e,t,{statusChanged:function(t){return A(o,void 0,void 0,(function(){return P(this,(function(e){switch(e.label){case 0:return this.status.api=0===t,this.e().initialized(this.status),this.status.api?[4,this.spotifyAuth.get()]:[3,2];case 1:e.sent(),e.label=2;case 2:return[2]}}))}))}}),this.playback=new R(this.API,n),this.spotifyAuth=new g(this.API,{statusChanged:this.spotifyStatus,spotifyAuthenticated:function(t,e){o.e().enableSpotifyAuth(!t),e&&o.playback.spotify.init(e)}}),this.e().initialized(this.status)},t.prototype.spotifyStatus=function(t){this.status.spotify=t,this.e().initialized(this.status)},t.prototype.youtubeStatus=function(t){this.status.youtube=t,this.e().initialized(this.status)},t.prototype.spotifyApiReady=function(){this.status.spotifyApi=!0,this.e().initialized(this.status)},t.prototype.e=function(){return this.events?this.events:N},t}(),N={queueUpdate:function(t){},enableSpotifyAuth:function(t){console.log("Spotify Authentication is now %s.",t?"enabled":"disabled")},initialized:function(t){},pause:function(){console.log("PAUSE")},play:function(){console.log("PLAY")},position:function(t){console.log("POS: "+t)},song:function(t){console.log("SONG: "+t.name)},stop:function(){console.log("STOP")},volume:function(t){console.log("VOLUME: "+t)}},C={api:!1,spotifyApi:!1,spotify:!1,youtube:!1},M=new S,L=window;L.TSRI=M,L.onSpotifyWebPlaybackSDKReady=function(){return M.spotifyApiReady()},n(0),n(1)}]);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,