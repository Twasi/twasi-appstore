!function(t){var e={};function n(r){if(e[r])return e[r].exports;var i=e[r]={i:r,l:!1,exports:{}};return t[r].call(i.exports,i,i.exports,n),i.l=!0,i.exports}n.m=t,n.c=e,n.d=function(t,e,r){n.o(t,e)||Object.defineProperty(t,e,{enumerable:!0,get:r})},n.r=function(t){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(t,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(t,"__esModule",{value:!0})},n.t=function(t,e){if(1&e&&(t=n(t)),8&e)return t;if(4&e&&"object"==typeof t&&t&&t.__esModule)return t;var r=Object.create(null);if(n.r(r),Object.defineProperty(r,"default",{enumerable:!0,value:t}),2&e&&"string"!=typeof t)for(var i in t)n.d(r,i,function(e){return t[e]}.bind(null,i));return r},n.n=function(t){var e=t&&t.__esModule?function(){return t.default}:function(){return t};return n.d(e,"a",e),e},n.o=function(t,e){return Object.prototype.hasOwnProperty.call(t,e)},n.p="",n(n.s=1)}([function(t,e,n){"use strict";var r,i=function(t){return{topic:"twasi-songrequests/events",scope:"action",action:{type:"add",song:t}}},o={topic:"twasi-songrequests/events",scope:"action",action:{type:"queue"}},s=function(t){return void 0===t&&(t=!1),{topic:"twasi-songrequests/events",scope:"action",action:{type:t?"skip":"next"}}},u=function(t,e,n,r){return new(n||(n=Promise))((function(i,o){function s(t){try{a(r.next(t))}catch(t){o(t)}}function u(t){try{a(r.throw(t))}catch(t){o(t)}}function a(t){var e;t.done?i(t.value):(e=t.value,e instanceof n?e:new n((function(t){t(e)}))).then(s,u)}a((r=r.apply(t,e||[])).next())}))},a=function(t,e){var n,r,i,o,s={label:0,sent:function(){if(1&i[0])throw i[1];return i[1]},trys:[],ops:[]};return o={next:u(0),throw:u(1),return:u(2)},"function"==typeof Symbol&&(o[Symbol.iterator]=function(){return this}),o;function u(o){return function(u){return function(o){if(n)throw new TypeError("Generator is already executing.");for(;s;)try{if(n=1,r&&(i=2&o[0]?r.return:o[0]?r.throw||((i=r.return)&&i.call(r),0):r.next)&&!(i=i.call(r,o[1])).done)return i;switch(r=0,i&&(o=[2&o[0],i.value]),o[0]){case 0:case 1:i=o;break;case 4:return s.label++,{value:o[1],done:!1};case 5:s.label++,r=o[1],o=[0];continue;case 7:o=s.ops.pop(),s.trys.pop();continue;default:if(!(i=(i=s.trys).length>0&&i[i.length-1])&&(6===o[0]||2===o[0])){s=0;continue}if(3===o[0]&&(!i||o[1]>i[0]&&o[1]<i[3])){s.label=o[1];break}if(6===o[0]&&s.label<i[1]){s.label=i[1],i=o;break}if(i&&s.label<i[2]){s.label=i[2],s.ops.push(o);break}i[2]&&s.ops.pop(),s.trys.pop();continue}o=e.call(t,s)}catch(t){o=[6,t],r=0}finally{n=i=0}if(5&o[0])throw o[1];return{value:o[0]?o[1]:void 0,done:!0}}([o,u])}}},c=function(){function t(t,e,n){this.api=t,this.jwt=e,this.statusListener=n,this.events=new Map,this.connect()}return t.prototype.connect=function(){var t=this;setTimeout((function(){t.connect()}),3e3),this.client&&this.client.readyState===this.client.OPEN||(this.client=new WebSocket(this.api),this.client.onerror=function(){t.statusListener.statusChanged(r.DISCONNECTED)},this.client.onopen=function(){return t.authorize()},this.client.onclose=function(){t.statusListener.statusChanged(r.DISCONNECTED)},this.requests=new f(this.client,this.events))},t.prototype.authorize=function(){return u(this,void 0,void 0,(function(){var t,e;return a(this,(function(n){switch(n.label){case 0:return[4,this.requests.request({topic:"auth",scope:"action",action:{type:"JWT_TOKEN",token:this.jwt}})];case 1:return"success"!==(t=n.sent()).status?[3,3]:(e=t.result.user.twitchId,[4,this.requests.request({topic:"twasi-songrequests/events",scope:"subscribe",config:{channel:e}})]);case 2:t=n.sent(),n.label=3;case 3:return this.statusListener.statusChanged("success"===t.status?r.CONNECTED:r.UNAUTHORIZED),[2]}}))}))},t.prototype.on=function(t,e){this.events.has(t)?this.events.get(t).push(e):this.events.set(t,[e])},t.prototype.add=function(t){return u(this,void 0,void 0,(function(){return a(this,(function(e){switch(e.label){case 0:return[4,this.requests.request(i(t))];case 1:return[2,e.sent()]}}))}))},t.prototype.getQueue=function(){return u(this,void 0,void 0,(function(){return a(this,(function(t){switch(t.label){case 0:return[4,this.requests.request(o)];case 1:return[2,t.sent().result]}}))}))},t.prototype.next=function(t){return void 0===t&&(t=!1),u(this,void 0,void 0,(function(){return a(this,(function(e){switch(e.label){case 0:return[4,this.requests.request(s(t))];case 1:return[2,e.sent()]}}))}))},t}();!function(t){t[t.CONNECTED=0]="CONNECTED",t[t.DISCONNECTED=1]="DISCONNECTED",t[t.UNAUTHORIZED=2]="UNAUTHORIZED"}(r||(r={}));var p,h,f=function(){function t(t,e){var n=this;this.count=0,this.pending=new Map,this.events=new Map,e&&(this.events=e),this.client=t,this.client.onmessage=function(t){var e=JSON.parse(t.data);e.ref&&n.pending.has(e.ref)?(n.pending.get(e.ref)(e.result),n.pending.delete(e.ref)):e.event&&n.events.has(e.event)&&n.events.get(e.event).forEach((function(t){t(e.details,new Date(e.timeStamp))}))}}return t.prototype.request=function(t,e){var n=this;return void 0===e&&(e=3e3),t.ref||(t.ref=this.newRef()),new Promise((function(r,i){n.pending.set(t.ref,r),n.client.send(JSON.stringify(t)),setTimeout((function(){n.pending.has(t.ref)&&(n.pending.delete(t.ref),i("Timed Out"))}),e)}))},t.prototype.on=function(t,e){this.events.has(t)?this.events.get(t).push(e):this.events.set(t,[e])},t.prototype.newRef=function(){return(this.count++).toString()},t}(),l={topic:"twasi-songrequests/spotify-credentials",scope:"action",action:{type:"get"}},d={topic:"twasi-songrequests/spotify-credentials",scope:"action",action:{type:"init"}},y=function(t){return{topic:"twasi-songrequests/spotify-credentials",scope:"action",action:{type:"set",code:t}}},v={topic:"twasi-songrequests/spotify-credentials",scope:"action",action:{type:"refresh"}},g={topic:"twasi-songrequests/spotify-credentials",scope:"action",action:{type:"remove"}},E=function(t,e,n,r){return new(n||(n=Promise))((function(i,o){function s(t){try{a(r.next(t))}catch(t){o(t)}}function u(t){try{a(r.throw(t))}catch(t){o(t)}}function a(t){var e;t.done?i(t.value):(e=t.value,e instanceof n?e:new n((function(t){t(e)}))).then(s,u)}a((r=r.apply(t,e||[])).next())}))},_=function(t,e){var n,r,i,o,s={label:0,sent:function(){if(1&i[0])throw i[1];return i[1]},trys:[],ops:[]};return o={next:u(0),throw:u(1),return:u(2)},"function"==typeof Symbol&&(o[Symbol.iterator]=function(){return this}),o;function u(o){return function(u){return function(o){if(n)throw new TypeError("Generator is already executing.");for(;s;)try{if(n=1,r&&(i=2&o[0]?r.return:o[0]?r.throw||((i=r.return)&&i.call(r),0):r.next)&&!(i=i.call(r,o[1])).done)return i;switch(r=0,i&&(o=[2&o[0],i.value]),o[0]){case 0:case 1:i=o;break;case 4:return s.label++,{value:o[1],done:!1};case 5:s.label++,r=o[1],o=[0];continue;case 7:o=s.ops.pop(),s.trys.pop();continue;default:if(!(i=(i=s.trys).length>0&&i[i.length-1])&&(6===o[0]||2===o[0])){s=0;continue}if(3===o[0]&&(!i||o[1]>i[0]&&o[1]<i[3])){s.label=o[1];break}if(6===o[0]&&s.label<i[1]){s.label=i[1],i=o;break}if(i&&s.label<i[2]){s.label=i[2],s.ops.push(o);break}i[2]&&s.ops.pop(),s.trys.pop();continue}o=e.call(t,s)}catch(t){o=[6,t],r=0}finally{n=i=0}if(5&o[0])throw o[1];return{value:o[0]?o[1]:void 0,done:!0}}([o,u])}}},w=function(){function t(t,e){var n=this;this.token=null,this.expires=null,this.api=t,this.listener=e;window.addEventListener("message",(function(t){return E(n,void 0,void 0,(function(){return _(this,(function(e){switch(e.label){case 0:return"string"!=typeof t.data?[2]:t.data.startsWith("code:")?[4,this.set(t.data.substr("code:".length))]:[2];case 1:return e.sent(),this.win.postMessage("close","*"),[2]}}))}))}),!1)}return t.prototype.get=function(){return E(this,void 0,void 0,(function(){var t;return _(this,(function(e){switch(e.label){case 0:return[4,this.api.requests.request(l)];case 1:return t=e.sent(),this.handle(t.token?t:null),[2]}}))}))},t.prototype.init=function(){return E(this,void 0,void 0,(function(){var t;return _(this,(function(e){switch(e.label){case 0:return[4,this.api.requests.request(d)];case 1:return t=e.sent(),this.win=window.open(t.result.uri,"popUpWindow","height=500,width=400,left=100,top=100,resizable=yes,scrollbars=yes,toolbar=yes,menubar=no,location=no,directories=no, status=yes"),[2]}}))}))},t.prototype.set=function(t){return E(this,void 0,void 0,(function(){var e;return _(this,(function(n){switch(n.label){case 0:return[4,this.api.requests.request(y(t))];case 1:return e=n.sent(),this.handle(e),[2]}}))}))},t.prototype.refresh=function(){return E(this,void 0,void 0,(function(){var t;return _(this,(function(e){switch(e.label){case 0:return[4,this.api.requests.request(v)];case 1:return t=e.sent(),this.handle(t.token?t:null),[2]}}))}))},t.prototype.remove=function(){return E(this,void 0,void 0,(function(){return _(this,(function(t){switch(t.label){case 0:return[4,this.api.requests.request(g)];case 1:if("success"!==t.sent().status)throw"An error occured";return[2]}}))}))},t.prototype.handle=function(t){var e=this;t?(this.token=t.token,this.expires=new Date(t.expires),this.listener.spotifyAuthenticated(!0,t.token),setTimeout((function(){return E(e,void 0,void 0,(function(){return _(this,(function(e){switch(e.label){case 0:return this.token!==t.token?[2]:[4,this.refresh()];case 1:return e.sent(),[2]}}))}))}),this.expires.getTime()-Date.now())):this.listener.spotifyAuthenticated(!1)},t}(),b=function(t){this.events=t},T=(p=function(t,e){return(p=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(t,e){t.__proto__=e}||function(t,e){for(var n in e)e.hasOwnProperty(n)&&(t[n]=e[n])})(t,e)},function(t,e){function n(){this.constructor=t}p(t,e),t.prototype=null===e?Object.create(e):(n.prototype=e.prototype,new n)}),m=function(t,e,n,r){return new(n||(n=Promise))((function(i,o){function s(t){try{a(r.next(t))}catch(t){o(t)}}function u(t){try{a(r.throw(t))}catch(t){o(t)}}function a(t){var e;t.done?i(t.value):(e=t.value,e instanceof n?e:new n((function(t){t(e)}))).then(s,u)}a((r=r.apply(t,e||[])).next())}))},R=function(t,e){var n,r,i,o,s={label:0,sent:function(){if(1&i[0])throw i[1];return i[1]},trys:[],ops:[]};return o={next:u(0),throw:u(1),return:u(2)},"function"==typeof Symbol&&(o[Symbol.iterator]=function(){return this}),o;function u(o){return function(u){return function(o){if(n)throw new TypeError("Generator is already executing.");for(;s;)try{if(n=1,r&&(i=2&o[0]?r.return:o[0]?r.throw||((i=r.return)&&i.call(r),0):r.next)&&!(i=i.call(r,o[1])).done)return i;switch(r=0,i&&(o=[2&o[0],i.value]),o[0]){case 0:case 1:i=o;break;case 4:return s.label++,{value:o[1],done:!1};case 5:s.label++,r=o[1],o=[0];continue;case 7:o=s.ops.pop(),s.trys.pop();continue;default:if(!(i=(i=s.trys).length>0&&i[i.length-1])&&(6===o[0]||2===o[0])){s=0;continue}if(3===o[0]&&(!i||o[1]>i[0]&&o[1]<i[3])){s.label=o[1];break}if(6===o[0]&&s.label<i[1]){s.label=i[1],i=o;break}if(i&&s.label<i[2]){s.label=i[2],s.ops.push(o);break}i[2]&&s.ops.pop(),s.trys.pop();continue}o=e.call(t,s)}catch(t){o=[6,t],r=0}finally{n=i=0}if(5&o[0])throw o[1];return{value:o[0]?o[1]:void 0,done:!0}}([o,u])}}},P=function(t){function e(e,n){var r=t.call(this,e)||this;return r.events=e,r.api=n,r}return T(e,t),e.prototype.init=function(t){var e=this;this.player&&this.player.disconnect(),this.token=t;var n=new Spotify.Player({name:"Twasi-Panel",getOAuthToken:function(e){e(t)}});n.addListener("initialization_error",(function(t){var e=t.message;window.TSRI.reports.spotifyReports.push({type:"initialization_error",message:e})})),n.addListener("authentication_error",(function(t){var n=t.message;return m(e,void 0,void 0,(function(){return R(this,(function(t){return window.TSRI.reports.spotifyReports.push({type:"authentication_error",message:n}),[2]}))}))})),n.addListener("account_error",(function(t){var n=t.message;return m(e,void 0,void 0,(function(){return R(this,(function(t){return window.TSRI.reports.spotifyReports.push({type:"account_error",message:n}),[2]}))}))})),n.addListener("playback_error",(function(t){var n=t.message;return m(e,void 0,void 0,(function(){return R(this,(function(t){return window.TSRI.reports.spotifyReports.push({type:"playback_error",message:n}),[2]}))}))})),n.addListener("player_state_changed",(function(t){return m(e,void 0,void 0,(function(){return R(this,(function(e){return t?(t.position&&t.duration?this.events.onPositionChange(t.position,t.duration):t.paused||this.events.onPositionChange(0,this.song.duration),t.paused?this.events.onPause():this.events.onPlay(this.song),t.paused&&t.disallows.resuming&&t.position&&t.duration&&t.position/t.duration>.98&&this.events.onNext(),[2]):[2]}))}))})),n.addListener("ready",(function(t){var n=t.device_id;e.id=n})),n.addListener("not_ready",(function(t){t.device_id;return m(e,void 0,void 0,(function(){return R(this,(function(t){switch(t.label){case 0:return[4,window.TSRI.spotifyAuth.refresh()];case 1:return t.sent(),[2]}}))}))})),this.player=n,n.connect()},e.prototype.pause=function(){this.player.pause()},e.prototype.play=function(t){return m(this,void 0,void 0,(function(){return R(this,(function(e){switch(e.label){case 0:return this.song&&this.song.uri===t.uri?(this.player.resume(),[3,3]):[3,1];case 1:return this.song=t,[4,fetch("https://api.spotify.com/v1/me/player/play?device_id="+this.id,{method:"PUT",body:JSON.stringify({uris:[t.uri]}),headers:{"Content-Type":"application/json",Authorization:"Bearer "+this.token}})];case 2:e.sent(),e.label=3;case 3:return[2]}}))}))},e.prototype.seek=function(t){this.player.seek(this.song.duration*t)},e.prototype.setVolume=function(t){this.player.setVolume(t)},e.prototype.resume=function(){this.player.resume()},e}(b),A=function(){var t=function(e,n){return(t=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(t,e){t.__proto__=e}||function(t,e){for(var n in e)e.hasOwnProperty(n)&&(t[n]=e[n])})(e,n)};return function(e,n){function r(){this.constructor=e}t(e,n),e.prototype=null===n?Object.create(n):(r.prototype=n.prototype,new r)}}(),O=function(t){function e(e,n,r){var i=t.call(this,e)||this;if(!r)throw"API_NOT_READY";i.player=new YT.Player("youtube-player",{events:{onStateChange:function(t){return i.onUpdate(t)}}});var o=function(){i.setPos(),setTimeout(o,500)};return o(),i}return A(e,t),e.prototype.setPos=function(){try{this.events.onPositionChange(1e3*this.player.getCurrentTime(),1e3*this.player.getDuration())}catch(t){}},e.prototype.onUpdate=function(t){1===t.data?this.events.onPlay():0===t.data?this.events.onNext():this.events.onPause(),this.setPos()},e.prototype.pause=function(){this.player.pauseVideo()},e.prototype.play=function(t){this.player.loadVideoById(t.uri)},e.prototype.seek=function(t){this.player.seekTo(this.player.getDuration()*t)},e.prototype.setVolume=function(t){this.player.setVolume(100*t)},e.prototype.resume=function(){this.player.playVideo()},e}(b);!function(t){t[t.NONE=0]="NONE",t[t.SPOTIFY=1]="SPOTIFY",t[t.YOUTUBE=2]="YOUTUBE"}(h||(h={}));var S={topic:"twasi-songrequests/events",scope:"action",action:{type:"back"}},N=function(t,e,n,r){return new(n||(n=Promise))((function(i,o){function s(t){try{a(r.next(t))}catch(t){o(t)}}function u(t){try{a(r.throw(t))}catch(t){o(t)}}function a(t){var e;t.done?i(t.value):(e=t.value,e instanceof n?e:new n((function(t){t(e)}))).then(s,u)}a((r=r.apply(t,e||[])).next())}))},C=function(t,e){var n,r,i,o,s={label:0,sent:function(){if(1&i[0])throw i[1];return i[1]},trys:[],ops:[]};return o={next:u(0),throw:u(1),return:u(2)},"function"==typeof Symbol&&(o[Symbol.iterator]=function(){return this}),o;function u(o){return function(u){return function(o){if(n)throw new TypeError("Generator is already executing.");for(;s;)try{if(n=1,r&&(i=2&o[0]?r.return:o[0]?r.throw||((i=r.return)&&i.call(r),0):r.next)&&!(i=i.call(r,o[1])).done)return i;switch(r=0,i&&(o=[2&o[0],i.value]),o[0]){case 0:case 1:i=o;break;case 4:return s.label++,{value:o[1],done:!1};case 5:s.label++,r=o[1],o=[0];continue;case 7:o=s.ops.pop(),s.trys.pop();continue;default:if(!(i=(i=s.trys).length>0&&i[i.length-1])&&(6===o[0]||2===o[0])){s=0;continue}if(3===o[0]&&(!i||o[1]>i[0]&&o[1]<i[3])){s.label=o[1];break}if(6===o[0]&&s.label<i[1]){s.label=i[1],i=o;break}if(i&&s.label<i[2]){s.label=i[2],s.ops.push(o);break}i[2]&&s.ops.pop(),s.trys.pop();continue}o=e.call(t,s)}catch(t){o=[6,t],r=0}finally{n=i=0}if(5&o[0])throw o[1];return{value:o[0]?o[1]:void 0,done:!0}}([o,u])}}},k=function(){function t(t,e,n){var r=this;this.api=t,this.frontendEvents=e,this.song=null,this.queue=[],this.firstPlayback=!0,this.shouldPlay=!1,this.posPredicter=new M(e.position),this.spotify=new P(this.playbackProviderEvents(h.SPOTIFY),t),this.youtube=new O(this.playbackProviderEvents(h.YOUTUBE),t,n.youtubeApi),t.on("queue",(function(t){return r.setQueue(t,r.shouldPlay)}))}return t.prototype.play=function(t){return N(this,void 0,void 0,(function(){return C(this,(function(e){switch(e.label){case 0:return this.shouldPlay=!0,t?(this.song&&this.pause(),this.song=t,this.getController(t.provider).play(t),[3,4]):[3,1];case 1:return this.song?(this.firstPlayback||0===this.posPredicter.prediction?(this.firstPlayback=!1,this.play(this.song)):this.getController(this.song.provider).resume(),[3,4]):[3,2];case 2:return[4,this.next()];case 3:e.sent(),e.label=4;case 4:return this.frontendEvents.song(this.song),[2]}}))}))},t.prototype.pause=function(){this.shouldPlay=!1,this.song&&this.getController(this.song.provider).pause()},t.prototype.getController=function(t){switch(t){case h.NONE:default:return null;case h.SPOTIFY:return this.spotify;case h.YOUTUBE:return this.youtube}},t.prototype.seek=function(t){this.song&&this.getController(this.song.provider).seek(t)},t.prototype.add=function(t){this.queue.push(t),this.frontendEvents.queueUpdate(this.queue),this.posPredicter.predict||this.play()},t.prototype.setQueue=function(t,e){if(void 0===e&&(e=!0),t.length){var n=t[0];e&&!this.song||this.song&&this.song.uri!==n.uri?this.play(n):this.song&&this.song.uri===n.uri?t.shift():(this.frontendEvents.song(t[0]),this.song=n)}else this.posPredicter.resetPosition(),this.song&&this.pause(),this.song=null,this.frontendEvents.song(null),this.posPredicter.resetPosition();this.queue=t,this.frontendEvents.queueUpdate(this.queue)},t.prototype.localNext=function(){this.posPredicter.resetPosition(),this.song&&this.pause(),this.queue.length?(this.play(this.queue[0]),this.queue.shift()):(this.song=null,this.frontendEvents.song(null),this.posPredicter.resetPosition()),this.frontendEvents.queueUpdate(this.queue)},t.prototype.back=function(){return N(this,void 0,void 0,(function(){var t;return C(this,(function(e){switch(e.label){case 0:return[4,this.api.requests.request(S)];case 1:if("success"!==(t=e.sent()).status)throw t.message;return[2]}}))}))},t.prototype.next=function(){return N(this,void 0,void 0,(function(){return C(this,(function(t){switch(t.label){case 0:return[4,this.api.requests.request(s(!1))];case 1:return t.sent(),[2]}}))}))},t.prototype.skip=function(){return N(this,void 0,void 0,(function(){return C(this,(function(t){switch(t.label){case 0:return[4,this.api.requests.request(s(!0))];case 1:return t.sent(),[2]}}))}))},t.prototype.apiAdd=function(t){return N(this,void 0,void 0,(function(){return C(this,(function(e){switch(e.label){case 0:return[4,this.api.requests.request(i(t))];case 1:return e.sent(),[2]}}))}))},t.prototype.playbackProviderEvents=function(t){var e=this;return{onPause:function(){e.song&&![h.NONE,t].includes(e.song.provider)||(e.posPredicter.predict=!1,e.frontendEvents.stop())},onPlay:function(n){e.song&&e.song.provider===t&&(e.posPredicter.predict=!0,e.frontendEvents.play())},onPositionChange:function(n,r){e.song&&e.song.provider===t&&e.posPredicter.setPosition(n,r)},onNext:function(){return e.next()}}},t.prototype.loadQueue=function(t){return void 0===t&&(t=!0),N(this,void 0,void 0,(function(){var e;return C(this,(function(n){switch(n.label){case 0:return e=this.setQueue,[4,this.api.requests.request(o)];case 1:return e.apply(this,[n.sent().result,t]),[2]}}))}))},t}(),M=function(){function t(t){var e=this;this.callback=t,this.predict=!1,this.lastPosition=Date.now(),this.duration=0,this.position=0,this.prediction=0;var n=function(){e.predictNow(),setTimeout(n,500)};n()}return t.prototype.setPosition=function(t,e){this.lastPosition=Date.now(),this.position=t,this.duration=e,this.predictNow()},t.prototype.resetPosition=function(){this.setPosition(0,0)},t.prototype.predictNow=function(){var t;0!==this.duration||0!==this.position?(this.predict&&(t=(this.position+(Date.now()-this.lastPosition))/this.duration),"number"==typeof t&&(this.prediction=t>1?1:t),this.callback(this.prediction)):this.callback(0)},t}(),q=function(t,e){return{topic:"twasi-songrequests/events",scope:"action",action:{type:"search",provider:h.SPOTIFY,token:t,query:e}}},L=function(t){return{topic:"twasi-songrequests/events",scope:"action",action:{type:"search",provider:h.YOUTUBE,query:t}}},x=function(t,e,n,r){return new(n||(n=Promise))((function(i,o){function s(t){try{a(r.next(t))}catch(t){o(t)}}function u(t){try{a(r.throw(t))}catch(t){o(t)}}function a(t){var e;t.done?i(t.value):(e=t.value,e instanceof n?e:new n((function(t){t(e)}))).then(s,u)}a((r=r.apply(t,e||[])).next())}))},I=function(t,e){var n,r,i,o,s={label:0,sent:function(){if(1&i[0])throw i[1];return i[1]},trys:[],ops:[]};return o={next:u(0),throw:u(1),return:u(2)},"function"==typeof Symbol&&(o[Symbol.iterator]=function(){return this}),o;function u(o){return function(u){return function(o){if(n)throw new TypeError("Generator is already executing.");for(;s;)try{if(n=1,r&&(i=2&o[0]?r.return:o[0]?r.throw||((i=r.return)&&i.call(r),0):r.next)&&!(i=i.call(r,o[1])).done)return i;switch(r=0,i&&(o=[2&o[0],i.value]),o[0]){case 0:case 1:i=o;break;case 4:return s.label++,{value:o[1],done:!1};case 5:s.label++,r=o[1],o=[0];continue;case 7:o=s.ops.pop(),s.trys.pop();continue;default:if(!(i=(i=s.trys).length>0&&i[i.length-1])&&(6===o[0]||2===o[0])){s=0;continue}if(3===o[0]&&(!i||o[1]>i[0]&&o[1]<i[3])){s.label=o[1];break}if(6===o[0]&&s.label<i[1]){s.label=i[1],i=o;break}if(i&&s.label<i[2]){s.label=i[2],s.ops.push(o);break}i[2]&&s.ops.pop(),s.trys.pop();continue}o=e.call(t,s)}catch(t){o=[6,t],r=0}finally{n=i=0}if(5&o[0])throw o[1];return{value:o[0]?o[1]:void 0,done:!0}}([o,u])}}},D=function(){function t(t,e){this.api=t,this.spotify=e}return t.prototype.onSpotify=function(t){return x(this,void 0,void 0,(function(){var e;return I(this,(function(n){switch(n.label){case 0:return[4,this.api.requests.request(q(this.spotify.token,t))];case 1:if("success"===(e=n.sent()).status)return[2,e.result];throw"An error occurred."}}))}))},t.prototype.onYouTube=function(t){return x(this,void 0,void 0,(function(){var e;return I(this,(function(n){switch(n.label){case 0:return[4,this.api.requests.request(L(t),6e3)];case 1:if("success"===(e=n.sent()).status)return[2,e.result];throw"An error occurred."}}))}))},t}();n.d(e,"a",(function(){return V}));var U=function(t,e,n,r){return new(n||(n=Promise))((function(i,o){function s(t){try{a(r.next(t))}catch(t){o(t)}}function u(t){try{a(r.throw(t))}catch(t){o(t)}}function a(t){var e;t.done?i(t.value):(e=t.value,e instanceof n?e:new n((function(t){t(e)}))).then(s,u)}a((r=r.apply(t,e||[])).next())}))},Y=function(t,e){var n,r,i,o,s={label:0,sent:function(){if(1&i[0])throw i[1];return i[1]},trys:[],ops:[]};return o={next:u(0),throw:u(1),return:u(2)},"function"==typeof Symbol&&(o[Symbol.iterator]=function(){return this}),o;function u(o){return function(u){return function(o){if(n)throw new TypeError("Generator is already executing.");for(;s;)try{if(n=1,r&&(i=2&o[0]?r.return:o[0]?r.throw||((i=r.return)&&i.call(r),0):r.next)&&!(i=i.call(r,o[1])).done)return i;switch(r=0,i&&(o=[2&o[0],i.value]),o[0]){case 0:case 1:i=o;break;case 4:return s.label++,{value:o[1],done:!1};case 5:s.label++,r=o[1],o=[0];continue;case 7:o=s.ops.pop(),s.trys.pop();continue;default:if(!(i=(i=s.trys).length>0&&i[i.length-1])&&(6===o[0]||2===o[0])){s=0;continue}if(3===o[0]&&(!i||o[1]>i[0]&&o[1]<i[3])){s.label=o[1];break}if(6===o[0]&&s.label<i[1]){s.label=i[1],i=o;break}if(i&&s.label<i[2]){s.label=i[2],s.ops.push(o);break}i[2]&&s.ops.pop(),s.trys.pop();continue}o=e.call(t,s)}catch(t){o=[6,t],r=0}finally{n=i=0}if(5&o[0])throw o[1];return{value:o[0]?o[1]:void 0,done:!0}}([o,u])}}},V=function(){function t(){this.status=j,this.reports={spotifyReports:[]}}return t.prototype.init=function(t,e,n){var i=this;this.events=n,this.API=new c(e,t,{statusChanged:function(t){return U(i,void 0,void 0,(function(){return Y(this,(function(e){switch(e.label){case 0:return this.status.api=0===t,this.e().initialized(this.status),this.status.api?[4,this.spotifyAuth.get()]:[3,2];case 1:e.sent(),e.label=2;case 2:return t===r.CONNECTED&&this.loadQueue(!1),[2]}}))}))}}),this.playback=new k(this.API,n,this.status),this.search=new D(this.API,this.playback.spotify),this.spotifyAuth=new w(this.API,{statusChanged:this.spotifyStatus,spotifyAuthenticated:function(t,e){i.e().enableSpotifyAuth(!t),e&&i.playback.spotify.init(e)}}),this.e().initialized(this.status)},t.prototype.spotifyStatus=function(t){this.status.spotify=t,this.e().initialized(this.status)},t.prototype.youtubeApiReady=function(){this.status.youtubeApi=!0,this.e().initialized(this.status)},t.prototype.spotifyApiReady=function(){this.status.spotifyApi=!0,this.e().initialized(this.status)},t.prototype.e=function(){return this.events?this.events:G},t.prototype.loadQueue=function(t){return void 0===t&&(t=!0),U(this,void 0,void 0,(function(){return Y(this,(function(e){switch(e.label){case 0:return[4,this.playback.loadQueue(t)];case 1:return e.sent(),[2]}}))}))},t.prototype.report=function(t){return U(this,void 0,void 0,(function(){return Y(this,(function(e){switch(e.label){case 0:return this.reports.reason=t,[4,this.API.requests.request((n=this.reports,{topic:"twasi-songrequests/events",scope:"action",action:{type:"report",report:n}}))];case 1:return e.sent(),[2]}var n}))}))},t}(),G={queueUpdate:function(t){},enableSpotifyAuth:function(t){console.log("Spotify Authentication is now %s.",t?"enabled":"disabled")},initialized:function(t){},pause:function(){console.log("PAUSE")},play:function(){console.log("PLAY")},position:function(t){console.log("POS: "+t)},song:function(t){console.log("SONG: "+t.name)},stop:function(){console.log("STOP")},volume:function(t){console.log("VOLUME: "+t)}},j={api:!1,spotifyApi:!1,spotify:!1,youtubeApi:!1,youtube:!1}},function(t,e,n){"use strict";n.r(e),function(t){var e=new(n(0).a),r=window;r.TSRI=e,r.onSpotifyWebPlaybackSDKReady=function(){return e.spotifyApiReady()},(window||t).onYouTubeIframeAPIReady=function(){return e.youtubeApiReady()},n(3),n(4)}.call(this,n(2))},function(t,e){var n;n=function(){return this}();try{n=n||new Function("return this")()}catch(t){"object"==typeof window&&(n=window)}t.exports=n},function(t,e){!function(t){function e(r){if(n[r])return n[r].exports;var i=n[r]={i:r,l:!1,exports:{}};return t[r].call(i.exports,i,i.exports,e),i.l=!0,i.exports}var n={};e.m=t,e.c=n,e.d=function(t,n,r){e.o(t,n)||Object.defineProperty(t,n,{configurable:!1,enumerable:!0,get:r})},e.n=function(t){var n=t&&t.__esModule?function(){return t.default}:function(){return t};return e.d(n,"a",n),n},e.o=function(t,e){return Object.prototype.hasOwnProperty.call(t,e)},e.p="",e(e.s=2)}([function(t,e,n){"use strict";var r={SPOTIFY_MESSAGE:"SP_MESSAGE",ACCOUNT_ERROR:"ACCOUNT_ERROR",AUTH_ERROR:"AUTH_ERROR",CONNECT:"CONNECT",CONNECTED:"CONNECTED",CURRENT_STATE:"CURRENT_STATE",DISCONNECT:"DISCONNECT",EVENT:"EVENT",GET_CURRENT_STATE:"GET_CURRENT_STATE",GET_TOKEN:"GET_TOKEN",GET_VOLUME:"GET_VOLUME",INIT:"INIT",LOADED:"LOADED",NEXT_TRACK:"NEXT_TRACK",PAUSE:"PAUSE",PLAYBACK_ERROR:"PLAYBACK_ERROR",PLAYER_INIT_ERROR:"PLAYER_INIT_ERROR",PLAYER_READY:"PLAYER_READY",PLAYER_NOT_READY:"PLAYER_NOT_READY",PLAYER_STATE_CHANGED:"PLAYER_STATE_CHANGED",PREV_TRACK:"PREV_TRACK",RESUME:"RESUME",SEEK:"SEEK",SET_NAME:"SET_NAME",SET_VOLUME:"SET_VOLUME",TOGGLE_PLAY:"TOGGLE_PLAY",TOKEN:"TOKEN",VOLUME:"VOLUME",accountError:function(t){return this._createEventMessage(r.ACCOUNT_ERROR,{message:t})},authError:function(t){return this._createEventMessage(r.AUTH_ERROR,t)},playbackError:function(t){return this._createEventMessage(r.PLAYBACK_ERROR,t)},playerReady:function(t){return this._createEventMessage(r.PLAYER_READY,t)},playerNotReady:function(t){return this._createEventMessage(r.PLAYER_NOT_READY,t)},connect:function(){return this._createMessage(r.CONNECT)},connected:function(t,e){return this._createMessage(r.CONNECTED,{connected:t,ref:e})},disconnect:function(){return this._createMessage(r.DISCONNECT)},init:function(t){return this._createMessage(r.INIT,t)},playerInitError:function(t){return this._createEventMessage(r.PLAYER_INIT_ERROR,t)},getToken:function(){return this._createMessage(r.GET_TOKEN)},token:function(t,e){return this._createMessage(r.TOKEN,{token:t,ref:e})},pause:function(){return this._createMessage(r.PAUSE)},resume:function(){return this._createMessage(r.RESUME)},togglePlay:function(){return this._createMessage(r.TOGGLE_PLAY)},seek:function(t){return this._createMessage(r.SEEK,t)},nextTrack:function(t){return this._createMessage(r.NEXT_TRACK,t)},previousTrack:function(t){return this._createMessage(r.PREV_TRACK,t)},getCurrentState:function(){return this._createMessage(r.GET_CURRENT_STATE)},currentState:function(t,e){return this._createMessage(r.CURRENT_STATE,{state:t,ref:e})},playerStateChanged:function(t){return this._createEventMessage(r.PLAYER_STATE_CHANGED,t)},getVolume:function(){return this._createMessage(r.GET_VOLUME)},volume:function(t,e){return this._createMessage(r.VOLUME,{volume:t,ref:e})},setVolume:function(t){return this._createMessage(r.SET_VOLUME,t)},setName:function(t){return this._createMessage(r.SET_NAME,t)},embeddedLoaded:function(){return this._createMessage(r.LOADED)},_createEventMessage:function(t,e){return this._createMessage(r.EVENT,{name:t,eventData:e})},_createMessage:function(t,e){return{type:r.SPOTIFY_MESSAGE,body:{topic:t,data:e?JSON.parse(JSON.stringify(e)):null}}}};t.exports=r},function(t,e){var n;n=function(){return this}();try{n=n||Function("return this")()||(0,eval)("this")}catch(t){"object"==typeof window&&(n=window)}t.exports=n},function(t,e,n){"use strict";function r(){var t=n(3);if(!document.body)throw new Error("Document doesn't have a body");if(window.Spotify={Player:t.setupPlayerEnv(window)},window.onSpotifyWebPlaybackSDKReady)window.onSpotifyWebPlaybackSDKReady();else{if(!window.onSpotifyPlayerAPIReady)throw new Error("onSpotifyWebPlaybackSDKReady is not defined");window.onSpotifyPlayerAPIReady()}}"complete"===document.readyState?r():window.addEventListener("load",r)},function(t,e,n){"use strict";var r=n(4),i=n(5),o=n(0),s=n(6);t.exports.setupPlayerEnv=function(t,e){var n,u="https://sdk.scdn.co/embedded/index.html",a=i.defer(),c=new r,p=e||function(e){var n=t.document.createElement("iframe");return n.src=e,n.setAttribute("alt","Audio Playback Container"),n.setAttribute("tabIndex","-1"),n.style.setProperty("position","absolute","important"),n.style.setProperty("left","-1px","important"),n.style.setProperty("width","0","important"),n.style.setProperty("height","0","important"),n.style.setProperty("border","none","important"),n.style.setProperty("outline","none","important"),n.allow="encrypted-media; autoplay",t.document.body.appendChild(n),n.contentWindow},h=function(e){e===o.LOADED&&(c.stopListening(t,h),a.resolve())};c.listen(t,h),n=p(u);var f=function(e){this._options=this._sanitizeOptions(e),this._handleMessages=this._handleMessages.bind(this),this._messageHandlers={},this._eventListeners={},this._setupMessageHandlers(),this._connectionRequests={},this._getCurrentStateRequests={},this._getVolumeRequests={},this.isLoaded=a.promise.then(function(){c.listen(t,this._handleMessages),this._sendMessage(o.init(this._options))}.bind(this))};return f.prototype._sanitizeOptions=function(e){var n=t&&t.location&&t.location.hostname||"";return{name:e.name||n,id:s.get(),getOAuthToken:e.getOAuthToken||e.getOauthToken,volume:e.volume||1}},f.prototype._setupMessageHandlers=function(){this._messageHandlers[o.GET_TOKEN]=this._onGetToken.bind(this),this._messageHandlers[o.EVENT]=this._onEvent.bind(this),this._messageHandlers[o.CONNECTED]=this._onConnected.bind(this),this._messageHandlers[o.CURRENT_STATE]=this._onCurrentState.bind(this),this._messageHandlers[o.VOLUME]=this._onVolume.bind(this)},f.prototype.connect=function(){return this.isLoaded.then(function(){var t=this._sendMessage(o.connect());return this._connectionRequests[t]=i.defer(),this._connectionRequests[t].promise}.bind(this))},f.prototype.on=function(t,e){if(!t)throw new TypeError("Argument `eventName` is required.");if("function"!=typeof e)throw new TypeError("Argument `listener` must be a function.");return this._eventListeners[t]=this._eventListeners[t]||[],-1===this._eventListeners[t].indexOf(e)&&(this._eventListeners[t].push(e),!0)},f.prototype.addListener=function(t,e){return this.on(t,e)},f.prototype.removeListener=function(t,e){if(!t)throw new TypeError("Argument `eventName` is required.");if(1===arguments.length)return this._eventListeners[t]=[],!0;if("function"!=typeof e)throw new TypeError("Argument `listener` must be a function.");var n=this._eventListeners[t];return!(!n||!n.length||(this._eventListeners[t]=n.filter((function(t){return t!==e})),0))},f.prototype.getCurrentState=function(){return this.isLoaded.then(function(){var t=this._sendMessage(o.getCurrentState());return this._getCurrentStateRequests[t]=i.defer(),this._getCurrentStateRequests[t].promise}.bind(this))},f.prototype.getVolume=function(){return this.isLoaded.then(function(){var t=this._sendMessage(o.getVolume());return this._getVolumeRequests[t]=i.defer(),this._getVolumeRequests[t].promise}.bind(this))},f.prototype.setName=function(t){return this._sendMessageWhenLoaded(o.setName(t))},f.prototype.setVolume=function(t){return this._sendMessageWhenLoaded(o.setVolume(t))},f.prototype.pause=function(){return this._sendMessageWhenLoaded(o.pause())},f.prototype.resume=function(){return this._sendMessageWhenLoaded(o.resume())},f.prototype.togglePlay=function(){return this._sendMessageWhenLoaded(o.togglePlay())},f.prototype.seek=function(t){return this._sendMessageWhenLoaded(o.seek(t))},f.prototype.previousTrack=function(t){return this._sendMessageWhenLoaded(o.previousTrack(t))},f.prototype.nextTrack=function(t){return this._sendMessageWhenLoaded(o.nextTrack(t))},f.prototype.disconnect=function(){return this._sendMessageWhenLoaded(o.disconnect())},f.prototype._getListeners=function(){var t={};return t[o.ACCOUNT_ERROR]="account_error",t[o.AUTH_ERROR]="authentication_error",t[o.PLAYBACK_ERROR]="playback_error",t[o.PLAYER_INIT_ERROR]="initialization_error",t[o.PLAYER_READY]="ready",t[o.PLAYER_NOT_READY]="not_ready",t[o.PLAYER_STATE_CHANGED]="player_state_changed",function(e){return this._eventListeners[t[e]]||[]}}(),f.prototype._onEvent=function(t){this._getListeners(t.name).forEach((function(e){e(t.eventData)}))},f.prototype._onGetToken=function(t,e){var n=this._options.getOAuthToken;if("function"!=typeof n){var r="getOAuthToken is not a function";if(this._getListeners(o.PLAYER_INIT_ERROR).length)return void this._onEvent({name:o.PLAYER_INIT_ERROR,eventData:{message:r}});throw new Error(r)}new i(n).then(function(t){this._sendMessage(o.token(t,e))}.bind(this))},f.prototype._onConnected=function(t){t.ref in this._connectionRequests&&(this._connectionRequests[t.ref].resolve(t.connected),delete this._connectionRequests[t.ref])},f.prototype._onCurrentState=function(t){t.ref in this._getCurrentStateRequests&&(this._getCurrentStateRequests[t.ref].resolve(t.state),delete this._getCurrentStateRequests[t.ref])},f.prototype._onVolume=function(t){t.ref in this._getVolumeRequests&&(this._getVolumeRequests[t.ref].resolve(t.volume),delete this._getVolumeRequests[t.ref])},f.prototype._handleMessages=function(t,e,n){t in this._messageHandlers&&this._messageHandlers[t](e,n)},f.prototype._sendMessage=function(t){return c.send(n,t,u)},f.prototype._sendMessageWhenLoaded=function(t){return this.isLoaded.then(this._sendMessage.bind(this,t))},f}},function(t,e,n){"use strict";var r=n(0),i=function(){this._onMessageCallback=function(){},this._receiveMessage=this._receiveMessage.bind(this),this._messageId=0};i.prototype.listen=function(t,e){this._onMessageCallback=e,t.addEventListener("message",this._receiveMessage)},i.prototype.stopListening=function(t){t.removeEventListener("message",this._receiveMessage)},i.prototype.send=function(t,e,n){return t.postMessage(this._addMessageId(e),n||"*"),e.seq},i.prototype._addMessageId=function(t){return t.seq=this._messageId++,t},i.prototype._receiveMessage=function(t){var e=t.data;e.type===r.SPOTIFY_MESSAGE&&e.body&&e.body.topic&&this._onMessageCallback(e.body.topic,e.body.data,e.seq)},t.exports=i},function(t,e,n){"use strict";(function(e){var n,r=e.Promise;if(!r)throw new Error("Fatal: no Promise implementation available.");(n=Object.defineProperty?function(t,e,n){return t[e]?t:(Object.defineProperty(t,e,{value:n,configurable:!0,writable:!0}),t)}:function(t,e,n){return t[e]?t:(t[e]=n,t)})(r,"defer",(function(){var t={};return t.promise=new r((function(e,n){t.resolve=e,t.reject=n})),t})),n(r.prototype,"spread",(function(t,e){return this.then((function(t){return r.all(t)})).then((function(e){return 1===e.length?t(e[0]):t.apply(this,e)}),e)})),t.exports=r}).call(e,n(1))},function(t,e,n){"use strict";(function(e){function r(){var t=new e.Uint8Array(16);return e.crypto.getRandomValues(t),o.toHex(t.join(""),40).slice(0,40)}function i(){for(var t=new Array(27),e=t.length;e--;)t[e]=Math.floor(8*Math.random());return o.toHex(t.join(""),40)}var o=n(7),s="function"==typeof e.Uint8Array&&void 0!==e.crypto&&"function"==typeof e.crypto.getRandomValues?r:i,u="_spharmony_device_id";t.exports={get:function(t,n){if(t&&"string"==typeof t)return t;if(n)return s();var r=e.localStorage.getItem(u);return r||(r=s(),e.localStorage.setItem(u,r)),r},generate:s,generateWithCrypto:r,generateWithRandom:i}}).call(e,n(1))},function(t,e,n){"use strict";function r(t,e,n){for(var r=0,i=0;i<t.length;++i){var o=t[i]*e+r;t[i]=o%n,r=~~(o/n)}for(;r;)t.push(r%n),r=~~(r/n)}function i(t,e,n,r){var i,o,s=0;for(o=0;o<e.length;++o)i=~~t[o]+e[o]*n+s,t[o]=i%r,s=~~(i/r);for(;s;)i=~~t[o]+s,t[o]=i%r,s=~~(i/r),++o}function o(t,e,n){for(var o=[0],s=[1],u=0;u<t.length;++u)i(o,s,t[u],n),r(s,e,n);return o}function s(t,e){for(var n=[],r=0;r<t.length;++r)n.push(e[t[r]]);return n.reverse()}function u(t,e){for(;t.length<e;)t.push(0);return t}var a="0123456789abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ",c={},p={};!function(){var t,e;for(t=0,e=a.length;t<e;++t)p[a[t]]=t;for(t=0;t<16;++t)c["0123456789abcdef"[t]]=t;for(t=0;t<16;++t)c["0123456789ABCDEF"[t]]=t}(),t.exports={fromBytes:function(t,e){return s(u(o(t.slice(0).reverse(),256,62),e),a).join("")},toBytes:function(t,e){return u(o(s(t,p),62,256),e).reverse()},toHex:function(t,e){return s(u(o(s(t,p),62,16),e),a).join("")},fromHex:function(t,e){return s(u(o(s(t,c),16,62),e),a).join("")}}}])},function(t,e){if(!window.YT)var n={loading:0,loaded:0};if(!window.YTConfig)var r={host:"http://www.youtube.com"};n.loading||(n.loading=1,function(){var t=[];n.ready=function(e){n.loaded?e():t.push(e)},window.onYTReady=function(){n.loaded=1;for(var e=0;e<t.length;e++)try{t[e]()}catch(t){}},n.setConfig=function(t){for(var e in t)t.hasOwnProperty(e)&&(r[e]=t[e])};var e=document.createElement("script");e.type="text/javascript",e.id="www-widgetapi-script",e.src="https://s.ytimg.com/yts/jsbin/www-widgetapi-vflUFVyEP/www-widgetapi.js",e.async=!0;var i=document.currentScript;if(i){var o=i.nonce||i.getAttribute("nonce");o&&e.setAttribute("nonce",o)}var s=document.getElementsByTagName("script")[0];s.parentNode.insertBefore(e,s)}())}]);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,