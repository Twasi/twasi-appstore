!function(t){var e={};function n(i){if(e[i])return e[i].exports;var o=e[i]={i:i,l:!1,exports:{}};return t[i].call(o.exports,o,o.exports,n),o.l=!0,o.exports}n.m=t,n.c=e,n.d=function(t,e,i){n.o(t,e)||Object.defineProperty(t,e,{enumerable:!0,get:i})},n.r=function(t){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(t,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(t,"__esModule",{value:!0})},n.t=function(t,e){if(1&e&&(t=n(t)),8&e)return t;if(4&e&&"object"==typeof t&&t&&t.__esModule)return t;var i=Object.create(null);if(n.r(i),Object.defineProperty(i,"default",{enumerable:!0,value:t}),2&e&&"string"!=typeof t)for(var o in t)n.d(i,o,function(e){return t[e]}.bind(null,o));return i},n.n=function(t){var e=t&&t.__esModule?function(){return t.default}:function(){return t};return n.d(e,"a",e),e},n.o=function(t,e){return Object.prototype.hasOwnProperty.call(t,e)},n.p="",n(n.s=1)}([function(t,e,n){"use strict";var i,o=function(t,e,n,i){return new(n||(n=Promise))((function(o,r){function s(t){try{a(i.next(t))}catch(t){r(t)}}function u(t){try{a(i.throw(t))}catch(t){r(t)}}function a(t){var e;t.done?o(t.value):(e=t.value,e instanceof n?e:new n((function(t){t(e)}))).then(s,u)}a((i=i.apply(t,e||[])).next())}))},r=function(t,e){var n,i,o,r,s={label:0,sent:function(){if(1&o[0])throw o[1];return o[1]},trys:[],ops:[]};return r={next:u(0),throw:u(1),return:u(2)},"function"==typeof Symbol&&(r[Symbol.iterator]=function(){return this}),r;function u(r){return function(u){return function(r){if(n)throw new TypeError("Generator is already executing.");for(;s;)try{if(n=1,i&&(o=2&r[0]?i.return:r[0]?i.throw||((o=i.return)&&o.call(i),0):i.next)&&!(o=o.call(i,r[1])).done)return o;switch(i=0,o&&(r=[2&r[0],o.value]),r[0]){case 0:case 1:o=r;break;case 4:return s.label++,{value:r[1],done:!1};case 5:s.label++,i=r[1],r=[0];continue;case 7:r=s.ops.pop(),s.trys.pop();continue;default:if(!(o=(o=s.trys).length>0&&o[o.length-1])&&(6===r[0]||2===r[0])){s=0;continue}if(3===r[0]&&(!o||r[1]>o[0]&&r[1]<o[3])){s.label=r[1];break}if(6===r[0]&&s.label<o[1]){s.label=o[1],o=r;break}if(o&&s.label<o[2]){s.label=o[2],s.ops.push(r);break}o[2]&&s.ops.pop(),s.trys.pop();continue}r=e.call(t,s)}catch(t){r=[6,t],i=0}finally{n=o=0}if(5&r[0])throw r[1];return{value:r[0]?r[1]:void 0,done:!0}}([r,u])}}},s=function(){function t(t,e,n){this.api=t,this.jwt=e,this.statusListener=n,this.connect()}return t.prototype.connect=function(){var t=this;setTimeout((function(){t.connect()}),3e3),this.client&&this.client.OPEN||(this.client=new WebSocket(this.api),this.client.onopen=function(){return t.authorize()},this.client.onclose=function(){t.statusListener.statusChanged(i.DISCONNECTED)},this.requests=new c(this.client))},t.prototype.authorize=function(){return o(this,void 0,void 0,(function(){var t;return r(this,(function(e){switch(e.label){case 0:return[4,this.requests.request({topic:"auth",scope:"action",action:{type:"JWT_TOKEN",token:this.jwt}})];case 1:return t=e.sent(),this.statusListener.statusChanged("success"===t.status?i.CONNECTED:i.UNAUTHORIZED),[2]}}))}))},t}();!function(t){t[t.CONNECTED=0]="CONNECTED",t[t.DISCONNECTED=1]="DISCONNECTED",t[t.UNAUTHORIZED=2]="UNAUTHORIZED"}(i||(i={}));var u,a,c=function(){function t(t){var e=this;this.count=0,this.pending=new Map,this.client=t,this.client.onmessage=function(t){var n=JSON.parse(t.data);e.pending.has(n.ref)&&(e.pending.get(n.ref)(n.result),e.pending.delete(n.ref))}}return t.prototype.request=function(t,e){var n=this;return void 0===e&&(e=3e3),t.ref||(t.ref=this.newRef()),new Promise((function(i,o){n.pending.set(t.ref,i),n.client.send(JSON.stringify(t)),setTimeout((function(){n.pending.has(t.ref)&&(n.pending.delete(t.ref),o("Timed Out"))}),e)}))},t.prototype.newRef=function(){return(this.count++).toString()},t}(),f={topic:"twasi-songrequests/spotify-credentials",scope:"action",action:{type:"get"}},p={topic:"twasi-songrequests/spotify-credentials",scope:"action",action:{type:"init"}},h=function(t){return{topic:"twasi-songrequests/spotify-credentials",scope:"action",action:{type:"set",code:t}}},l={topic:"twasi-songrequests/spotify-credentials",scope:"action",action:{type:"refresh"}},d=function(t,e,n,i){return new(n||(n=Promise))((function(o,r){function s(t){try{a(i.next(t))}catch(t){r(t)}}function u(t){try{a(i.throw(t))}catch(t){r(t)}}function a(t){var e;t.done?o(t.value):(e=t.value,e instanceof n?e:new n((function(t){t(e)}))).then(s,u)}a((i=i.apply(t,e||[])).next())}))},y=function(t,e){var n,i,o,r,s={label:0,sent:function(){if(1&o[0])throw o[1];return o[1]},trys:[],ops:[]};return r={next:u(0),throw:u(1),return:u(2)},"function"==typeof Symbol&&(r[Symbol.iterator]=function(){return this}),r;function u(r){return function(u){return function(r){if(n)throw new TypeError("Generator is already executing.");for(;s;)try{if(n=1,i&&(o=2&r[0]?i.return:r[0]?i.throw||((o=i.return)&&o.call(i),0):i.next)&&!(o=o.call(i,r[1])).done)return o;switch(i=0,o&&(r=[2&r[0],o.value]),r[0]){case 0:case 1:o=r;break;case 4:return s.label++,{value:r[1],done:!1};case 5:s.label++,i=r[1],r=[0];continue;case 7:r=s.ops.pop(),s.trys.pop();continue;default:if(!(o=(o=s.trys).length>0&&o[o.length-1])&&(6===r[0]||2===r[0])){s=0;continue}if(3===r[0]&&(!o||r[1]>o[0]&&r[1]<o[3])){s.label=r[1];break}if(6===r[0]&&s.label<o[1]){s.label=o[1],o=r;break}if(o&&s.label<o[2]){s.label=o[2],s.ops.push(r);break}o[2]&&s.ops.pop(),s.trys.pop();continue}r=e.call(t,s)}catch(t){r=[6,t],i=0}finally{n=o=0}if(5&r[0])throw r[1];return{value:r[0]?r[1]:void 0,done:!0}}([r,u])}}},g=function(){function t(t,e){var n=this;this.token=null,this.expires=null,this.api=t,this.listener=e;window.addEventListener("message",(function(t){return d(n,void 0,void 0,(function(){return y(this,(function(e){switch(e.label){case 0:return"string"!=typeof t.data?[2]:t.data.startsWith("code:")?[4,this.set(t.data.substr("code:".length))]:[2];case 1:return e.sent(),this.win.postMessage("close","*"),[2]}}))}))}),!1)}return t.prototype.get=function(){return d(this,void 0,void 0,(function(){var t;return y(this,(function(e){switch(e.label){case 0:return[4,this.api.requests.request(f)];case 1:return t=e.sent(),this.handle(t.token?t:null),[2]}}))}))},t.prototype.init=function(){return d(this,void 0,void 0,(function(){var t;return y(this,(function(e){switch(e.label){case 0:return[4,this.api.requests.request(p)];case 1:return t=e.sent(),this.win=window.open(t.result.uri,"popUpWindow","height=500,width=400,left=100,top=100,resizable=yes,scrollbars=yes,toolbar=yes,menubar=no,location=no,directories=no, status=yes"),[2]}}))}))},t.prototype.set=function(t){return d(this,void 0,void 0,(function(){var e;return y(this,(function(n){switch(n.label){case 0:return[4,this.api.requests.request(h(t))];case 1:return e=n.sent(),this.handle(e),[2]}}))}))},t.prototype.refresh=function(){return d(this,void 0,void 0,(function(){var t;return y(this,(function(e){switch(e.label){case 0:return[4,this.api.requests.request(l)];case 1:return t=e.sent(),this.handle(t.token?t:null),[2]}}))}))},t.prototype.handle=function(t){var e=this;t?(this.token=t.token,this.expires=new Date(t.expires),this.listener.spotifyAuthenticated(!0,t.token),setTimeout((function(){return d(e,void 0,void 0,(function(){return y(this,(function(e){switch(e.label){case 0:return this.token!==t.token?[2]:[4,this.refresh()];case 1:return e.sent(),[2]}}))}))}),this.expires.getTime()-Date.now())):this.listener.spotifyAuthenticated(!1)},t}(),v=function(t){this.events=t},_=(u=function(t,e){return(u=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(t,e){t.__proto__=e}||function(t,e){for(var n in e)e.hasOwnProperty(n)&&(t[n]=e[n])})(t,e)},function(t,e){function n(){this.constructor=t}u(t,e),t.prototype=null===e?Object.create(e):(n.prototype=e.prototype,new n)}),E=function(t,e,n,i){return new(n||(n=Promise))((function(o,r){function s(t){try{a(i.next(t))}catch(t){r(t)}}function u(t){try{a(i.throw(t))}catch(t){r(t)}}function a(t){var e;t.done?o(t.value):(e=t.value,e instanceof n?e:new n((function(t){t(e)}))).then(s,u)}a((i=i.apply(t,e||[])).next())}))},w=function(t,e){var n,i,o,r,s={label:0,sent:function(){if(1&o[0])throw o[1];return o[1]},trys:[],ops:[]};return r={next:u(0),throw:u(1),return:u(2)},"function"==typeof Symbol&&(r[Symbol.iterator]=function(){return this}),r;function u(r){return function(u){return function(r){if(n)throw new TypeError("Generator is already executing.");for(;s;)try{if(n=1,i&&(o=2&r[0]?i.return:r[0]?i.throw||((o=i.return)&&o.call(i),0):i.next)&&!(o=o.call(i,r[1])).done)return o;switch(i=0,o&&(r=[2&r[0],o.value]),r[0]){case 0:case 1:o=r;break;case 4:return s.label++,{value:r[1],done:!1};case 5:s.label++,i=r[1],r=[0];continue;case 7:r=s.ops.pop(),s.trys.pop();continue;default:if(!(o=(o=s.trys).length>0&&o[o.length-1])&&(6===r[0]||2===r[0])){s=0;continue}if(3===r[0]&&(!o||r[1]>o[0]&&r[1]<o[3])){s.label=r[1];break}if(6===r[0]&&s.label<o[1]){s.label=o[1],o=r;break}if(o&&s.label<o[2]){s.label=o[2],s.ops.push(r);break}o[2]&&s.ops.pop(),s.trys.pop();continue}r=e.call(t,s)}catch(t){r=[6,t],i=0}finally{n=o=0}if(5&r[0])throw r[1];return{value:r[0]?r[1]:void 0,done:!0}}([r,u])}}},b=function(t){function e(e,n){var i=t.call(this,e)||this;i.events=e,i.api=n;var o=function(){return E(i,void 0,void 0,(function(){return w(this,(function(t){switch(t.label){case 0:return[4,this.positionUpdate()];case 1:return t.sent(),setTimeout(o,5e3),[2]}}))}))};return o().then(),i}return _(e,t),e.prototype.init=function(t){var e=this;this.player&&this.player.disconnect(),this.token=t;var n=new Spotify.Player({name:"Twasi-Panel",getOAuthToken:function(e){e(t)}});n.addListener("initialization_error",(function(t){t.message;n.disconnect()})),n.addListener("authentication_error",(function(t){t.message;return E(e,void 0,void 0,(function(){return w(this,(function(t){switch(t.label){case 0:return n.disconnect(),[4,window.TSRI.spotifyAuth.init()];case 1:return t.sent(),[2]}}))}))})),n.addListener("account_error",(function(t){t.message;return E(e,void 0,void 0,(function(){return w(this,(function(t){switch(t.label){case 0:return[4,window.TSRI.spotifyAuth.refresh()];case 1:return t.sent(),[2]}}))}))})),n.addListener("playback_error",(function(t){t.message;return E(e,void 0,void 0,(function(){return w(this,(function(t){switch(t.label){case 0:return[4,window.TSRI.spotifyAuth.refresh()];case 1:return t.sent(),[2]}}))}))})),n.addListener("player_state_changed",(function(t){return E(e,void 0,void 0,(function(){return w(this,(function(e){return t?(t.position&&t.duration&&this.events.onPositionChange(t.position,t.duration),t.paused?this.events.onPause():this.events.onPlay(this.song),t.paused&&t.disallows.resuming&&t.position&&t.duration&&t.position/t.duration>.98&&this.events.onNext(),[2]):[2]}))}))})),n.addListener("ready",(function(t){var n=t.device_id;e.id=n})),n.addListener("not_ready",(function(t){t.device_id;return E(e,void 0,void 0,(function(){return w(this,(function(t){switch(t.label){case 0:return[4,window.TSRI.spotifyAuth.refresh()];case 1:return t.sent(),[2]}}))}))})),this.player=n,n.connect()},e.prototype.pause=function(){this.player.pause()},e.prototype.play=function(t){return E(this,void 0,void 0,(function(){return w(this,(function(e){switch(e.label){case 0:return this.song&&this.song.uri===t.uri?(this.player.resume(),[2]):(this.song=t,[4,fetch("https://api.spotify.com/v1/me/player/play?device_id="+this.id,{method:"PUT",body:JSON.stringify({uris:[t.uri]}),headers:{"Content-Type":"application/json",Authorization:"Bearer "+this.token}})]);case 1:return e.sent(),[2]}}))}))},e.prototype.seek=function(t){this.player.seek(this.song.duration*t)},e.prototype.setVolume=function(t){this.player.setVolume(t)},e.prototype.resume=function(){this.player.resume()},e.prototype.positionUpdate=function(){return E(this,void 0,void 0,(function(){var t;return w(this,(function(e){switch(e.label){case 0:return e.trys.push([0,2,,3]),[4,this.player.getCurrentState()];case 1:return(t=e.sent())&&this.events.onPositionChange(t.position,t.duration),[3,3];case 2:return e.sent(),[3,3];case 3:return[2]}}))}))},e}(v),T=function(){var t=function(e,n){return(t=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(t,e){t.__proto__=e}||function(t,e){for(var n in e)e.hasOwnProperty(n)&&(t[n]=e[n])})(e,n)};return function(e,n){function i(){this.constructor=e}t(e,n),e.prototype=null===n?Object.create(n):(i.prototype=n.prototype,new i)}}(),m=function(t){function e(e,n,i){var o=t.call(this,e)||this;if(!i)throw"API_NOT_READY";o.player=new YT.Player("youtube-player",{events:{onStateChange:function(t){return o.onUpdate(t)}}});var r=function(){o.setPos(),setTimeout(r,500)};return r(),o}return T(e,t),e.prototype.setPos=function(){try{this.events.onPositionChange(1e3*this.player.getCurrentTime(),1e3*this.player.getDuration())}catch(t){}},e.prototype.onUpdate=function(t){1===t.data?this.events.onPlay():0===t.data?this.events.onNext():this.events.onPause(),this.setPos()},e.prototype.pause=function(){this.player.pauseVideo()},e.prototype.play=function(t){this.player.loadVideoById(t.uri)},e.prototype.seek=function(t){this.player.seekTo(this.player.getDuration()*t)},e.prototype.setVolume=function(t){this.player.setVolume(100*t)},e.prototype.resume=function(){this.player.playVideo()},e}(v);!function(t){t[t.NONE=0]="NONE",t[t.SPOTIFY=1]="SPOTIFY",t[t.YOUTUBE=2]="YOUTUBE"}(a||(a={}));var R=function(){function t(t,e,n){this.api=t,this.frontendEvents=e,this.song=null,this.queue=[],this.posPredicter=new A(e.position),this.spotify=new b(this.playbackProviderEvents(a.SPOTIFY),t),this.youtube=new m(this.playbackProviderEvents(a.YOUTUBE),t,n.youtubeApi)}return t.prototype.play=function(t){t?(this.song&&this.pause(),this.song=t,this.getController(t.provider).play(t)):this.song?this.getController(this.song.provider).resume():this.next(),this.frontendEvents.song(this.song)},t.prototype.pause=function(){this.song&&this.getController(this.song.provider).pause()},t.prototype.getController=function(t){switch(t){case a.NONE:default:return null;case a.SPOTIFY:return this.spotify;case a.YOUTUBE:return this.youtube}},t.prototype.seek=function(t){this.song&&this.getController(this.song.provider).seek(t)},t.prototype.add=function(t){this.queue.push(t),this.frontendEvents.queueUpdate(this.queue),this.posPredicter.predict||this.play()},t.prototype.setQueue=function(t){if(t.length){var e=t[0];this.song&&this.song.uri===e.uri?this.song.uri===e.uri&&t.shift():this.play(e)}else this.frontendEvents.song(null);this.queue=t,this.frontendEvents.queueUpdate(this.queue)},t.prototype.next=function(){this.song&&this.pause(),this.queue.length?(this.play(this.queue[0]),this.queue.shift()):(this.song=null,this.frontendEvents.song(null)),this.frontendEvents.queueUpdate(this.queue)},t.prototype.playbackProviderEvents=function(t){var e=this;return{onPause:function(){e.song&&![a.NONE,t].includes(e.song.provider)||(e.posPredicter.predict=!1,e.frontendEvents.stop())},onPlay:function(n){e.song&&e.song.provider===t&&(e.posPredicter.predict=!0,e.frontendEvents.play())},onPositionChange:function(n,i){e.song&&e.song.provider===t&&e.posPredicter.setPosition(n,i)},onNext:function(){return e.next()}}},t}(),A=function(){function t(t){var e=this;this.predict=!1,this.lastPosition=Date.now(),this.duration=0,this.position=0,this.prediction=0;var n=function(){var i;e.predict&&(i=(e.position+(Date.now()-e.lastPosition))/e.duration),"number"==typeof i&&(e.prediction=i>1?1:i),t(e.prediction),setTimeout(n,500)};n()}return t.prototype.setPosition=function(t,e){this.lastPosition=Date.now(),this.position=t,this.duration=e},t}();n.d(e,"a",(function(){return S}));var O=function(t,e,n,i){return new(n||(n=Promise))((function(o,r){function s(t){try{a(i.next(t))}catch(t){r(t)}}function u(t){try{a(i.throw(t))}catch(t){r(t)}}function a(t){var e;t.done?o(t.value):(e=t.value,e instanceof n?e:new n((function(t){t(e)}))).then(s,u)}a((i=i.apply(t,e||[])).next())}))},P=function(t,e){var n,i,o,r,s={label:0,sent:function(){if(1&o[0])throw o[1];return o[1]},trys:[],ops:[]};return r={next:u(0),throw:u(1),return:u(2)},"function"==typeof Symbol&&(r[Symbol.iterator]=function(){return this}),r;function u(r){return function(u){return function(r){if(n)throw new TypeError("Generator is already executing.");for(;s;)try{if(n=1,i&&(o=2&r[0]?i.return:r[0]?i.throw||((o=i.return)&&o.call(i),0):i.next)&&!(o=o.call(i,r[1])).done)return o;switch(i=0,o&&(r=[2&r[0],o.value]),r[0]){case 0:case 1:o=r;break;case 4:return s.label++,{value:r[1],done:!1};case 5:s.label++,i=r[1],r=[0];continue;case 7:r=s.ops.pop(),s.trys.pop();continue;default:if(!(o=(o=s.trys).length>0&&o[o.length-1])&&(6===r[0]||2===r[0])){s=0;continue}if(3===r[0]&&(!o||r[1]>o[0]&&r[1]<o[3])){s.label=r[1];break}if(6===r[0]&&s.label<o[1]){s.label=o[1],o=r;break}if(o&&s.label<o[2]){s.label=o[2],s.ops.push(r);break}o[2]&&s.ops.pop(),s.trys.pop();continue}r=e.call(t,s)}catch(t){r=[6,t],i=0}finally{n=o=0}if(5&r[0])throw r[1];return{value:r[0]?r[1]:void 0,done:!0}}([r,u])}}},S=function(){function t(){this.status=C}return t.prototype.init=function(t,e,n){var i=this;this.events=n,this.API=new s(e,t,{statusChanged:function(t){return O(i,void 0,void 0,(function(){return P(this,(function(e){switch(e.label){case 0:return this.status.api=0===t,this.e().initialized(this.status),this.status.api?[4,this.spotifyAuth.get()]:[3,2];case 1:e.sent(),e.label=2;case 2:return[2]}}))}))}}),this.playback=new R(this.API,n,this.status),this.spotifyAuth=new g(this.API,{statusChanged:this.spotifyStatus,spotifyAuthenticated:function(t,e){i.e().enableSpotifyAuth(!t),e&&i.playback.spotify.init(e)}}),this.e().initialized(this.status)},t.prototype.spotifyStatus=function(t){this.status.spotify=t,this.e().initialized(this.status)},t.prototype.youtubeApiReady=function(){this.status.youtubeApi=!0,this.e().initialized(this.status)},t.prototype.spotifyApiReady=function(){this.status.spotifyApi=!0,this.e().initialized(this.status)},t.prototype.e=function(){return this.events?this.events:N},t}(),N={queueUpdate:function(t){},enableSpotifyAuth:function(t){console.log("Spotify Authentication is now %s.",t?"enabled":"disabled")},initialized:function(t){},pause:function(){console.log("PAUSE")},play:function(){console.log("PLAY")},position:function(t){console.log("POS: "+t)},song:function(t){console.log("SONG: "+t.name)},stop:function(){console.log("STOP")},volume:function(t){console.log("VOLUME: "+t)}},C={api:!1,spotifyApi:!1,spotify:!1,youtubeApi:!1,youtube:!1}},function(t,e,n){"use strict";n.r(e),function(t){var e=new(n(0).a),i=window;i.TSRI=e,i.onSpotifyWebPlaybackSDKReady=function(){return e.spotifyApiReady()},(window||t).onYouTubeIframeAPIReady=function(){return e.youtubeApiReady()},n(3),n(4)}.call(this,n(2))},function(t,e){var n;n=function(){return this}();try{n=n||new Function("return this")()}catch(t){"object"==typeof window&&(n=window)}t.exports=n},function(t,e){!function(t){function e(i){if(n[i])return n[i].exports;var o=n[i]={i:i,l:!1,exports:{}};return t[i].call(o.exports,o,o.exports,e),o.l=!0,o.exports}var n={};e.m=t,e.c=n,e.d=function(t,n,i){e.o(t,n)||Object.defineProperty(t,n,{configurable:!1,enumerable:!0,get:i})},e.n=function(t){var n=t&&t.__esModule?function(){return t.default}:function(){return t};return e.d(n,"a",n),n},e.o=function(t,e){return Object.prototype.hasOwnProperty.call(t,e)},e.p="",e(e.s=2)}([function(t,e,n){"use strict";var i={SPOTIFY_MESSAGE:"SP_MESSAGE",ACCOUNT_ERROR:"ACCOUNT_ERROR",AUTH_ERROR:"AUTH_ERROR",CONNECT:"CONNECT",CONNECTED:"CONNECTED",CURRENT_STATE:"CURRENT_STATE",DISCONNECT:"DISCONNECT",EVENT:"EVENT",GET_CURRENT_STATE:"GET_CURRENT_STATE",GET_TOKEN:"GET_TOKEN",GET_VOLUME:"GET_VOLUME",INIT:"INIT",LOADED:"LOADED",NEXT_TRACK:"NEXT_TRACK",PAUSE:"PAUSE",PLAYBACK_ERROR:"PLAYBACK_ERROR",PLAYER_INIT_ERROR:"PLAYER_INIT_ERROR",PLAYER_READY:"PLAYER_READY",PLAYER_NOT_READY:"PLAYER_NOT_READY",PLAYER_STATE_CHANGED:"PLAYER_STATE_CHANGED",PREV_TRACK:"PREV_TRACK",RESUME:"RESUME",SEEK:"SEEK",SET_NAME:"SET_NAME",SET_VOLUME:"SET_VOLUME",TOGGLE_PLAY:"TOGGLE_PLAY",TOKEN:"TOKEN",VOLUME:"VOLUME",accountError:function(t){return this._createEventMessage(i.ACCOUNT_ERROR,{message:t})},authError:function(t){return this._createEventMessage(i.AUTH_ERROR,t)},playbackError:function(t){return this._createEventMessage(i.PLAYBACK_ERROR,t)},playerReady:function(t){return this._createEventMessage(i.PLAYER_READY,t)},playerNotReady:function(t){return this._createEventMessage(i.PLAYER_NOT_READY,t)},connect:function(){return this._createMessage(i.CONNECT)},connected:function(t,e){return this._createMessage(i.CONNECTED,{connected:t,ref:e})},disconnect:function(){return this._createMessage(i.DISCONNECT)},init:function(t){return this._createMessage(i.INIT,t)},playerInitError:function(t){return this._createEventMessage(i.PLAYER_INIT_ERROR,t)},getToken:function(){return this._createMessage(i.GET_TOKEN)},token:function(t,e){return this._createMessage(i.TOKEN,{token:t,ref:e})},pause:function(){return this._createMessage(i.PAUSE)},resume:function(){return this._createMessage(i.RESUME)},togglePlay:function(){return this._createMessage(i.TOGGLE_PLAY)},seek:function(t){return this._createMessage(i.SEEK,t)},nextTrack:function(t){return this._createMessage(i.NEXT_TRACK,t)},previousTrack:function(t){return this._createMessage(i.PREV_TRACK,t)},getCurrentState:function(){return this._createMessage(i.GET_CURRENT_STATE)},currentState:function(t,e){return this._createMessage(i.CURRENT_STATE,{state:t,ref:e})},playerStateChanged:function(t){return this._createEventMessage(i.PLAYER_STATE_CHANGED,t)},getVolume:function(){return this._createMessage(i.GET_VOLUME)},volume:function(t,e){return this._createMessage(i.VOLUME,{volume:t,ref:e})},setVolume:function(t){return this._createMessage(i.SET_VOLUME,t)},setName:function(t){return this._createMessage(i.SET_NAME,t)},embeddedLoaded:function(){return this._createMessage(i.LOADED)},_createEventMessage:function(t,e){return this._createMessage(i.EVENT,{name:t,eventData:e})},_createMessage:function(t,e){return{type:i.SPOTIFY_MESSAGE,body:{topic:t,data:e?JSON.parse(JSON.stringify(e)):null}}}};t.exports=i},function(t,e){var n;n=function(){return this}();try{n=n||Function("return this")()||(0,eval)("this")}catch(t){"object"==typeof window&&(n=window)}t.exports=n},function(t,e,n){"use strict";function i(){var t=n(3);if(!document.body)throw new Error("Document doesn't have a body");if(window.Spotify={Player:t.setupPlayerEnv(window)},window.onSpotifyWebPlaybackSDKReady)window.onSpotifyWebPlaybackSDKReady();else{if(!window.onSpotifyPlayerAPIReady)throw new Error("onSpotifyWebPlaybackSDKReady is not defined");window.onSpotifyPlayerAPIReady()}}"complete"===document.readyState?i():window.addEventListener("load",i)},function(t,e,n){"use strict";var i=n(4),o=n(5),r=n(0),s=n(6);t.exports.setupPlayerEnv=function(t,e){var n,u="https://sdk.scdn.co/embedded/index.html",a=o.defer(),c=new i,f=e||function(e){var n=t.document.createElement("iframe");return n.src=e,n.setAttribute("alt","Audio Playback Container"),n.setAttribute("tabIndex","-1"),n.style.setProperty("position","absolute","important"),n.style.setProperty("left","-1px","important"),n.style.setProperty("width","0","important"),n.style.setProperty("height","0","important"),n.style.setProperty("border","none","important"),n.style.setProperty("outline","none","important"),n.allow="encrypted-media; autoplay",t.document.body.appendChild(n),n.contentWindow},p=function(e){e===r.LOADED&&(c.stopListening(t,p),a.resolve())};c.listen(t,p),n=f(u);var h=function(e){this._options=this._sanitizeOptions(e),this._handleMessages=this._handleMessages.bind(this),this._messageHandlers={},this._eventListeners={},this._setupMessageHandlers(),this._connectionRequests={},this._getCurrentStateRequests={},this._getVolumeRequests={},this.isLoaded=a.promise.then(function(){c.listen(t,this._handleMessages),this._sendMessage(r.init(this._options))}.bind(this))};return h.prototype._sanitizeOptions=function(e){var n=t&&t.location&&t.location.hostname||"";return{name:e.name||n,id:s.get(),getOAuthToken:e.getOAuthToken||e.getOauthToken,volume:e.volume||1}},h.prototype._setupMessageHandlers=function(){this._messageHandlers[r.GET_TOKEN]=this._onGetToken.bind(this),this._messageHandlers[r.EVENT]=this._onEvent.bind(this),this._messageHandlers[r.CONNECTED]=this._onConnected.bind(this),this._messageHandlers[r.CURRENT_STATE]=this._onCurrentState.bind(this),this._messageHandlers[r.VOLUME]=this._onVolume.bind(this)},h.prototype.connect=function(){return this.isLoaded.then(function(){var t=this._sendMessage(r.connect());return this._connectionRequests[t]=o.defer(),this._connectionRequests[t].promise}.bind(this))},h.prototype.on=function(t,e){if(!t)throw new TypeError("Argument `eventName` is required.");if("function"!=typeof e)throw new TypeError("Argument `listener` must be a function.");return this._eventListeners[t]=this._eventListeners[t]||[],-1===this._eventListeners[t].indexOf(e)&&(this._eventListeners[t].push(e),!0)},h.prototype.addListener=function(t,e){return this.on(t,e)},h.prototype.removeListener=function(t,e){if(!t)throw new TypeError("Argument `eventName` is required.");if(1===arguments.length)return this._eventListeners[t]=[],!0;if("function"!=typeof e)throw new TypeError("Argument `listener` must be a function.");var n=this._eventListeners[t];return!(!n||!n.length||(this._eventListeners[t]=n.filter((function(t){return t!==e})),0))},h.prototype.getCurrentState=function(){return this.isLoaded.then(function(){var t=this._sendMessage(r.getCurrentState());return this._getCurrentStateRequests[t]=o.defer(),this._getCurrentStateRequests[t].promise}.bind(this))},h.prototype.getVolume=function(){return this.isLoaded.then(function(){var t=this._sendMessage(r.getVolume());return this._getVolumeRequests[t]=o.defer(),this._getVolumeRequests[t].promise}.bind(this))},h.prototype.setName=function(t){return this._sendMessageWhenLoaded(r.setName(t))},h.prototype.setVolume=function(t){return this._sendMessageWhenLoaded(r.setVolume(t))},h.prototype.pause=function(){return this._sendMessageWhenLoaded(r.pause())},h.prototype.resume=function(){return this._sendMessageWhenLoaded(r.resume())},h.prototype.togglePlay=function(){return this._sendMessageWhenLoaded(r.togglePlay())},h.prototype.seek=function(t){return this._sendMessageWhenLoaded(r.seek(t))},h.prototype.previousTrack=function(t){return this._sendMessageWhenLoaded(r.previousTrack(t))},h.prototype.nextTrack=function(t){return this._sendMessageWhenLoaded(r.nextTrack(t))},h.prototype.disconnect=function(){return this._sendMessageWhenLoaded(r.disconnect())},h.prototype._getListeners=function(){var t={};return t[r.ACCOUNT_ERROR]="account_error",t[r.AUTH_ERROR]="authentication_error",t[r.PLAYBACK_ERROR]="playback_error",t[r.PLAYER_INIT_ERROR]="initialization_error",t[r.PLAYER_READY]="ready",t[r.PLAYER_NOT_READY]="not_ready",t[r.PLAYER_STATE_CHANGED]="player_state_changed",function(e){return this._eventListeners[t[e]]||[]}}(),h.prototype._onEvent=function(t){this._getListeners(t.name).forEach((function(e){e(t.eventData)}))},h.prototype._onGetToken=function(t,e){var n=this._options.getOAuthToken;if("function"!=typeof n){var i="getOAuthToken is not a function";if(this._getListeners(r.PLAYER_INIT_ERROR).length)return void this._onEvent({name:r.PLAYER_INIT_ERROR,eventData:{message:i}});throw new Error(i)}new o(n).then(function(t){this._sendMessage(r.token(t,e))}.bind(this))},h.prototype._onConnected=function(t){t.ref in this._connectionRequests&&(this._connectionRequests[t.ref].resolve(t.connected),delete this._connectionRequests[t.ref])},h.prototype._onCurrentState=function(t){t.ref in this._getCurrentStateRequests&&(this._getCurrentStateRequests[t.ref].resolve(t.state),delete this._getCurrentStateRequests[t.ref])},h.prototype._onVolume=function(t){t.ref in this._getVolumeRequests&&(this._getVolumeRequests[t.ref].resolve(t.volume),delete this._getVolumeRequests[t.ref])},h.prototype._handleMessages=function(t,e,n){t in this._messageHandlers&&this._messageHandlers[t](e,n)},h.prototype._sendMessage=function(t){return c.send(n,t,u)},h.prototype._sendMessageWhenLoaded=function(t){return this.isLoaded.then(this._sendMessage.bind(this,t))},h}},function(t,e,n){"use strict";var i=n(0),o=function(){this._onMessageCallback=function(){},this._receiveMessage=this._receiveMessage.bind(this),this._messageId=0};o.prototype.listen=function(t,e){this._onMessageCallback=e,t.addEventListener("message",this._receiveMessage)},o.prototype.stopListening=function(t){t.removeEventListener("message",this._receiveMessage)},o.prototype.send=function(t,e,n){return t.postMessage(this._addMessageId(e),n||"*"),e.seq},o.prototype._addMessageId=function(t){return t.seq=this._messageId++,t},o.prototype._receiveMessage=function(t){var e=t.data;e.type===i.SPOTIFY_MESSAGE&&e.body&&e.body.topic&&this._onMessageCallback(e.body.topic,e.body.data,e.seq)},t.exports=o},function(t,e,n){"use strict";(function(e){var n,i=e.Promise;if(!i)throw new Error("Fatal: no Promise implementation available.");(n=Object.defineProperty?function(t,e,n){return t[e]?t:(Object.defineProperty(t,e,{value:n,configurable:!0,writable:!0}),t)}:function(t,e,n){return t[e]?t:(t[e]=n,t)})(i,"defer",(function(){var t={};return t.promise=new i((function(e,n){t.resolve=e,t.reject=n})),t})),n(i.prototype,"spread",(function(t,e){return this.then((function(t){return i.all(t)})).then((function(e){return 1===e.length?t(e[0]):t.apply(this,e)}),e)})),t.exports=i}).call(e,n(1))},function(t,e,n){"use strict";(function(e){function i(){var t=new e.Uint8Array(16);return e.crypto.getRandomValues(t),r.toHex(t.join(""),40).slice(0,40)}function o(){for(var t=new Array(27),e=t.length;e--;)t[e]=Math.floor(8*Math.random());return r.toHex(t.join(""),40)}var r=n(7),s="function"==typeof e.Uint8Array&&void 0!==e.crypto&&"function"==typeof e.crypto.getRandomValues?i:o,u="_spharmony_device_id";t.exports={get:function(t,n){if(t&&"string"==typeof t)return t;if(n)return s();var i=e.localStorage.getItem(u);return i||(i=s(),e.localStorage.setItem(u,i)),i},generate:s,generateWithCrypto:i,generateWithRandom:o}}).call(e,n(1))},function(t,e,n){"use strict";function i(t,e,n){for(var i=0,o=0;o<t.length;++o){var r=t[o]*e+i;t[o]=r%n,i=~~(r/n)}for(;i;)t.push(i%n),i=~~(i/n)}function o(t,e,n,i){var o,r,s=0;for(r=0;r<e.length;++r)o=~~t[r]+e[r]*n+s,t[r]=o%i,s=~~(o/i);for(;s;)o=~~t[r]+s,t[r]=o%i,s=~~(o/i),++r}function r(t,e,n){for(var r=[0],s=[1],u=0;u<t.length;++u)o(r,s,t[u],n),i(s,e,n);return r}function s(t,e){for(var n=[],i=0;i<t.length;++i)n.push(e[t[i]]);return n.reverse()}function u(t,e){for(;t.length<e;)t.push(0);return t}var a="0123456789abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ",c={},f={};!function(){var t,e;for(t=0,e=a.length;t<e;++t)f[a[t]]=t;for(t=0;t<16;++t)c["0123456789abcdef"[t]]=t;for(t=0;t<16;++t)c["0123456789ABCDEF"[t]]=t}(),t.exports={fromBytes:function(t,e){return s(u(r(t.slice(0).reverse(),256,62),e),a).join("")},toBytes:function(t,e){return u(r(s(t,f),62,256),e).reverse()},toHex:function(t,e){return s(u(r(s(t,f),62,16),e),a).join("")},fromHex:function(t,e){return s(u(r(s(t,c),16,62),e),a).join("")}}}])},function(t,e){if(!window.YT)var n={loading:0,loaded:0};if(!window.YTConfig)var i={host:"http://www.youtube.com"};n.loading||(n.loading=1,function(){var t=[];n.ready=function(e){n.loaded?e():t.push(e)},window.onYTReady=function(){n.loaded=1;for(var e=0;e<t.length;e++)try{t[e]()}catch(t){}},n.setConfig=function(t){for(var e in t)t.hasOwnProperty(e)&&(i[e]=t[e])};var e=document.createElement("script");e.type="text/javascript",e.id="www-widgetapi-script",e.src="https://s.ytimg.com/yts/jsbin/www-widgetapi-vflUFVyEP/www-widgetapi.js",e.async=!0;var o=document.currentScript;if(o){var r=o.nonce||o.getAttribute("nonce");r&&e.setAttribute("nonce",r)}var s=document.getElementsByTagName("script")[0];s.parentNode.insertBefore(e,s)}())}]);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vd2VicGFjay9ib290c3RyYXAiLCJ3ZWJwYWNrOi8vLy4vc3JjL2NvbnRyb2xsZXJzL2FwaS9BUElDb25uZWN0aW9uQ29udHJvbGxlci50cyIsIndlYnBhY2s6Ly8vLi9zcmMvbW9kZWxzL1BsYXliYWNrUHJvdmlkZXIudHMiLCJ3ZWJwYWNrOi8vLy4vc3JjL2NvbnRyb2xsZXJzL2FwaS9yZXF1ZXN0cy9zcG90aWZ5LWNyZWRlbnRpYWxzL0dldFJlcXVlc3QudHMiLCJ3ZWJwYWNrOi8vLy4vc3JjL2NvbnRyb2xsZXJzL2FwaS9yZXF1ZXN0cy9zcG90aWZ5LWNyZWRlbnRpYWxzL0luaXRSZXF1ZXN0LnRzIiwid2VicGFjazovLy8uL3NyYy9jb250cm9sbGVycy9hcGkvcmVxdWVzdHMvc3BvdGlmeS1jcmVkZW50aWFscy9TZXRSZXF1ZXN0LnRzIiwid2VicGFjazovLy8uL3NyYy9jb250cm9sbGVycy9hcGkvcmVxdWVzdHMvc3BvdGlmeS1jcmVkZW50aWFscy9SZWZyZXNoUmVxdWVzdC50cyIsIndlYnBhY2s6Ly8vLi9zcmMvY29udHJvbGxlcnMvc3BvdGlmeS9TcG90aWZ5QXV0aGVudGljYXRpb25Db250cm9sbGVyLnRzIiwid2VicGFjazovLy8uL3NyYy9jb250cm9sbGVycy9wbGF5YmFjay9QbGF5YmFja1NsYXZlQ29udHJvbGxlci50cyIsIndlYnBhY2s6Ly8vLi9zcmMvY29udHJvbGxlcnMvcGxheWJhY2svU3BvdGlmeVBsYXliYWNrQ29udHJvbGxlci50cyIsIndlYnBhY2s6Ly8vLi9zcmMvY29udHJvbGxlcnMvcGxheWJhY2svWW91dFR1YmVQbGF5YmFja0NvbnRyb2xsZXIudHMiLCJ3ZWJwYWNrOi8vLy4vc3JjL2NvbnRyb2xsZXJzL3BsYXliYWNrL1BsYXliYWNrTWFzdGVyQ29udHJvbGxlci50cyIsIndlYnBhY2s6Ly8vLi9zcmMvY29udHJvbGxlcnMvVFNSSUNvbnRyb2xsZXIudHMiLCJ3ZWJwYWNrOi8vLy4vc3JjL1RTUkkudHMiLCJ3ZWJwYWNrOi8vLyh3ZWJwYWNrKS9idWlsZGluL2dsb2JhbC5qcyIsIndlYnBhY2s6Ly8vLi9wcm92aWRlcnMvc3BvdGlmeS9zcG90aWZ5LXBsYXliYWNrLXNkay5qcyIsIndlYnBhY2s6Ly8vLi9wcm92aWRlcnMveW91dHViZS95b3V0dWJlLWlmcmFtZV9hcGkuanMiXSwibmFtZXMiOlsiaW5zdGFsbGVkTW9kdWxlcyIsIl9fd2VicGFja19yZXF1aXJlX18iLCJtb2R1bGVJZCIsImV4cG9ydHMiLCJtb2R1bGUiLCJpIiwibCIsIm1vZHVsZXMiLCJjYWxsIiwibSIsImMiLCJkIiwibmFtZSIsImdldHRlciIsIm8iLCJPYmplY3QiLCJkZWZpbmVQcm9wZXJ0eSIsImVudW1lcmFibGUiLCJnZXQiLCJyIiwiU3ltYm9sIiwidG9TdHJpbmdUYWciLCJ2YWx1ZSIsInQiLCJtb2RlIiwiX19lc01vZHVsZSIsIm5zIiwiY3JlYXRlIiwia2V5IiwiYmluZCIsIm4iLCJvYmplY3QiLCJwcm9wZXJ0eSIsInByb3RvdHlwZSIsImhhc093blByb3BlcnR5IiwicCIsInMiLCJBUElDb25uZWN0aW9uU3RhdHVzIiwiYXBpIiwiand0Iiwic3RhdHVzTGlzdGVuZXIiLCJ0aGlzIiwiY29ubmVjdCIsInNldFRpbWVvdXQiLCJjbGllbnQiLCJPUEVOIiwiV2ViU29ja2V0Iiwib25vcGVuIiwiYXV0aG9yaXplIiwib25jbG9zZSIsInN0YXR1c0NoYW5nZWQiLCJESVNDT05ORUNURUQiLCJyZXF1ZXN0cyIsIkFQSVJlcXVlc3RNYW5hZ2VyIiwicmVxdWVzdCIsInRvcGljIiwic2NvcGUiLCJhY3Rpb24iLCJ0eXBlIiwidG9rZW4iLCJyZXNwb25zZSIsInN0YXR1cyIsIkNPTk5FQ1RFRCIsIlVOQVVUSE9SSVpFRCIsIlBsYXliYWNrUHJvdmlkZXIiLCJjb3VudCIsInBlbmRpbmciLCJNYXAiLCJvbm1lc3NhZ2UiLCJtc2ciLCJvYiIsIkpTT04iLCJwYXJzZSIsImRhdGEiLCJoYXMiLCJyZWYiLCJyZXN1bHQiLCJkZWxldGUiLCJyZXEiLCJ0aW1lb3V0IiwibmV3UmVmIiwiUHJvbWlzZSIsInJlcyIsInJlaiIsInNldCIsInNlbmQiLCJzdHJpbmdpZnkiLCJ0b1N0cmluZyIsIkdldFJlcXVlc3QiLCJJbml0UmVxdWVzdCIsIlNldFJlcXVlc3QiLCJjb2RlIiwiUmVmcmVzaFJlcXVlc3QiLCJsaXN0ZW5lciIsImV4cGlyZXMiLCJ3aW5kb3ciLCJhZGRFdmVudExpc3RlbmVyIiwiZXZlbnQiLCJzdGFydHNXaXRoIiwic3Vic3RyIiwibGVuZ3RoIiwid2luIiwicG9zdE1lc3NhZ2UiLCJoYW5kbGUiLCJpbml0Iiwib3BlbiIsInVyaSIsInJlZnJlc2giLCJEYXRlIiwic3BvdGlmeUF1dGhlbnRpY2F0ZWQiLCJnZXRUaW1lIiwibm93IiwiZXZlbnRzIiwicGVybWFVcGRhdGUiLCJwb3NpdGlvblVwZGF0ZSIsInRoZW4iLCJwbGF5ZXIiLCJkaXNjb25uZWN0IiwiU3BvdGlmeSIsIlBsYXllciIsImdldE9BdXRoVG9rZW4iLCJjYiIsImFkZExpc3RlbmVyIiwibWVzc2FnZSIsIlRTUkkiLCJzcG90aWZ5QXV0aCIsInN0YXRlIiwicG9zaXRpb24iLCJkdXJhdGlvbiIsIm9uUG9zaXRpb25DaGFuZ2UiLCJwYXVzZWQiLCJvblBhdXNlIiwib25QbGF5Iiwic29uZyIsImRpc2FsbG93cyIsInJlc3VtaW5nIiwib25OZXh0IiwiZGV2aWNlX2lkIiwiaWQiLCJwYXVzZSIsInBsYXkiLCJyZXN1bWUiLCJmZXRjaCIsIm1ldGhvZCIsImJvZHkiLCJ1cmlzIiwiaGVhZGVycyIsInNlZWsiLCJzZXRWb2x1bWUiLCJ2b2x1bWUiLCJnZXRDdXJyZW50U3RhdGUiLCJQbGF5YmFja1NsYXZlQ29udHJvbGxlciIsInlvdXR1YmVBcGkiLCJZVCIsIm9uU3RhdGVDaGFuZ2UiLCJvblVwZGF0ZSIsInNldFBvcyIsImdldEN1cnJlbnRUaW1lIiwiZ2V0RHVyYXRpb24iLCJlIiwicGF1c2VWaWRlbyIsImxvYWRWaWRlb0J5SWQiLCJzZWVrVG8iLCJwbGF5VmlkZW8iLCJmcm9udGVuZEV2ZW50cyIsInF1ZXVlIiwicG9zUHJlZGljdGVyIiwiUG9zaXRpb25QcmVkaWN0ZXIiLCJzcG90aWZ5IiwiU3BvdGlmeVBsYXliYWNrQ29udHJvbGxlciIsInBsYXliYWNrUHJvdmlkZXJFdmVudHMiLCJTUE9USUZZIiwieW91dHViZSIsIllvdXRUdWJlUGxheWJhY2tDb250cm9sbGVyIiwiWU9VVFVCRSIsImdldENvbnRyb2xsZXIiLCJwcm92aWRlciIsIm5leHQiLCJOT05FIiwiYWRkIiwicHVzaCIsInF1ZXVlVXBkYXRlIiwicHJlZGljdCIsInNldFF1ZXVlIiwic2hpZnQiLCJzZWxmIiwiaW5jbHVkZXMiLCJzdG9wIiwicDEiLCJwMiIsInNldFBvc2l0aW9uIiwiY2FsbGJhY2siLCJsYXN0UG9zaXRpb24iLCJwcmVkaWN0aW9uIiwiQVBJIiwiQVBJQ29ubmVjdGlvbkNvbnRyb2xsZXIiLCJpbml0aWFsaXplZCIsInBsYXliYWNrIiwic3BvdGlmeVN0YXR1cyIsImF1dGhlbnRpY2F0ZWQiLCJlbmFibGVTcG90aWZ5QXV0aCIsInlvdXR1YmVBcGlSZWFkeSIsInNwb3RpZnlBcGlSZWFkeSIsInNwb3RpZnlBcGkiLCJkZWZhdWx0RXZlbnRzIiwiY29uc29sZSIsImxvZyIsImNvbnRyb2xsZXIiLCJvblNwb3RpZnlXZWJQbGF5YmFja1NES1JlYWR5IiwiZ2xvYmFsIiwib25Zb3VUdWJlSWZyYW1lQVBJUmVhZHkiLCJnIiwiRnVuY3Rpb24iLCJjb25maWd1cmFibGUiLCJkZWZhdWx0IiwiU1BPVElGWV9NRVNTQUdFIiwiQUNDT1VOVF9FUlJPUiIsIkFVVEhfRVJST1IiLCJDT05ORUNUIiwiQ1VSUkVOVF9TVEFURSIsIkRJU0NPTk5FQ1QiLCJFVkVOVCIsIkdFVF9DVVJSRU5UX1NUQVRFIiwiR0VUX1RPS0VOIiwiR0VUX1ZPTFVNRSIsIklOSVQiLCJMT0FERUQiLCJORVhUX1RSQUNLIiwiUEFVU0UiLCJQTEFZQkFDS19FUlJPUiIsIlBMQVlFUl9JTklUX0VSUk9SIiwiUExBWUVSX1JFQURZIiwiUExBWUVSX05PVF9SRUFEWSIsIlBMQVlFUl9TVEFURV9DSEFOR0VEIiwiUFJFVl9UUkFDSyIsIlJFU1VNRSIsIlNFRUsiLCJTRVRfTkFNRSIsIlNFVF9WT0xVTUUiLCJUT0dHTEVfUExBWSIsIlRPS0VOIiwiVk9MVU1FIiwiYWNjb3VudEVycm9yIiwiX2NyZWF0ZUV2ZW50TWVzc2FnZSIsImF1dGhFcnJvciIsInBsYXliYWNrRXJyb3IiLCJwbGF5ZXJSZWFkeSIsInBsYXllck5vdFJlYWR5IiwiX2NyZWF0ZU1lc3NhZ2UiLCJjb25uZWN0ZWQiLCJwbGF5ZXJJbml0RXJyb3IiLCJnZXRUb2tlbiIsInRvZ2dsZVBsYXkiLCJuZXh0VHJhY2siLCJwcmV2aW91c1RyYWNrIiwiY3VycmVudFN0YXRlIiwicGxheWVyU3RhdGVDaGFuZ2VkIiwiZ2V0Vm9sdW1lIiwic2V0TmFtZSIsImVtYmVkZGVkTG9hZGVkIiwiZXZlbnREYXRhIiwiZXZhbCIsImRvY3VtZW50IiwiRXJyb3IiLCJzZXR1cFBsYXllckVudiIsIm9uU3BvdGlmeVBsYXllckFQSVJlYWR5IiwicmVhZHlTdGF0ZSIsImEiLCJ1IiwiZGVmZXIiLCJfIiwiY3JlYXRlRWxlbWVudCIsInNyYyIsInNldEF0dHJpYnV0ZSIsInN0eWxlIiwic2V0UHJvcGVydHkiLCJhbGxvdyIsImFwcGVuZENoaWxkIiwiY29udGVudFdpbmRvdyIsImgiLCJzdG9wTGlzdGVuaW5nIiwicmVzb2x2ZSIsImxpc3RlbiIsImYiLCJfb3B0aW9ucyIsIl9zYW5pdGl6ZU9wdGlvbnMiLCJfaGFuZGxlTWVzc2FnZXMiLCJfbWVzc2FnZUhhbmRsZXJzIiwiX2V2ZW50TGlzdGVuZXJzIiwiX3NldHVwTWVzc2FnZUhhbmRsZXJzIiwiX2Nvbm5lY3Rpb25SZXF1ZXN0cyIsIl9nZXRDdXJyZW50U3RhdGVSZXF1ZXN0cyIsIl9nZXRWb2x1bWVSZXF1ZXN0cyIsImlzTG9hZGVkIiwicHJvbWlzZSIsIl9zZW5kTWVzc2FnZSIsImxvY2F0aW9uIiwiaG9zdG5hbWUiLCJnZXRPYXV0aFRva2VuIiwiX29uR2V0VG9rZW4iLCJfb25FdmVudCIsIl9vbkNvbm5lY3RlZCIsIl9vbkN1cnJlbnRTdGF0ZSIsIl9vblZvbHVtZSIsIm9uIiwiVHlwZUVycm9yIiwiaW5kZXhPZiIsInJlbW92ZUxpc3RlbmVyIiwiYXJndW1lbnRzIiwiZmlsdGVyIiwiX3NlbmRNZXNzYWdlV2hlbkxvYWRlZCIsIl9nZXRMaXN0ZW5lcnMiLCJmb3JFYWNoIiwiX29uTWVzc2FnZUNhbGxiYWNrIiwiX3JlY2VpdmVNZXNzYWdlIiwiX21lc3NhZ2VJZCIsInJlbW92ZUV2ZW50TGlzdGVuZXIiLCJfYWRkTWVzc2FnZUlkIiwic2VxIiwid3JpdGFibGUiLCJyZWplY3QiLCJhbGwiLCJhcHBseSIsIlVpbnQ4QXJyYXkiLCJjcnlwdG8iLCJnZXRSYW5kb21WYWx1ZXMiLCJ0b0hleCIsImpvaW4iLCJzbGljZSIsIkFycmF5IiwiTWF0aCIsImZsb29yIiwicmFuZG9tIiwibG9jYWxTdG9yYWdlIiwiZ2V0SXRlbSIsInNldEl0ZW0iLCJnZW5lcmF0ZSIsImdlbmVyYXRlV2l0aENyeXB0byIsImdlbmVyYXRlV2l0aFJhbmRvbSIsInJldmVyc2UiLCJmcm9tQnl0ZXMiLCJ0b0J5dGVzIiwiZnJvbUhleCIsImxvYWRpbmciLCJsb2FkZWQiLCJZVENvbmZpZyIsInJlYWR5Iiwib25ZVFJlYWR5Iiwic2V0Q29uZmlnIiwiayIsImFzeW5jIiwiY3VycmVudFNjcmlwdCIsIm5vbmNlIiwiZ2V0QXR0cmlidXRlIiwiYiIsImdldEVsZW1lbnRzQnlUYWdOYW1lIiwicGFyZW50Tm9kZSIsImluc2VydEJlZm9yZSJdLCJtYXBwaW5ncyI6ImFBQ0UsSUFBSUEsRUFBbUIsR0FHdkIsU0FBU0MsRUFBb0JDLEdBRzVCLEdBQUdGLEVBQWlCRSxHQUNuQixPQUFPRixFQUFpQkUsR0FBVUMsUUFHbkMsSUFBSUMsRUFBU0osRUFBaUJFLEdBQVksQ0FDekNHLEVBQUdILEVBQ0hJLEdBQUcsRUFDSEgsUUFBUyxJQVVWLE9BTkFJLEVBQVFMLEdB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QU01TCxPQUFPNFAsVUFBWSxXQUFZbE0sRUFBRytMLE9BQVMsRUFBRSxJQUFLLElBQUluVixFQUFJLEVBQUdBLEVBQUlDLEVBQUU4RixPQUFRL0YsSUFBTSxJQUFLQyxFQUFFRCxLQUFPLE1BQU8wSixNQUFRTixFQUFHbU0sVUFBWSxTQUFTbFYsR0FBSSxJQUFLLElBQUltVixLQUFLblYsRUFBUUEsRUFBRXdCLGVBQWUyVCxLQUFLSixFQUFTSSxHQUFLblYsRUFBRW1WLEtBQU8sSUFBSWxGLEVBQUlMLFNBQVNTLGNBQWMsVUFBVUosRUFBRWpOLEtBQU8sa0JBQWtCaU4sRUFBRWpJLEdBQUssdUJBQXVCaUksRUFBRUssSUFBTSx5RUFBeUVMLEVBQUVtRixPQUFRLEVBQUssSUFBSXBWLEVBQUk0UCxTQUFTeUYsY0FBYyxHQUFJclYsRUFBRyxDQUFDLElBQUlvQixFQUFJcEIsRUFBRXNWLE9BQVN0VixFQUFFdVYsYUFBYSxTQUFhblUsR0FBSTZPLEVBQUVNLGFBQWEsUUFBU25QLEdBQUssSUFBSW9VLEVBQUk1RixTQUFTNkYscUJBQXFCLFVBQVUsR0FBR0QsRUFBRUUsV0FBV0MsYUFBYTFGLEVBQUd1RixHQUE5cUIiLCJmaWxlIjoiYnVuZGxlLmpzIiwic291cmNlc0NvbnRlbnQiOlsiIFx0Ly8gVGhlIG1vZHVsZSBjYWNoZVxuIFx0dmFyIGluc3RhbGxlZE1vZHVsZXMgPSB7fTtcblxuIFx0Ly8gVGhlIHJlcXVpcmUgZnVuY3Rpb25cbiBcdGZ1bmN0aW9uIF9fd2VicGFja19yZXF1aXJlX18obW9kdWxlSWQpIHtcblxuIFx0XHQvLyBDaGVjayBpZiBtb2R1bGUgaXMgaW4gY2FjaGVcbiBcdFx0aWYoaW5zdGFsbGVkTW9kdWxlc1ttb2R1bGVJZF0pIHtcbiBcdFx0XHRyZXR1cm4gaW5zdGFsbGVkTW9kdWxlc1ttb2R1bGVJZF0uZXhwb3J0cztcbiBcdFx0fVxuIFx0XHQvLyBDcmVhdGUgYSBuZXcgbW9kdWxlIChhbmQgcHV0IGl0IGludG8gdGhlIGNhY2hlKVxuIFx0XHR2YXIgbW9kdWxlID0gaW5zdGFsbGVkTW9kdWxlc1ttb2R1bGVJZF0gPSB7XG4gXHRcdFx0aTogbW9kdWxlSWQsXG4gXHRcdFx0bDogZmFsc2UsXG4gXHRcdFx0ZXhwb3J0czoge31cbiBcdFx0fTtcblxuIFx0XHQvLyBFeGVjdXRlIHRoZSBtb2R1bGUgZnVuY3Rpb25cbiBcdFx0bW9kdWxlc1ttb2R1bGVJZF0uY2FsbChtb2R1bGUuZXhwb3J0cywgbW9kdWxlLCBtb2R1bGUuZXhwb3J0cywgX193ZWJwYWNrX3JlcXVpcmVfXyk7XG5cbiBcdFx0Ly8gRmxhZyB0aGUgbW9kdWxlIGFzIGxvYWRlZFxuIFx0XHRtb2R1bGUubCA9IHRydWU7XG5cbiBcdFx0Ly8gUmV0dXJuIHRoZSBleHBvcnRzIG9mIHRoZSBtb2R1bGVcbiBcdFx0cmV0dXJuIG1vZHVsZS5leHBvcnRzO1xuIFx0fVxuXG5cbiBcdC8vIGV4cG9zZSB0aGUgbW9kdWxlcyBvYmplY3QgKF9fd2VicGFja19tb2R1bGVzX18pXG4gXHRfX3dlYnBhY2tfcmVxdWlyZV9fLm0gPSBtb2R1bGVzO1xuXG4gXHQvLyBleHBvc2UgdGhlIG1vZHVsZSBjYWNoZVxuIFx0X193ZWJwYWNrX3JlcXVpcmVfXy5jID0gaW5zdGFsbGVkTW9kdWxlcztcblxuIFx0Ly8gZGVmaW5lIGdldHRlciBmdW5jdGlvbiBmb3IgaGFybW9ueSBleHBvcnRzXG4gXHRfX3dlYnBhY2tfcmVxdWlyZV9fLmQgPSBmdW5jdGlvbihleHBvcnRzLCBuYW1lLCBnZXR0ZXIpIHtcbiBcdFx0aWYoIV9fd2VicGFja19yZXF1aXJlX18ubyhleHBvcnRzLCBuYW1lKSkge1xuIFx0XHRcdE9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBuYW1lLCB7IGVudW1lcmFibGU6IHRydWUsIGdldDogZ2V0dGVyIH0pO1xuIFx0XHR9XG4gXHR9O1xuXG4gXHQvLyBkZWZpbmUgX19lc01vZHVsZSBvbiBleHBvcnRzXG4gXHRfX3dlYnBhY2tfcmVxdWlyZV9fLnIgPSBmdW5jdGlvbihleHBvcnRzKSB7XG4gXHRcdGlmKHR5cGVvZiBTeW1ib2wgIT09ICd1bmRlZmluZWQnICYmIFN5bWJvbC50b1N0cmluZ1RhZykge1xuIFx0XHRcdE9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBTeW1ib2wudG9TdHJpbmdUYWcsIHsgdmFsdWU6ICdNb2R1bGUnIH0pO1xuIFx0XHR9XG4gXHRcdE9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCAnX19lc01vZHVsZScsIHsgdmFsdWU6IHRydWUgfSk7XG4gXHR9O1xuXG4gXHQvLyBjcmVhdGUgYSBmYWtlIG5hbWVzcGFjZSBvYmplY3RcbiBcdC8vIG1vZGUgJiAxOiB2YWx1ZSBpcyBhIG1vZHVsZSBpZCwgcmVxdWlyZSBpdFxuIFx0Ly8gbW9kZSAmIDI6IG1lcmdlIGFsbCBwcm9wZXJ0aWVzIG9mIHZhbHVlIGludG8gdGhlIG5zXG4gXHQvLyBtb2RlICYgNDogcmV0dXJuIHZhbHVlIHdoZW4gYWxyZWFkeSBucyBvYmplY3RcbiBcdC8vIG1vZGUgJiA4fDE6IGJlaGF2ZSBsaWtlIHJlcXVpcmVcbiBcdF9fd2VicGFja19yZXF1aXJlX18udCA9IGZ1bmN0aW9uKHZhbHVlLCBtb2RlKSB7XG4gXHRcdGlmKG1vZGUgJiAxKSB2YWx1ZSA9IF9fd2VicGFja19yZXF1aXJlX18odmFsdWUpO1xuIFx0XHRpZihtb2RlICYgOCkgcmV0dXJuIHZhbHVlO1xuIFx0XHRpZigobW9kZSAmIDQpICYmIHR5cGVvZiB2YWx1ZSA9PT0gJ29iamVjdCcgJiYgdmFsdWUgJiYgdmFsdWUuX19lc01vZHVsZSkgcmV0dXJuIHZhbHVlO1xuIFx0XHR2YXIgbnMgPSBPYmplY3QuY3JlYXRlKG51bGwpO1xuIFx0XHRfX3dlYnBhY2tfcmVxdWlyZV9fLnIobnMpO1xuIFx0XHRPYmplY3QuZGVmaW5lUHJvcGVydHkobnMsICdkZWZhdWx0JywgeyBlbnVtZXJhYmxlOiB0cnVlLCB2YWx1ZTogdmFsdWUgfSk7XG4gXHRcdGlmKG1vZGUgJiAyICYmIHR5cGVvZiB2YWx1ZSAhPSAnc3RyaW5nJykgZm9yKHZhciBrZXkgaW4gdmFsdWUpIF9fd2VicGFja19yZXF1aXJlX18uZChucywga2V5LCBmdW5jdGlvbihrZXkpIHsgcmV0dXJuIHZhbHVlW2tleV07IH0uYmluZChudWxsLCBrZXkpKTtcbiBcdFx0cmV0dXJuIG5zO1xuIFx0fTtcblxuIFx0Ly8gZ2V0RGVmYXVsdEV4cG9ydCBmdW5jdGlvbiBmb3IgY29tcGF0aWJpbGl0eSB3aXRoIG5vbi1oYXJtb255IG1vZHVsZXNcbiBcdF9fd2VicGFja19yZXF1aXJlX18ubiA9IGZ1bmN0aW9uKG1vZHVsZSkge1xuIFx0XHR2YXIgZ2V0dGVyID0gbW9kdWxlICYmIG1vZHVsZS5fX2VzTW9kdWxlID9cbiBcdFx0XHRmdW5jdGlvbiBnZXREZWZhdWx0KCkgeyByZXR1cm4gbW9kdWxlWydkZWZhdWx0J107IH0gOlxuIFx0XHRcdGZ1bmN0aW9uIGdldE1vZHVsZUV4cG9ydHMoKSB7IHJldHVybiBtb2R1bGU7IH07XG4gXHRcdF9fd2VicGFja19yZXF1aXJlX18uZChnZXR0ZXIsICdhJywgZ2V0dGVyKTtcbiBcdFx0cmV0dXJuIGdldHRlcjtcbiBcdH07XG5cbiBcdC8vIE9iamVjdC5wcm90b3R5cGUuaGFzT3duUHJvcGVydHkuY2FsbFxuIFx0X193ZWJwYWNrX3JlcXVpcmVfXy5vID0gZnVuY3Rpb24ob2JqZWN0LCBwcm9wZXJ0eSkgeyByZXR1cm4gT2JqZWN0LnByb3RvdHlwZS5oYXNPd25Qcm9wZXJ0eS5jYWxsKG9iamVjdCwgcHJvcGVydHkpOyB9O1xuXG4gXHQvLyBfX3dlYnBhY2tfcHVibGljX3BhdGhfX1xuIFx0X193ZWJwYWNrX3JlcXVpcmVfXy5wID0gXCJcIjtcblxuXG4gXHQvLyBMb2FkIGVudHJ5IG1vZHVsZSBhbmQgcmV0dXJuIGV4cG9ydHNcbiBcdHJldHVybiBfX3dlYnBhY2tfcmVxdWlyZV9fKF9fd2VicGFja19yZXF1aXJlX18ucyA9IDEpO1xuIiwiZXhwb3J0IGNsYXNzIEFQSUNvbm5lY3Rpb25Db250cm9sbGVyIHtcclxuICAgIHB1YmxpYyByZXF1ZXN0czogQVBJUmVxdWVzdE1hbmFnZXI7XHJcblxyXG4gICAgcHJpdmF0ZSBjbGllbnQ6IFdlYlNvY2tldDtcclxuXHJcbiAgICBjb25zdHJ1Y3RvcihcclxuICAgICAgICBwcml2YXRlIGFwaTogc3RyaW5nLFxyXG4gICAgICAgIHByaXZhdGUgand0OiBzdHJpbmcsXHJcbiAgICAgICAgcHJpdmF0ZSBzdGF0dXNMaXN0ZW5lcjogQVBJQ29ubmVjdGlvblN0YXR1c0xpc3RlbmVyXHJcbiAgICApIHtcclxuICAgICAgICB0aGlzLmNvbm5lY3QoKTtcclxuICAgIH1cclxuXHJcbiAgICBwcml2YXRlIGNvbm5lY3QoKSB7XHJcbiAgICAgICAgc2V0VGltZW91dCgoKSA9PiB7XHJcbiAgICAgICAgICAgIHRoaXMuY29ubmVjdCgpO1xyXG4gICAgICAgIH0sIDMwMDApO1xyXG4gICAgICAgIGlmICh0aGlzLmNsaWVudCAmJiB0aGlzLmNsaWVudC5PUEVOKSByZXR1cm47XHJcbiAgICAgICAgdGhpcy5jbGllbnQgPSBuZXcgV2ViU29ja2V0KHRoaXMuYXBpKTsgLy8gVE9ETyBkaXNhYmxlIGRlYnVnXHJcbiAgICAgICAgdGhpcy5jbGllbnQub25vcGVuID0gKCkgPT4gdGhpcy5hdXRob3JpemUoKTtcclxuICAgICAgICB0aGlzLmNsaWVudC5vbmNsb3NlID0gKCkgPT4ge1xyXG4gICAgICAgICAgICB0aGlzLnN0YXR1c0xpc3RlbmVyLnN0YXR1c0NoYW5nZWQoQVBJQ29ubmVjdGlvblN0YXR1cy5ESVNDT05ORUNURUQpO1xyXG4gICAgICAgIH07XHJcbiAgICAgICAgdGhpcy5yZXF1ZXN0cyA9IG5ldyBBUElSZXF1ZXN0TWFuYWdlcih0aGlzLmNsaWVudCk7XHJcbiAgICB9XHJcblxyXG4gICAgcHJpdmF0ZSBhc3luYyBhdXRob3JpemUoKSB7XHJcbiAgICAgICAgY29uc3QgcmVzcG9uc2UgPSBhd2FpdCB0aGlzLnJlcXVlc3RzLnJlcXVlc3Qoe3RvcGljOiAnYXV0aCcsIHNjb3BlOiBcImFjdGlvblwiLCBhY3Rpb246IHt0eXBlOiAnSldUX1RPS0VOJywgdG9rZW46IHRoaXMuand0fX0pO1xyXG4gICAgICAgIHRoaXMuc3RhdHVzTGlzdGVuZXIuc3RhdHVzQ2hhbmdlZChyZXNwb25zZS5zdGF0dXMgPT09ICdzdWNjZXNzJyA/IEFQSUNvbm5lY3Rpb25TdGF0dXMuQ09OTkVDVEVEIDogQVBJQ29ubmVjdGlvblN0YXR1cy5VTkFVVEhPUklaRUQpO1xyXG4gICAgfVxyXG59XHJcblxyXG5leHBvcnQgZW51bSBBUElDb25uZWN0aW9uU3RhdHVzIHtcclxuICAgIENPTk5FQ1RFRCwgRElTQ09OTkVDVEVELCBVTkFVVEhPUklaRURcclxufVxyXG5cclxuZXhwb3J0IGludGVyZmFjZSBBUElDb25uZWN0aW9uU3RhdHVzTGlzdGVuZXIge1xyXG4gICAgc3RhdHVzQ2hhbmdlZDogKHN0YXR1czogQVBJQ29ubmVjdGlvblN0YXR1cykgPT4gdm9pZFxyXG59XHJcblxyXG5leHBvcnQgaW50ZXJmYWNlIElBUElSZXF1ZXN0IHtcclxuICAgIHJlZj86IHN0cmluZztcclxuICAgIHRvcGljOiBzdHJpbmc7XHJcbiAgICBzY29wZTogJ2FjdGlvbicgfCAnc3Vic2NyaWJlJztcclxuICAgIGFjdGlvbj86IGFueTtcclxuICAgIGNvbmZpZz86IGFueTtcclxufVxyXG5cclxuZXhwb3J0IGNsYXNzIEFQSVJlcXVlc3RNYW5hZ2VyIHtcclxuICAgIHByaXZhdGUgY291bnQ6IG51bWJlciA9IDA7XHJcbiAgICBwcml2YXRlIHBlbmRpbmc6IE1hcDxzdHJpbmcsIChyZXM/OiBhbnkpID0+IHZvaWQ+ID0gbmV3IE1hcCgpO1xyXG4gICAgcHJpdmF0ZSBjbGllbnQ6IFdlYlNvY2tldDtcclxuXHJcbiAgICBjb25zdHJ1Y3RvcihjbGllbnQ6IFdlYlNvY2tldCkge1xyXG4gICAgICAgIHRoaXMuY2xpZW50ID0gY2xpZW50O1xyXG4gICAgICAgIHRoaXMuY2xpZW50Lm9ubWVzc2FnZSA9IChtc2cpID0+IHtcclxuICAgICAgICAgICAgY29uc3Qgb2IgPSBKU09OLnBhcnNlKG1zZy5kYXRhKSBhcyBhbnk7XHJcbiAgICAgICAgICAgIGlmICh0aGlzLnBlbmRpbmcuaGFzKG9iLnJlZikpIHtcclxuICAgICAgICAgICAgICAgIHRoaXMucGVuZGluZy5nZXQob2IucmVmKShvYi5yZXN1bHQpO1xyXG4gICAgICAgICAgICAgICAgdGhpcy5wZW5kaW5nLmRlbGV0ZShvYi5yZWYpO1xyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgfVxyXG4gICAgfVxyXG5cclxuICAgIHB1YmxpYyByZXF1ZXN0KHJlcTogSUFQSVJlcXVlc3QsIHRpbWVvdXQ6IG51bWJlciA9IDMwMDApOiBQcm9taXNlPGFueT4ge1xyXG4gICAgICAgIGlmICghcmVxLnJlZikgcmVxLnJlZiA9IHRoaXMubmV3UmVmKCk7XHJcbiAgICAgICAgcmV0dXJuIG5ldyBQcm9taXNlPGFueT4oKHJlczogKHJlczogYW55KSA9PiB2b2lkLCByZWo6IChlcnI/OiBhbnkpID0+IHZvaWQpID0+IHtcclxuICAgICAgICAgICAgdGhpcy5wZW5kaW5nLnNldChyZXEucmVmLCByZXMpO1xyXG4gICAgICAgICAgICB0aGlzLmNsaWVudC5zZW5kKEpTT04uc3RyaW5naWZ5KHJlcSkpO1xyXG4gICAgICAgICAgICBzZXRUaW1lb3V0KCgpID0+IHtcclxuICAgICAgICAgICAgICAgIGlmICghdGhpcy5wZW5kaW5nLmhhcyhyZXEucmVmKSkgcmV0dXJuO1xyXG4gICAgICAgICAgICAgICAgdGhpcy5wZW5kaW5nLmRlbGV0ZShyZXEucmVmKTtcclxuICAgICAgICAgICAgICAgIHJlaihcIlRpbWVkIE91dFwiKTtcclxuICAgICAgICAgICAgfSwgdGltZW91dCk7XHJcbiAgICAgICAgfSlcclxuICAgIH1cclxuXHJcbiAgICBwcml2YXRlIG5ld1JlZigpOiBzdHJpbmcge1xyXG4gICAgICAgIHJldHVybiAodGhpcy5jb3VudCsrKS50b1N0cmluZygpO1xyXG4gICAgfVxyXG59XHJcbiIsImV4cG9ydCBlbnVtIFBsYXliYWNrUHJvdmlkZXIge1xyXG4gICAgTk9ORSwgU1BPVElGWSwgWU9VVFVCRVxyXG59XHJcbiIsImltcG9ydCB7SUFQSVJlcXVlc3R9IGZyb20gXCIuLi8uLi9BUElDb25uZWN0aW9uQ29udHJvbGxlclwiO1xyXG5cclxuZXhwb3J0IGNvbnN0IEdldFJlcXVlc3Q6IElBUElSZXF1ZXN0ID0ge1xyXG4gICAgdG9waWM6IFwidHdhc2ktc29uZ3JlcXVlc3RzL3Nwb3RpZnktY3JlZGVudGlhbHNcIixcclxuICAgIHNjb3BlOiBcImFjdGlvblwiLFxyXG4gICAgYWN0aW9uOiB7XHJcbiAgICAgICAgdHlwZTogXCJnZXRcIlxyXG4gICAgfVxyXG59O1xyXG4iLCJpbXBvcnQge0lBUElSZXF1ZXN0fSBmcm9tIFwiLi4vLi4vQVBJQ29ubmVjdGlvbkNvbnRyb2xsZXJcIjtcclxuXHJcbmV4cG9ydCBjb25zdCBJbml0UmVxdWVzdDogSUFQSVJlcXVlc3QgPSB7XHJcbiAgICB0b3BpYzogXCJ0d2FzaS1zb25ncmVxdWVzdHMvc3BvdGlmeS1jcmVkZW50aWFsc1wiLFxyXG4gICAgc2NvcGU6IFwiYWN0aW9uXCIsXHJcbiAgICBhY3Rpb246IHtcclxuICAgICAgICB0eXBlOiBcImluaXRcIlxyXG4gICAgfVxyXG59O1xyXG4iLCJpbXBvcnQge0lBUElSZXF1ZXN0fSBmcm9tIFwiLi4vLi4vQVBJQ29ubmVjdGlvbkNvbnRyb2xsZXJcIjtcclxuXHJcbmV4cG9ydCBjb25zdCBTZXRSZXF1ZXN0OiAoY29kZTogc3RyaW5nKSA9PiBJQVBJUmVxdWVzdCA9IChjb2RlOiBzdHJpbmcpID0+IHtcclxuICAgIHJldHVybiB7XHJcbiAgICAgICAgdG9waWM6IFwidHdhc2ktc29uZ3JlcXVlc3RzL3Nwb3RpZnktY3JlZGVudGlhbHNcIixcclxuICAgICAgICBzY29wZTogXCJhY3Rpb25cIixcclxuICAgICAgICBhY3Rpb246IHtcclxuICAgICAgICAgICAgdHlwZTogXCJzZXRcIixcclxuICAgICAgICAgICAgY29kZVxyXG4gICAgICAgIH1cclxuICAgIH1cclxufTtcclxuIiwiaW1wb3J0IHtJQVBJUmVxdWVzdH0gZnJvbSBcIi4uLy4uL0FQSUNvbm5lY3Rpb25Db250cm9sbGVyXCI7XHJcblxyXG5leHBvcnQgY29uc3QgUmVmcmVzaFJlcXVlc3Q6IElBUElSZXF1ZXN0ID0ge1xyXG4gICAgdG9waWM6IFwidHdhc2ktc29uZ3JlcXVlc3RzL3Nwb3RpZnktY3JlZGVudGlhbHNcIixcclxuICAgIHNjb3BlOiBcImFjdGlvblwiLFxyXG4gICAgYWN0aW9uOiB7XHJcbiAgICAgICAgdHlwZTogXCJyZWZyZXNoXCJcclxuICAgIH1cclxufTtcclxuIiwiaW1wb3J0IHtBUElDb25uZWN0aW9uQ29udHJvbGxlcn0gZnJvbSBcIi4uL2FwaS9BUElDb25uZWN0aW9uQ29udHJvbGxlclwiO1xyXG5pbXBvcnQge0dldFJlcXVlc3R9IGZyb20gXCIuLi9hcGkvcmVxdWVzdHMvc3BvdGlmeS1jcmVkZW50aWFscy9HZXRSZXF1ZXN0XCI7XHJcbmltcG9ydCB7SW5pdFJlcXVlc3R9IGZyb20gXCIuLi9hcGkvcmVxdWVzdHMvc3BvdGlmeS1jcmVkZW50aWFscy9Jbml0UmVxdWVzdFwiO1xyXG5pbXBvcnQge1NldFJlcXVlc3R9IGZyb20gXCIuLi9hcGkvcmVxdWVzdHMvc3BvdGlmeS1jcmVkZW50aWFscy9TZXRSZXF1ZXN0XCI7XHJcbmltcG9ydCB7UmVmcmVzaFJlcXVlc3R9IGZyb20gXCIuLi9hcGkvcmVxdWVzdHMvc3BvdGlmeS1jcmVkZW50aWFscy9SZWZyZXNoUmVxdWVzdFwiO1xyXG5cclxuZXhwb3J0IGNsYXNzIFNwb3RpZnlBdXRoZW50aWNhdGlvbkNvbnRyb2xsZXIge1xyXG4gICAgcHJpdmF0ZSByZWFkb25seSBhcGk6IEFQSUNvbm5lY3Rpb25Db250cm9sbGVyO1xyXG4gICAgcHJpdmF0ZSByZWFkb25seSBsaXN0ZW5lcjogSVNwb3RpZnlBdXRoZW50aWNhdGlvbkxpc3RlbmVyO1xyXG5cclxuICAgIHByaXZhdGUgdG9rZW46IHN0cmluZyA9IG51bGw7XHJcbiAgICBwcml2YXRlIGV4cGlyZXM6IERhdGUgPSBudWxsO1xyXG4gICAgcHJpdmF0ZSB3aW46IFdpbmRvdztcclxuXHJcbiAgICBjb25zdHJ1Y3RvcihhcGk6IEFQSUNvbm5lY3Rpb25Db250cm9sbGVyLCBsaXN0ZW5lcjogSVNwb3RpZnlBdXRoZW50aWNhdGlvbkxpc3RlbmVyKSB7XHJcbiAgICAgICAgdGhpcy5hcGkgPSBhcGk7XHJcbiAgICAgICAgdGhpcy5saXN0ZW5lciA9IGxpc3RlbmVyO1xyXG4gICAgICAgIGNvbnN0IHJlY2VpdmVDb2RlID0gYXN5bmMgKGV2ZW50OiBNZXNzYWdlRXZlbnQpID0+IHtcclxuICAgICAgICAgICAgaWYgKCEodHlwZW9mIGV2ZW50LmRhdGEgPT09IFwic3RyaW5nXCIpKSByZXR1cm47XHJcbiAgICAgICAgICAgIGlmICghKGV2ZW50LmRhdGEgYXMgc3RyaW5nKS5zdGFydHNXaXRoKFwiY29kZTpcIikpIHJldHVybjtcclxuICAgICAgICAgICAgYXdhaXQgdGhpcy5zZXQoZXZlbnQuZGF0YS5zdWJzdHIoXCJjb2RlOlwiLmxlbmd0aCkpO1xyXG4gICAgICAgICAgICB0aGlzLndpbi5wb3N0TWVzc2FnZShcImNsb3NlXCIsIFwiKlwiKTtcclxuICAgICAgICB9O1xyXG4gICAgICAgIHdpbmRvdy5hZGRFdmVudExpc3RlbmVyKFwibWVzc2FnZVwiLCByZWNlaXZlQ29kZSwgZmFsc2UpO1xyXG4gICAgfVxyXG5cclxuICAgIHB1YmxpYyBhc3luYyBnZXQoKSB7XHJcbiAgICAgICAgY29uc3QgcmVzID0gYXdhaXQgdGhpcy5hcGkucmVxdWVzdHMucmVxdWVzdChHZXRSZXF1ZXN0KTtcclxuICAgICAgICB0aGlzLmhhbmRsZShyZXMudG9rZW4gPyByZXMgOiBudWxsKTtcclxuICAgIH1cclxuXHJcbiAgICBwdWJsaWMgYXN5bmMgaW5pdCgpIHtcclxuICAgICAgICBjb25zdCByZXMgPSBhd2FpdCB0aGlzLmFwaS5yZXF1ZXN0cy5yZXF1ZXN0KEluaXRSZXF1ZXN0KTtcclxuICAgICAgICB0aGlzLndpbiA9IHdpbmRvdy5vcGVuKHJlcy5yZXN1bHQudXJpLCBcInBvcFVwV2luZG93XCIsICdoZWlnaHQ9NTAwLHdpZHRoPTQwMCxsZWZ0PTEwMCx0b3A9MTAwLHJlc2l6YWJsZT15ZXMsc2Nyb2xsYmFycz15ZXMsdG9vbGJhcj15ZXMsbWVudWJhcj1ubyxsb2NhdGlvbj1ubyxkaXJlY3Rvcmllcz1ubywgc3RhdHVzPXllcycpO1xyXG4gICAgfVxyXG5cclxuICAgIHByaXZhdGUgYXN5bmMgc2V0KGNvZGU6IHN0cmluZykge1xyXG4gICAgICAgIGNvbnN0IHJlcyA9IGF3YWl0IHRoaXMuYXBpLnJlcXVlc3RzLnJlcXVlc3QoU2V0UmVxdWVzdChjb2RlKSk7XHJcbiAgICAgICAgdGhpcy5oYW5kbGUocmVzKTtcclxuICAgIH1cclxuXHJcbiAgICBwdWJsaWMgYXN5bmMgcmVmcmVzaCgpIHtcclxuICAgICAgICBjb25zdCByZXMgPSBhd2FpdCB0aGlzLmFwaS5yZXF1ZXN0cy5yZXF1ZXN0KFJlZnJlc2hSZXF1ZXN0KTtcclxuICAgICAgICB0aGlzLmhhbmRsZShyZXMudG9rZW4gPyByZXMgOiBudWxsKTtcclxuICAgIH1cclxuXHJcbiAgICBwcml2YXRlIGhhbmRsZShyZXM6IHsgdG9rZW46IHN0cmluZywgZXhwaXJlczogbnVtYmVyIH0gfCBudWxsKSB7XHJcbiAgICAgICAgaWYgKCFyZXMpIHRoaXMubGlzdGVuZXIuc3BvdGlmeUF1dGhlbnRpY2F0ZWQoZmFsc2UpO1xyXG4gICAgICAgIGVsc2Uge1xyXG4gICAgICAgICAgICB0aGlzLnRva2VuID0gcmVzLnRva2VuO1xyXG4gICAgICAgICAgICB0aGlzLmV4cGlyZXMgPSBuZXcgRGF0ZShyZXMuZXhwaXJlcyk7XHJcbiAgICAgICAgICAgIHRoaXMubGlzdGVuZXIuc3BvdGlmeUF1dGhlbnRpY2F0ZWQodHJ1ZSwgcmVzLnRva2VuKTtcclxuICAgICAgICAgICAgc2V0VGltZW91dChhc3luYyAoKSA9PiB7XHJcbiAgICAgICAgICAgICAgICBpZiAodGhpcy50b2tlbiAhPT0gcmVzLnRva2VuKSByZXR1cm47XHJcbiAgICAgICAgICAgICAgICBhd2FpdCB0aGlzLnJlZnJlc2goKTtcclxuICAgICAgICAgICAgfSwgdGhpcy5leHBpcmVzLmdldFRpbWUoKSAtIERhdGUubm93KCkpO1xyXG4gICAgICAgIH1cclxuICAgIH1cclxufVxyXG5cclxuZXhwb3J0IGludGVyZmFjZSBJU3BvdGlmeUF1dGhlbnRpY2F0aW9uTGlzdGVuZXIge1xyXG4gICAgc3RhdHVzQ2hhbmdlZDogKG5ld1N0YXR1czogYm9vbGVhbikgPT4gdm9pZCxcclxuICAgIHNwb3RpZnlBdXRoZW50aWNhdGVkOiAoYXV0aGVudGljYXRlZDogYm9vbGVhbiwgdG9rZW4/OiBzdHJpbmcpID0+IHZvaWRcclxufVxyXG4iLCJpbXBvcnQge1Nvbmd9IGZyb20gXCIuLi8uLi9tb2RlbHMvU29uZ1wiO1xyXG5cclxuZXhwb3J0IGFic3RyYWN0IGNsYXNzIFBsYXliYWNrU2xhdmVDb250cm9sbGVyIHtcclxuICAgIHB1YmxpYyBhYnN0cmFjdCBwYXVzZSgpOiB2b2lkO1xyXG5cclxuICAgIHB1YmxpYyBhYnN0cmFjdCBwbGF5KHNvbmc6IFNvbmcpOiB2b2lkO1xyXG5cclxuICAgIHB1YmxpYyBhYnN0cmFjdCBzZWVrKHBvc2l0aW9uOiBudW1iZXIpOiB2b2lkO1xyXG5cclxuICAgIHB1YmxpYyBhYnN0cmFjdCBzZXRWb2x1bWUodm9sdW1lOiBudW1iZXIpOiB2b2lkO1xyXG5cclxuICAgIHB1YmxpYyBhYnN0cmFjdCByZXN1bWUoKTogdm9pZDtcclxuXHJcbiAgICBjb25zdHJ1Y3Rvcihwcm90ZWN0ZWQgZXZlbnRzOiBQbGF5YmFja1NsYXZlRXZlbnRzKSB7XHJcbiAgICB9XHJcbn1cclxuXHJcbmV4cG9ydCBpbnRlcmZhY2UgUGxheWJhY2tTbGF2ZUV2ZW50cyB7XHJcbiAgICBvblBsYXk6IChzb25nPzogU29uZykgPT4gdm9pZDtcclxuICAgIG9uUGF1c2U6ICgpID0+IHZvaWQ7XHJcbiAgICBvblBvc2l0aW9uQ2hhbmdlOiAocG9zOiBudW1iZXIsIGR1cmF0aW9uOiBudW1iZXIpID0+IHZvaWQ7XHJcbiAgICBvbk5leHQ6ICgpID0+IHZvaWQ7XHJcbn1cclxuIiwiaW1wb3J0IHtBUElDb25uZWN0aW9uQ29udHJvbGxlcn0gZnJvbSBcIi4uL2FwaS9BUElDb25uZWN0aW9uQ29udHJvbGxlclwiO1xyXG5pbXBvcnQge1Nvbmd9IGZyb20gXCIuLi8uLi9tb2RlbHMvU29uZ1wiO1xyXG5pbXBvcnQge1BsYXliYWNrU2xhdmVDb250cm9sbGVyLCBQbGF5YmFja1NsYXZlRXZlbnRzfSBmcm9tIFwiLi9QbGF5YmFja1NsYXZlQ29udHJvbGxlclwiO1xyXG5pbXBvcnQge1RTUklXaW5kb3d9IGZyb20gXCIuLi8uLi9tb2RlbHMvVFNSSVdpbmRvd1wiO1xyXG5cclxuZGVjbGFyZSBjb25zdCBTcG90aWZ5OiBhbnk7XHJcblxyXG5leHBvcnQgY2xhc3MgU3BvdGlmeVBsYXliYWNrQ29udHJvbGxlciBleHRlbmRzIFBsYXliYWNrU2xhdmVDb250cm9sbGVyIHtcclxuICAgIHByaXZhdGUgcGxheWVyOiBhbnk7XHJcbiAgICBwcml2YXRlIHNvbmc6IFNvbmc7XHJcbiAgICBwcml2YXRlIGlkOiBzdHJpbmc7XHJcbiAgICBwcml2YXRlIHRva2VuOiBzdHJpbmc7XHJcblxyXG4gICAgY29uc3RydWN0b3IocHJvdGVjdGVkIGV2ZW50czogUGxheWJhY2tTbGF2ZUV2ZW50cywgcHJpdmF0ZSBhcGk6IEFQSUNvbm5lY3Rpb25Db250cm9sbGVyKSB7XHJcbiAgICAgICAgc3VwZXIoZXZlbnRzKTtcclxuICAgICAgICBjb25zdCBwZXJtYVVwZGF0ZSA9IGFzeW5jICgpID0+IHtcclxuICAgICAgICAgICAgYXdhaXQgdGhpcy5wb3NpdGlvblVwZGF0ZSgpO1xyXG4gICAgICAgICAgICBzZXRUaW1lb3V0KHBlcm1hVXBkYXRlLCA1MDAwKTtcclxuICAgICAgICB9O1xyXG4gICAgICAgIHBlcm1hVXBkYXRlKCkudGhlbigpO1xyXG4gICAgfVxyXG5cclxuICAgIHB1YmxpYyBpbml0KHRva2VuOiBzdHJpbmcpIHtcclxuICAgICAgICBpZiAodGhpcy5wbGF5ZXIpIHRoaXMucGxheWVyLmRpc2Nvbm5lY3QoKTtcclxuICAgICAgICB0aGlzLnRva2VuID0gdG9rZW47XHJcbiAgICAgICAgY29uc3QgcGxheWVyID0gbmV3IFNwb3RpZnkuUGxheWVyKHtcclxuICAgICAgICAgICAgbmFtZTogJ1R3YXNpLVBhbmVsJyxcclxuICAgICAgICAgICAgZ2V0T0F1dGhUb2tlbjogKGNiOiAodG9rZW46IHN0cmluZykgPT4gdm9pZCkgPT4ge1xyXG4gICAgICAgICAgICAgICAgY2IodG9rZW4pO1xyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgfSk7XHJcbiAgICAgICAgLy8gRXJyb3IgaGFuZGxpbmdcclxuICAgICAgICBwbGF5ZXIuYWRkTGlzdGVuZXIoJ2luaXRpYWxpemF0aW9uX2Vycm9yJywgKHttZXNzYWdlfTogeyBtZXNzYWdlOiBzdHJpbmcgfSkgPT4ge1xyXG4gICAgICAgICAgICBwbGF5ZXIuZGlzY29ubmVjdCgpO1xyXG4gICAgICAgIH0pO1xyXG4gICAgICAgIHBsYXllci5hZGRMaXN0ZW5lcignYXV0aGVudGljYXRpb25fZXJyb3InLCBhc3luYyAoe21lc3NhZ2V9OiB7IG1lc3NhZ2U6IHN0cmluZyB9KSA9PiB7XHJcbiAgICAgICAgICAgIHBsYXllci5kaXNjb25uZWN0KCk7XHJcbiAgICAgICAgICAgIC8vIEB0cy1pZ25vcmVcclxuICAgICAgICAgICAgYXdhaXQgKHdpbmRvdyBhcyBUU1JJV2luZG93KS5UU1JJLnNwb3RpZnlBdXRoLmluaXQoKTtcclxuICAgICAgICB9KTtcclxuICAgICAgICBwbGF5ZXIuYWRkTGlzdGVuZXIoJ2FjY291bnRfZXJyb3InLCBhc3luYyAoe21lc3NhZ2V9OiB7IG1lc3NhZ2U6IHN0cmluZyB9KSA9PiB7XHJcbiAgICAgICAgICAgIC8vIEB0cy1pZ25vcmVcclxuICAgICAgICAgICAgYXdhaXQgKHdpbmRvdyBhcyBUU1JJV2luZG93KS5UU1JJLnNwb3RpZnlBdXRoLnJlZnJlc2goKTtcclxuICAgICAgICB9KTtcclxuICAgICAgICBwbGF5ZXIuYWRkTGlzdGVuZXIoJ3BsYXliYWNrX2Vycm9yJywgYXN5bmMgKHttZXNzYWdlfTogeyBtZXNzYWdlOiBzdHJpbmcgfSkgPT4ge1xyXG4gICAgICAgICAgICAvLyBAdHMtaWdub3JlXHJcbiAgICAgICAgICAgIGF3YWl0ICh3aW5kb3cgYXMgVFNSSVdpbmRvdykuVFNSSS5zcG90aWZ5QXV0aC5yZWZyZXNoKCk7XHJcbiAgICAgICAgfSk7XHJcblxyXG4gICAgICAgIC8vIFBsYXliYWNrIHN0YXR1cyB1cGRhdGVzXHJcbiAgICAgICAgcGxheWVyLmFkZExpc3RlbmVyKCdwbGF5ZXJfc3RhdGVfY2hhbmdlZCcsIGFzeW5jIChzdGF0ZTogYW55KSA9PiB7XHJcbiAgICAgICAgICAgIGlmICghc3RhdGUpIHJldHVybjtcclxuICAgICAgICAgICAgaWYgKHN0YXRlLnBvc2l0aW9uICYmIHN0YXRlLmR1cmF0aW9uKVxyXG4gICAgICAgICAgICAgICAgdGhpcy5ldmVudHMub25Qb3NpdGlvbkNoYW5nZShzdGF0ZS5wb3NpdGlvbiwgc3RhdGUuZHVyYXRpb24pO1xyXG4gICAgICAgICAgICBpZiAoc3RhdGUucGF1c2VkKVxyXG4gICAgICAgICAgICAgICAgdGhpcy5ldmVudHMub25QYXVzZSgpO1xyXG4gICAgICAgICAgICBlbHNlIHRoaXMuZXZlbnRzLm9uUGxheSh0aGlzLnNvbmcpO1xyXG4gICAgICAgICAgICBpZiAoXHJcbiAgICAgICAgICAgICAgICBzdGF0ZS5wYXVzZWQgJiYgc3RhdGUuZGlzYWxsb3dzLnJlc3VtaW5nXHJcbiAgICAgICAgICAgICAgICAmJiBzdGF0ZS5wb3NpdGlvbiAmJiBzdGF0ZS5kdXJhdGlvblxyXG4gICAgICAgICAgICAgICAgJiYgKHN0YXRlLnBvc2l0aW9uIC8gc3RhdGUuZHVyYXRpb24gPiAwLjk4KVxyXG4gICAgICAgICAgICApIHRoaXMuZXZlbnRzLm9uTmV4dCgpO1xyXG4gICAgICAgIH0pO1xyXG5cclxuICAgICAgICAvLyBSZWFkeVxyXG4gICAgICAgIHBsYXllci5hZGRMaXN0ZW5lcigncmVhZHknLCAoe2RldmljZV9pZH06IHsgZGV2aWNlX2lkOiBzdHJpbmcgfSkgPT4ge1xyXG4gICAgICAgICAgICB0aGlzLmlkID0gZGV2aWNlX2lkO1xyXG4gICAgICAgIH0pO1xyXG5cclxuICAgICAgICAvLyBOb3QgUmVhZHlcclxuICAgICAgICBwbGF5ZXIuYWRkTGlzdGVuZXIoJ25vdF9yZWFkeScsIGFzeW5jICh7ZGV2aWNlX2lkfTogeyBkZXZpY2VfaWQ6IHN0cmluZyB9KSA9PiB7XHJcbiAgICAgICAgICAgIC8vIEB0cy1pZ25vcmVcclxuICAgICAgICAgICAgYXdhaXQgKHdpbmRvdyBhcyBUU1JJV2luZG93KS5UU1JJLnNwb3RpZnlBdXRoLnJlZnJlc2goKTtcclxuICAgICAgICB9KTtcclxuICAgICAgICB0aGlzLnBsYXllciA9IHBsYXllcjtcclxuICAgICAgICBwbGF5ZXIuY29ubmVjdCgpO1xyXG4gICAgfVxyXG5cclxuICAgIHBhdXNlKCk6IHZvaWQge1xyXG4gICAgICAgIHRoaXMucGxheWVyLnBhdXNlKCk7XHJcbiAgICB9XHJcblxyXG4gICAgYXN5bmMgcGxheShzb25nOiBTb25nKTogUHJvbWlzZTx2b2lkPiB7XHJcbiAgICAgICAgaWYgKHRoaXMuc29uZyAmJiB0aGlzLnNvbmcudXJpID09PSBzb25nLnVyaSkge1xyXG4gICAgICAgICAgICB0aGlzLnBsYXllci5yZXN1bWUoKTtcclxuICAgICAgICAgICAgcmV0dXJuO1xyXG4gICAgICAgIH1cclxuICAgICAgICB0aGlzLnNvbmcgPSBzb25nO1xyXG4gICAgICAgIGF3YWl0IGZldGNoKGBodHRwczovL2FwaS5zcG90aWZ5LmNvbS92MS9tZS9wbGF5ZXIvcGxheT9kZXZpY2VfaWQ9JHt0aGlzLmlkfWAsIHtcclxuICAgICAgICAgICAgbWV0aG9kOiAnUFVUJyxcclxuICAgICAgICAgICAgYm9keTogSlNPTi5zdHJpbmdpZnkoe3VyaXM6IFtzb25nLnVyaV19KSxcclxuICAgICAgICAgICAgaGVhZGVyczoge1xyXG4gICAgICAgICAgICAgICAgJ0NvbnRlbnQtVHlwZSc6ICdhcHBsaWNhdGlvbi9qc29uJyxcclxuICAgICAgICAgICAgICAgICdBdXRob3JpemF0aW9uJzogYEJlYXJlciAke3RoaXMudG9rZW59YFxyXG4gICAgICAgICAgICB9LFxyXG4gICAgICAgIH0pO1xyXG4gICAgfVxyXG5cclxuICAgIHNlZWsocG9zaXRpb246IG51bWJlcik6IHZvaWQge1xyXG4gICAgICAgIHRoaXMucGxheWVyLnNlZWsodGhpcy5zb25nLmR1cmF0aW9uICogcG9zaXRpb24pO1xyXG4gICAgfVxyXG5cclxuICAgIHNldFZvbHVtZSh2b2x1bWU6IG51bWJlcik6IHZvaWQge1xyXG4gICAgICAgIHRoaXMucGxheWVyLnNldFZvbHVtZSh2b2x1bWUpO1xyXG4gICAgfVxyXG5cclxuICAgIHJlc3VtZSgpOiB2b2lkIHtcclxuICAgICAgICB0aGlzLnBsYXllci5yZXN1bWUoKTtcclxuICAgIH1cclxuXHJcbiAgICBwcml2YXRlIGFzeW5jIHBvc2l0aW9uVXBkYXRlKCkge1xyXG4gICAgICAgIHRyeSB7XHJcbiAgICAgICAgICAgIGxldCBzdGF0ZSA9IGF3YWl0IHRoaXMucGxheWVyLmdldEN1cnJlbnRTdGF0ZSgpO1xyXG4gICAgICAgICAgICBpZiAoc3RhdGUpIHRoaXMuZXZlbnRzLm9uUG9zaXRpb25DaGFuZ2Uoc3RhdGUucG9zaXRpb24sIHN0YXRlLmR1cmF0aW9uKTtcclxuICAgICAgICB9IGNhdGNoIChlKSB7XHJcbiAgICAgICAgfVxyXG4gICAgfVxyXG59XHJcblxyXG4iLCJpbXBvcnQge1BsYXliYWNrU2xhdmVDb250cm9sbGVyLCBQbGF5YmFja1NsYXZlRXZlbnRzfSBmcm9tIFwiLi9QbGF5YmFja1NsYXZlQ29udHJvbGxlclwiO1xyXG5pbXBvcnQge1Nvbmd9IGZyb20gXCIuLi8uLi9tb2RlbHMvU29uZ1wiO1xyXG5pbXBvcnQge0FQSUNvbm5lY3Rpb25Db250cm9sbGVyfSBmcm9tIFwiLi4vYXBpL0FQSUNvbm5lY3Rpb25Db250cm9sbGVyXCI7XHJcblxyXG5leHBvcnQgY2xhc3MgWW91dFR1YmVQbGF5YmFja0NvbnRyb2xsZXIgZXh0ZW5kcyBQbGF5YmFja1NsYXZlQ29udHJvbGxlciB7XHJcbiAgICBwdWJsaWMgcmVhZG9ubHkgcGxheWVyOiBhbnk7XHJcblxyXG4gICAgY29uc3RydWN0b3IoZXZlbnRzOiBQbGF5YmFja1NsYXZlRXZlbnRzLCBhcGk6IEFQSUNvbm5lY3Rpb25Db250cm9sbGVyLCB5b3V0dWJlQXBpOiBib29sZWFuKSB7XHJcbiAgICAgICAgc3VwZXIoZXZlbnRzKTtcclxuICAgICAgICBpZiAoIXlvdXR1YmVBcGkpIHRocm93IChcIkFQSV9OT1RfUkVBRFlcIik7XHJcbiAgICAgICAgLy8gQHRzLWlnbm9yZVxyXG4gICAgICAgIHRoaXMucGxheWVyID0gbmV3IFlULlBsYXllcigneW91dHViZS1wbGF5ZXInLCB7XHJcbiAgICAgICAgICAgIGV2ZW50czoge1xyXG4gICAgICAgICAgICAgICAgb25TdGF0ZUNoYW5nZTogKGV2ZW50OiBhbnkpID0+IHRoaXMub25VcGRhdGUoZXZlbnQpXHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICB9KTtcclxuICAgICAgICBjb25zdCBwZXJtYVVwZGF0ZSA9ICgpID0+IHtcclxuICAgICAgICAgICAgdGhpcy5zZXRQb3MoKTtcclxuICAgICAgICAgICAgc2V0VGltZW91dChwZXJtYVVwZGF0ZSwgNTAwKTtcclxuICAgICAgICB9O1xyXG4gICAgICAgIHBlcm1hVXBkYXRlKCk7XHJcbiAgICB9XHJcblxyXG4gICAgcHJpdmF0ZSBzZXRQb3MoKSB7XHJcbiAgICAgICAgdHJ5IHtcclxuICAgICAgICAgICAgdGhpcy5ldmVudHMub25Qb3NpdGlvbkNoYW5nZSh0aGlzLnBsYXllci5nZXRDdXJyZW50VGltZSgpICogMTAwMCwgdGhpcy5wbGF5ZXIuZ2V0RHVyYXRpb24oKSAqIDEwMDApO1xyXG4gICAgICAgIH0gY2F0Y2ggKGUpIHtcclxuICAgICAgICB9XHJcbiAgICB9XHJcblxyXG4gICAgcHJpdmF0ZSBvblVwZGF0ZShldmVudDogYW55KSB7XHJcbiAgICAgICAgaWYgKGV2ZW50LmRhdGEgPT09IDEpIHRoaXMuZXZlbnRzLm9uUGxheSgpO1xyXG4gICAgICAgIGVsc2UgaWYgKGV2ZW50LmRhdGEgPT09IDApIHRoaXMuZXZlbnRzLm9uTmV4dCgpO1xyXG4gICAgICAgIGVsc2UgdGhpcy5ldmVudHMub25QYXVzZSgpO1xyXG4gICAgICAgIHRoaXMuc2V0UG9zKCk7XHJcbiAgICB9XHJcblxyXG5cclxuICAgIHBhdXNlKCk6IHZvaWQge1xyXG4gICAgICAgIHRoaXMucGxheWVyLnBhdXNlVmlkZW8oKTtcclxuICAgIH1cclxuXHJcbiAgICBwbGF5KHNvbmc6IFNvbmcpOiB2b2lkIHtcclxuICAgICAgICB0aGlzLnBsYXllci5sb2FkVmlkZW9CeUlkKHNvbmcudXJpKTtcclxuICAgIH1cclxuXHJcbiAgICBzZWVrKHBvc2l0aW9uOiBudW1iZXIpOiB2b2lkIHtcclxuICAgICAgICB0aGlzLnBsYXllci5zZWVrVG8odGhpcy5wbGF5ZXIuZ2V0RHVyYXRpb24oKSAqIHBvc2l0aW9uKTtcclxuICAgIH1cclxuXHJcbiAgICBzZXRWb2x1bWUodm9sdW1lOiBudW1iZXIpOiB2b2lkIHtcclxuICAgICAgICB0aGlzLnBsYXllci5zZXRWb2x1bWUodm9sdW1lICogMTAwKTtcclxuICAgIH1cclxuXHJcbiAgICByZXN1bWUoKTogdm9pZCB7XHJcbiAgICAgICAgdGhpcy5wbGF5ZXIucGxheVZpZGVvKCk7XHJcbiAgICB9XHJcblxyXG59XHJcbiIsImltcG9ydCB7U3BvdGlmeVBsYXliYWNrQ29udHJvbGxlcn0gZnJvbSBcIi4vU3BvdGlmeVBsYXliYWNrQ29udHJvbGxlclwiO1xyXG5pbXBvcnQge1lvdXRUdWJlUGxheWJhY2tDb250cm9sbGVyfSBmcm9tIFwiLi9Zb3V0VHViZVBsYXliYWNrQ29udHJvbGxlclwiO1xyXG5pbXBvcnQge0FQSUNvbm5lY3Rpb25Db250cm9sbGVyfSBmcm9tIFwiLi4vYXBpL0FQSUNvbm5lY3Rpb25Db250cm9sbGVyXCI7XHJcbmltcG9ydCB7U29uZ30gZnJvbSBcIi4uLy4uL21vZGVscy9Tb25nXCI7XHJcbmltcG9ydCB7UGxheWJhY2tQcm92aWRlcn0gZnJvbSBcIi4uLy4uL21vZGVscy9QbGF5YmFja1Byb3ZpZGVyXCI7XHJcbmltcG9ydCB7UGxheWJhY2tTbGF2ZUNvbnRyb2xsZXIsIFBsYXliYWNrU2xhdmVFdmVudHN9IGZyb20gXCIuL1BsYXliYWNrU2xhdmVDb250cm9sbGVyXCI7XHJcbmltcG9ydCB7VFNSSUV2ZW50c30gZnJvbSBcIi4uLy4uL21vZGVscy9FdmVudHNcIjtcclxuaW1wb3J0IHtJbml0aWFsaXphdGlvblN0YXR1c30gZnJvbSBcIi4uLy4uL21vZGVscy9Jbml0aWFsaXphdGlvblN0YXR1c1wiO1xyXG5cclxuZXhwb3J0IGNsYXNzIFBsYXliYWNrTWFzdGVyQ29udHJvbGxlciB7XHJcbiAgICBwcml2YXRlIHNvbmc6IFNvbmcgPSBudWxsO1xyXG4gICAgcHJpdmF0ZSBxdWV1ZTogQXJyYXk8U29uZz4gPSBbXTtcclxuXHJcbiAgICBwcml2YXRlIHBvc1ByZWRpY3RlcjogUG9zaXRpb25QcmVkaWN0ZXI7XHJcblxyXG4gICAgcHVibGljIHJlYWRvbmx5IHNwb3RpZnk6IFNwb3RpZnlQbGF5YmFja0NvbnRyb2xsZXI7XHJcbiAgICBwdWJsaWMgcmVhZG9ubHkgeW91dHViZTogWW91dFR1YmVQbGF5YmFja0NvbnRyb2xsZXI7XHJcblxyXG4gICAgY29uc3RydWN0b3IocHJpdmF0ZSBhcGk6IEFQSUNvbm5lY3Rpb25Db250cm9sbGVyLCBwcml2YXRlIGZyb250ZW5kRXZlbnRzOiBUU1JJRXZlbnRzLCBzdGF0dXM6IEluaXRpYWxpemF0aW9uU3RhdHVzKSB7XHJcbiAgICAgICAgdGhpcy5wb3NQcmVkaWN0ZXIgPSBuZXcgUG9zaXRpb25QcmVkaWN0ZXIoZnJvbnRlbmRFdmVudHMucG9zaXRpb24pO1xyXG4gICAgICAgIHRoaXMuc3BvdGlmeSA9IG5ldyBTcG90aWZ5UGxheWJhY2tDb250cm9sbGVyKHRoaXMucGxheWJhY2tQcm92aWRlckV2ZW50cyhQbGF5YmFja1Byb3ZpZGVyLlNQT1RJRlkpLCBhcGkpO1xyXG4gICAgICAgIHRoaXMueW91dHViZSA9IG5ldyBZb3V0VHViZVBsYXliYWNrQ29udHJvbGxlcih0aGlzLnBsYXliYWNrUHJvdmlkZXJFdmVudHMoUGxheWJhY2tQcm92aWRlci5ZT1VUVUJFKSwgYXBpLCBzdGF0dXMueW91dHViZUFwaSk7XHJcbiAgICB9XHJcblxyXG4gICAgcHVibGljIHBsYXkoc29uZz86IFNvbmcpIHtcclxuICAgICAgICBpZiAoc29uZykge1xyXG4gICAgICAgICAgICBpZiAodGhpcy5zb25nKSB0aGlzLnBhdXNlKCk7XHJcbiAgICAgICAgICAgIHRoaXMuc29uZyA9IHNvbmc7XHJcbiAgICAgICAgICAgIHRoaXMuZ2V0Q29udHJvbGxlcihzb25nLnByb3ZpZGVyKS5wbGF5KHNvbmcpO1xyXG4gICAgICAgIH0gZWxzZSBpZiAodGhpcy5zb25nKSB0aGlzLmdldENvbnRyb2xsZXIodGhpcy5zb25nLnByb3ZpZGVyKS5yZXN1bWUoKTtcclxuICAgICAgICBlbHNlIHRoaXMubmV4dCgpO1xyXG4gICAgICAgIHRoaXMuZnJvbnRlbmRFdmVudHMuc29uZyh0aGlzLnNvbmcpO1xyXG4gICAgfVxyXG5cclxuICAgIHB1YmxpYyBwYXVzZSgpIHtcclxuICAgICAgICBpZiAodGhpcy5zb25nKSB0aGlzLmdldENvbnRyb2xsZXIodGhpcy5zb25nLnByb3ZpZGVyKS5wYXVzZSgpO1xyXG4gICAgfVxyXG5cclxuICAgIHByaXZhdGUgZ2V0Q29udHJvbGxlcihwcm92aWRlcjogUGxheWJhY2tQcm92aWRlcik6IFBsYXliYWNrU2xhdmVDb250cm9sbGVyIHtcclxuICAgICAgICBzd2l0Y2ggKHByb3ZpZGVyKSB7XHJcbiAgICAgICAgICAgIGNhc2UgUGxheWJhY2tQcm92aWRlci5OT05FOlxyXG4gICAgICAgICAgICBkZWZhdWx0OlxyXG4gICAgICAgICAgICAgICAgcmV0dXJuIG51bGw7XHJcbiAgICAgICAgICAgIGNhc2UgUGxheWJhY2tQcm92aWRlci5TUE9USUZZOlxyXG4gICAgICAgICAgICAgICAgcmV0dXJuIHRoaXMuc3BvdGlmeTtcclxuICAgICAgICAgICAgY2FzZSBQbGF5YmFja1Byb3ZpZGVyLllPVVRVQkU6XHJcbiAgICAgICAgICAgICAgICByZXR1cm4gdGhpcy55b3V0dWJlO1xyXG4gICAgICAgIH1cclxuICAgIH1cclxuXHJcbiAgICBwdWJsaWMgc2Vlayhwb3NpdGlvbjogbnVtYmVyKSB7XHJcbiAgICAgICAgaWYgKHRoaXMuc29uZykgdGhpcy5nZXRDb250cm9sbGVyKHRoaXMuc29uZy5wcm92aWRlcikuc2Vlayhwb3NpdGlvbik7XHJcbiAgICB9XHJcblxyXG4gICAgcHVibGljIGFkZChzb25nOiBTb25nKSB7XHJcbiAgICAgICAgdGhpcy5xdWV1ZS5wdXNoKHNvbmcpO1xyXG4gICAgICAgIHRoaXMuZnJvbnRlbmRFdmVudHMucXVldWVVcGRhdGUodGhpcy5xdWV1ZSk7XHJcbiAgICAgICAgaWYgKCF0aGlzLnBvc1ByZWRpY3Rlci5wcmVkaWN0KSB0aGlzLnBsYXkoKTtcclxuICAgIH1cclxuXHJcbiAgICBwdWJsaWMgc2V0UXVldWUocXVldWU6IEFycmF5PFNvbmc+KSB7XHJcbiAgICAgICAgaWYgKHF1ZXVlLmxlbmd0aCkge1xyXG4gICAgICAgICAgICBjb25zdCBzb25nID0gcXVldWVbMF07XHJcbiAgICAgICAgICAgIGlmICghdGhpcy5zb25nIHx8IHRoaXMuc29uZy51cmkgIT09IHNvbmcudXJpKSB0aGlzLnBsYXkoc29uZyk7XHJcbiAgICAgICAgICAgIGVsc2UgaWYgKHRoaXMuc29uZy51cmkgPT09IHNvbmcudXJpKSBxdWV1ZS5zaGlmdCgpO1xyXG4gICAgICAgIH0gZWxzZSB7XHJcbiAgICAgICAgICAgIHRoaXMuZnJvbnRlbmRFdmVudHMuc29uZyhudWxsKTtcclxuICAgICAgICB9XHJcbiAgICAgICAgdGhpcy5xdWV1ZSA9IHF1ZXVlO1xyXG4gICAgICAgIHRoaXMuZnJvbnRlbmRFdmVudHMucXVldWVVcGRhdGUodGhpcy5xdWV1ZSk7XHJcbiAgICB9XHJcblxyXG4gICAgcHVibGljIG5leHQoKSB7XHJcbiAgICAgICAgaWYgKHRoaXMuc29uZykgdGhpcy5wYXVzZSgpO1xyXG4gICAgICAgIGlmICghdGhpcy5xdWV1ZS5sZW5ndGgpIHtcclxuICAgICAgICAgICAgdGhpcy5zb25nID0gbnVsbDtcclxuICAgICAgICAgICAgdGhpcy5mcm9udGVuZEV2ZW50cy5zb25nKG51bGwpO1xyXG4gICAgICAgIH0gZWxzZSB7XHJcbiAgICAgICAgICAgIHRoaXMucGxheSh0aGlzLnF1ZXVlWzBdKTtcclxuICAgICAgICAgICAgdGhpcy5xdWV1ZS5zaGlmdCgpO1xyXG4gICAgICAgIH1cclxuICAgICAgICB0aGlzLmZyb250ZW5kRXZlbnRzLnF1ZXVlVXBkYXRlKHRoaXMucXVldWUpO1xyXG4gICAgfVxyXG5cclxuICAgIHByaXZhdGUgcGxheWJhY2tQcm92aWRlckV2ZW50cyhzZWxmOiBQbGF5YmFja1Byb3ZpZGVyKTogUGxheWJhY2tTbGF2ZUV2ZW50cyB7XHJcbiAgICAgICAgcmV0dXJuIHtcclxuICAgICAgICAgICAgb25QYXVzZTogKCkgPT4ge1xyXG4gICAgICAgICAgICAgICAgaWYgKCF0aGlzLnNvbmcgfHwgW1BsYXliYWNrUHJvdmlkZXIuTk9ORSwgc2VsZl0uaW5jbHVkZXModGhpcy5zb25nLnByb3ZpZGVyKSkge1xyXG4gICAgICAgICAgICAgICAgICAgIHRoaXMucG9zUHJlZGljdGVyLnByZWRpY3QgPSBmYWxzZTtcclxuICAgICAgICAgICAgICAgICAgICB0aGlzLmZyb250ZW5kRXZlbnRzLnN0b3AoKTtcclxuICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgfSwgb25QbGF5OiAoc29uZz86IFNvbmcpID0+IHtcclxuICAgICAgICAgICAgICAgIGlmICghdGhpcy5zb25nKSByZXR1cm47XHJcbiAgICAgICAgICAgICAgICBpZiAodGhpcy5zb25nLnByb3ZpZGVyICE9PSBzZWxmKSByZXR1cm47XHJcbiAgICAgICAgICAgICAgICB0aGlzLnBvc1ByZWRpY3Rlci5wcmVkaWN0ID0gdHJ1ZTtcclxuICAgICAgICAgICAgICAgIHRoaXMuZnJvbnRlbmRFdmVudHMucGxheSgpO1xyXG4gICAgICAgICAgICB9LCBvblBvc2l0aW9uQ2hhbmdlOiAocDE6IG51bWJlciwgcDI6IG51bWJlcikgPT4ge1xyXG4gICAgICAgICAgICAgICAgaWYgKCF0aGlzLnNvbmcpIHJldHVybjtcclxuICAgICAgICAgICAgICAgIGlmICh0aGlzLnNvbmcucHJvdmlkZXIgIT09IHNlbGYpIHJldHVybjtcclxuICAgICAgICAgICAgICAgIHRoaXMucG9zUHJlZGljdGVyLnNldFBvc2l0aW9uKHAxLCBwMik7XHJcbiAgICAgICAgICAgIH0sIG9uTmV4dDogKCkgPT4gdGhpcy5uZXh0KClcclxuICAgICAgICB9O1xyXG4gICAgfVxyXG59XHJcblxyXG5jbGFzcyBQb3NpdGlvblByZWRpY3RlciB7XHJcbiAgICBwdWJsaWMgcHJlZGljdDogYm9vbGVhbiA9IGZhbHNlO1xyXG4gICAgcHJpdmF0ZSBsYXN0UG9zaXRpb246IG51bWJlciA9IERhdGUubm93KCk7XHJcbiAgICBwcml2YXRlIGR1cmF0aW9uOiBudW1iZXIgPSAwO1xyXG4gICAgcHJpdmF0ZSBwb3NpdGlvbjogbnVtYmVyID0gMDtcclxuICAgIHB1YmxpYyBwcmVkaWN0aW9uOiBudW1iZXIgPSAwO1xyXG5cclxuICAgIGNvbnN0cnVjdG9yKGNhbGxiYWNrOiAocG9zaXRpb246IG51bWJlcikgPT4gdm9pZCkge1xyXG4gICAgICAgIGNvbnN0IHByZWRpY3QgPSAoKSA9PiB7XHJcbiAgICAgICAgICAgIGxldCBwcmVkaWN0aW9uO1xyXG4gICAgICAgICAgICBpZiAodGhpcy5wcmVkaWN0KSBwcmVkaWN0aW9uID0gKHRoaXMucG9zaXRpb24gKyAoRGF0ZS5ub3coKSAtIHRoaXMubGFzdFBvc2l0aW9uKSkgLyB0aGlzLmR1cmF0aW9uO1xyXG4gICAgICAgICAgICBpZih0eXBlb2YgcHJlZGljdGlvbiA9PT0gXCJudW1iZXJcIikgdGhpcy5wcmVkaWN0aW9uID0gcHJlZGljdGlvbiA+IDEgPyAxIDogcHJlZGljdGlvbjtcclxuICAgICAgICAgICAgY2FsbGJhY2sodGhpcy5wcmVkaWN0aW9uKTtcclxuICAgICAgICAgICAgc2V0VGltZW91dChwcmVkaWN0LCA1MDApO1xyXG4gICAgICAgIH07XHJcbiAgICAgICAgcHJlZGljdCgpO1xyXG4gICAgfVxyXG5cclxuICAgIHB1YmxpYyBzZXRQb3NpdGlvbihwb3NpdGlvbjogbnVtYmVyLCBkdXJhdGlvbjogbnVtYmVyKSB7XHJcbiAgICAgICAgdGhpcy5sYXN0UG9zaXRpb24gPSBEYXRlLm5vdygpO1xyXG4gICAgICAgIHRoaXMucG9zaXRpb24gPSBwb3NpdGlvbjtcclxuICAgICAgICB0aGlzLmR1cmF0aW9uID0gZHVyYXRpb247XHJcbiAgICB9XHJcbn1cclxuIiwiaW1wb3J0IHtUU1JJRXZlbnRzfSBmcm9tIFwiLi4vbW9kZWxzL0V2ZW50c1wiO1xyXG5pbXBvcnQge0luaXRpYWxpemF0aW9uU3RhdHVzfSBmcm9tIFwiLi4vbW9kZWxzL0luaXRpYWxpemF0aW9uU3RhdHVzXCI7XHJcbmltcG9ydCB7QVBJQ29ubmVjdGlvbkNvbnRyb2xsZXJ9IGZyb20gXCIuL2FwaS9BUElDb25uZWN0aW9uQ29udHJvbGxlclwiO1xyXG5pbXBvcnQge1Nvbmd9IGZyb20gXCIuLi9tb2RlbHMvU29uZ1wiO1xyXG5pbXBvcnQge1Nwb3RpZnlBdXRoZW50aWNhdGlvbkNvbnRyb2xsZXJ9IGZyb20gXCIuL3Nwb3RpZnkvU3BvdGlmeUF1dGhlbnRpY2F0aW9uQ29udHJvbGxlclwiO1xyXG5pbXBvcnQge1BsYXliYWNrTWFzdGVyQ29udHJvbGxlcn0gZnJvbSBcIi4vcGxheWJhY2svUGxheWJhY2tNYXN0ZXJDb250cm9sbGVyXCI7XHJcblxyXG5leHBvcnQgY2xhc3MgVFNSSUNvbnRyb2xsZXIge1xyXG4gICAgcHJpdmF0ZSBzdGF0dXM6IEluaXRpYWxpemF0aW9uU3RhdHVzID0gZGVmYXVsdFN0YXR1cztcclxuICAgIHByaXZhdGUgQVBJOiBBUElDb25uZWN0aW9uQ29udHJvbGxlcjtcclxuICAgIHByaXZhdGUgc3BvdGlmeUF1dGg6IFNwb3RpZnlBdXRoZW50aWNhdGlvbkNvbnRyb2xsZXI7XHJcbiAgICBwcml2YXRlIHBsYXliYWNrOiBQbGF5YmFja01hc3RlckNvbnRyb2xsZXI7XHJcbiAgICBwcml2YXRlIGV2ZW50czogVFNSSUV2ZW50cztcclxuXHJcbiAgICBwdWJsaWMgaW5pdChqd3Q6IHN0cmluZywgYXBpOiBzdHJpbmcsIGV2ZW50czogVFNSSUV2ZW50cykge1xyXG4gICAgICAgIHRoaXMuZXZlbnRzID0gZXZlbnRzO1xyXG4gICAgICAgIHRoaXMuQVBJID0gbmV3IEFQSUNvbm5lY3Rpb25Db250cm9sbGVyKGFwaSwgand0LCB7XHJcbiAgICAgICAgICAgIHN0YXR1c0NoYW5nZWQ6IGFzeW5jIHN0YXR1cyA9PiB7XHJcbiAgICAgICAgICAgICAgICB0aGlzLnN0YXR1cy5hcGkgPSBzdGF0dXMgPT09IDA7XHJcbiAgICAgICAgICAgICAgICB0aGlzLmUoKS5pbml0aWFsaXplZCh0aGlzLnN0YXR1cyk7XHJcbiAgICAgICAgICAgICAgICBpZiAodGhpcy5zdGF0dXMuYXBpKSBhd2FpdCB0aGlzLnNwb3RpZnlBdXRoLmdldCgpO1xyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgfSk7XHJcbiAgICAgICAgdGhpcy5wbGF5YmFjayA9IG5ldyBQbGF5YmFja01hc3RlckNvbnRyb2xsZXIodGhpcy5BUEksIGV2ZW50cywgdGhpcy5zdGF0dXMpO1xyXG4gICAgICAgIHRoaXMuc3BvdGlmeUF1dGggPSBuZXcgU3BvdGlmeUF1dGhlbnRpY2F0aW9uQ29udHJvbGxlcih0aGlzLkFQSSwge1xyXG4gICAgICAgICAgICBzdGF0dXNDaGFuZ2VkOiB0aGlzLnNwb3RpZnlTdGF0dXMsXHJcbiAgICAgICAgICAgIHNwb3RpZnlBdXRoZW50aWNhdGVkOiAoYXV0aGVudGljYXRlZDogYm9vbGVhbiwgdG9rZW4/OiBzdHJpbmcpID0+IHtcclxuICAgICAgICAgICAgICAgIHRoaXMuZSgpLmVuYWJsZVNwb3RpZnlBdXRoKCFhdXRoZW50aWNhdGVkKTtcclxuICAgICAgICAgICAgICAgIGlmICh0b2tlbikgdGhpcy5wbGF5YmFjay5zcG90aWZ5LmluaXQodG9rZW4pO1xyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgfSk7XHJcbiAgICAgICAgdGhpcy5lKCkuaW5pdGlhbGl6ZWQodGhpcy5zdGF0dXMpO1xyXG4gICAgfVxyXG5cclxuICAgIHB1YmxpYyBzcG90aWZ5U3RhdHVzKHN0YXR1czogYm9vbGVhbikge1xyXG4gICAgICAgIHRoaXMuc3RhdHVzLnNwb3RpZnkgPSBzdGF0dXM7XHJcbiAgICAgICAgdGhpcy5lKCkuaW5pdGlhbGl6ZWQodGhpcy5zdGF0dXMpO1xyXG4gICAgfVxyXG5cclxuICAgIHB1YmxpYyB5b3V0dWJlQXBpUmVhZHkoKSB7XHJcbiAgICAgICAgdGhpcy5zdGF0dXMueW91dHViZUFwaSA9IHRydWU7XHJcbiAgICAgICAgdGhpcy5lKCkuaW5pdGlhbGl6ZWQodGhpcy5zdGF0dXMpO1xyXG4gICAgfVxyXG5cclxuICAgIHB1YmxpYyBzcG90aWZ5QXBpUmVhZHkoKSB7XHJcbiAgICAgICAgdGhpcy5zdGF0dXMuc3BvdGlmeUFwaSA9IHRydWU7XHJcbiAgICAgICAgdGhpcy5lKCkuaW5pdGlhbGl6ZWQodGhpcy5zdGF0dXMpO1xyXG4gICAgfVxyXG5cclxuICAgIHByaXZhdGUgZSgpIHtcclxuICAgICAgICBpZiAodGhpcy5ldmVudHMpIHJldHVybiB0aGlzLmV2ZW50cztcclxuICAgICAgICByZXR1cm4gZGVmYXVsdEV2ZW50cztcclxuICAgIH1cclxufVxyXG5cclxuY29uc3QgZGVmYXVsdEV2ZW50czogVFNSSUV2ZW50cyA9IHtcclxuICAgIHF1ZXVlVXBkYXRlOiBmdW5jdGlvbiAocDE6IEFycmF5PFNvbmc+KSB7XHJcbiAgICB9LFxyXG4gICAgZW5hYmxlU3BvdGlmeUF1dGg6IGZ1bmN0aW9uIChwMTogYm9vbGVhbikge1xyXG4gICAgICAgIGNvbnNvbGUubG9nKFwiU3BvdGlmeSBBdXRoZW50aWNhdGlvbiBpcyBub3cgJXMuXCIsIChwMSA/IFwiZW5hYmxlZFwiIDogXCJkaXNhYmxlZFwiKSk7XHJcbiAgICB9LFxyXG4gICAgaW5pdGlhbGl6ZWQ6IGZ1bmN0aW9uIChwMTogSW5pdGlhbGl6YXRpb25TdGF0dXMpIHtcclxuICAgIH0sIHBhdXNlOiBmdW5jdGlvbiAoKSB7XHJcbiAgICAgICAgY29uc29sZS5sb2coXCJQQVVTRVwiKTtcclxuICAgIH0sIHBsYXk6IGZ1bmN0aW9uICgpIHtcclxuICAgICAgICBjb25zb2xlLmxvZyhcIlBMQVlcIilcclxuICAgIH0sIHBvc2l0aW9uOiBmdW5jdGlvbiAocDE6IG51bWJlcikge1xyXG4gICAgICAgIGNvbnNvbGUubG9nKFwiUE9TOiBcIiArIHAxKVxyXG4gICAgfSwgc29uZzogZnVuY3Rpb24gKHAxOiBTb25nKSB7XHJcbiAgICAgICAgY29uc29sZS5sb2coXCJTT05HOiBcIiArIHAxLm5hbWUpXHJcbiAgICB9LCBzdG9wOiBmdW5jdGlvbiAoKSB7XHJcbiAgICAgICAgY29uc29sZS5sb2coXCJTVE9QXCIpXHJcbiAgICB9LCB2b2x1bWU6IGZ1bmN0aW9uIChwMTogbnVtYmVyKSB7XHJcbiAgICAgICAgY29uc29sZS5sb2coXCJWT0xVTUU6IFwiICsgcDEpXHJcbiAgICB9XHJcbn07XHJcblxyXG5jb25zdCBkZWZhdWx0U3RhdHVzID0ge1xyXG4gICAgYXBpOiBmYWxzZSxcclxuICAgIHNwb3RpZnlBcGk6IGZhbHNlLFxyXG4gICAgc3BvdGlmeTogZmFsc2UsXHJcbiAgICB5b3V0dWJlQXBpOiBmYWxzZSxcclxuICAgIHlvdXR1YmU6IGZhbHNlLFxyXG59O1xyXG4iLCJpbXBvcnQge1RTUklDb250cm9sbGVyfSBmcm9tIFwiLi9jb250cm9sbGVycy9UU1JJQ29udHJvbGxlclwiO1xyXG5pbXBvcnQge1RTUklXaW5kb3d9IGZyb20gXCIuL21vZGVscy9UU1JJV2luZG93XCI7XHJcblxyXG5jb25zdCBjb250cm9sbGVyOiBUU1JJQ29udHJvbGxlciA9IG5ldyBUU1JJQ29udHJvbGxlcigpO1xyXG5cclxuY29uc3Qgd2luID0gd2luZG93IGFzIFRTUklXaW5kb3c7XHJcbndpbi5UU1JJID0gY29udHJvbGxlcjtcclxud2luLm9uU3BvdGlmeVdlYlBsYXliYWNrU0RLUmVhZHkgPSAoKSA9PiBjb250cm9sbGVyLnNwb3RpZnlBcGlSZWFkeSgpO1xyXG5cclxuY29uc3QgX2dsb2JhbCA9ICh3aW5kb3cgfHwgZ2xvYmFsKSBhcyBhbnk7XHJcbl9nbG9iYWwub25Zb3VUdWJlSWZyYW1lQVBJUmVhZHkgPSAoKSA9PiBjb250cm9sbGVyLnlvdXR1YmVBcGlSZWFkeSgpO1xyXG5cclxucmVxdWlyZShcIi4uL3Byb3ZpZGVycy9zcG90aWZ5L3Nwb3RpZnktcGxheWJhY2stc2RrXCIpO1xyXG5yZXF1aXJlKFwiLi4vcHJvdmlkZXJzL3lvdXR1YmUveW91dHViZS1pZnJhbWVfYXBpXCIpO1xyXG4iLCJ2YXIgZztcblxuLy8gVGhpcyB3b3JrcyBpbiBub24tc3RyaWN0IG1vZGVcbmcgPSAoZnVuY3Rpb24oKSB7XG5cdHJldHVybiB0aGlzO1xufSkoKTtcblxudHJ5IHtcblx0Ly8gVGhpcyB3b3JrcyBpZiBldmFsIGlzIGFsbG93ZWQgKHNlZSBDU1ApXG5cdGcgPSBnIHx8IG5ldyBGdW5jdGlvbihcInJldHVybiB0aGlzXCIpKCk7XG59IGNhdGNoIChlKSB7XG5cdC8vIFRoaXMgd29ya3MgaWYgdGhlIHdpbmRvdyByZWZlcmVuY2UgaXMgYXZhaWxhYmxlXG5cdGlmICh0eXBlb2Ygd2luZG93ID09PSBcIm9iamVjdFwiKSBnID0gd2luZG93O1xufVxuXG4vLyBnIGNhbiBzdGlsbCBiZSB1bmRlZmluZWQsIGJ1dCBub3RoaW5nIHRvIGRvIGFib3V0IGl0Li4uXG4vLyBXZSByZXR1cm4gdW5kZWZpbmVkLCBpbnN0ZWFkIG9mIG5vdGhpbmcgaGVyZSwgc28gaXQnc1xuLy8gZWFzaWVyIHRvIGhhbmRsZSB0aGlzIGNhc2UuIGlmKCFnbG9iYWwpIHsgLi4ufVxuXG5tb2R1bGUuZXhwb3J0cyA9IGc7XG4iLCIvKiBTcG90aWZ5IEpTLVNESyAtIHYxLjcuMS1mZDM1ZTdkICovXHJcbiFmdW5jdGlvbihlKXtmdW5jdGlvbiB0KHIpe2lmKG5bcl0pcmV0dXJuIG5bcl0uZXhwb3J0czt2YXIgcz1uW3JdPXtpOnIsbDohMSxleHBvcnRzOnt9fTtyZXR1cm4gZVtyXS5jYWxsKHMuZXhwb3J0cyxzLHMuZXhwb3J0cyx0KSxzLmw9ITAscy5leHBvcnRzfXZhciBuPXt9O3QubT1lLHQuYz1uLHQuZD1mdW5jdGlvbihlLG4scil7dC5vKGUsbil8fE9iamVjdC5kZWZpbmVQcm9wZXJ0eShlLG4se2NvbmZpZ3VyYWJsZTohMSxlbnVtZXJhYmxlOiEwLGdldDpyfSl9LHQubj1mdW5jdGlvbihlKXt2YXIgbj1lJiZlLl9fZXNNb2R1bGU/ZnVuY3Rpb24oKXtyZXR1cm4gZS5kZWZhdWx0fTpmdW5jdGlvbigpe3JldHVybiBlfTtyZXR1cm4gdC5kKG4sXCJhXCIsbiksbn0sdC5vPWZ1bmN0aW9uKGUsdCl7cmV0dXJuIE9iamVjdC5wcm90b3R5cGUuaGFzT3duUHJvcGVydHkuY2FsbChlLHQpfSx0LnA9XCJcIix0KHQucz0yKX0oW2Z1bmN0aW9uKGUsdCxuKXtcInVzZSBzdHJpY3RcIjt2YXIgcj17U1BPVElGWV9NRVNTQUdFOlwiU1BfTUVTU0FHRVwiLEFDQ09VTlRfRVJST1I6XCJBQ0NPVU5UX0VSUk9SXCIsQVVUSF9FUlJPUjpcIkFVVEhfRVJST1JcIixDT05ORUNUOlwiQ09OTkVDVFwiLENPTk5FQ1RFRDpcIkNPTk5FQ1RFRFwiLENVUlJFTlRfU1RBVEU6XCJDVVJSRU5UX1NUQVRFXCIsRElTQ09OTkVDVDpcIkRJU0NPTk5FQ1RcIixFVkVOVDpcIkVWRU5UXCIsR0VUX0NVUlJFTlRfU1RBVEU6XCJHRVRfQ1VSUkVOVF9TVEFURVwiLEdFVF9UT0tFTjpcIkdFVF9UT0tFTlwiLEdFVF9WT0xVTUU6XCJHRVRfVk9MVU1FXCIsSU5JVDpcIklOSVRcIixMT0FERUQ6XCJMT0FERURcIixORVhUX1RSQUNLOlwiTkVYVF9UUkFDS1wiLFBBVVNFOlwiUEFVU0VcIixQTEFZQkFDS19FUlJPUjpcIlBMQVlCQUNLX0VSUk9SXCIsUExBWUVSX0lOSVRfRVJST1I6XCJQTEFZRVJfSU5JVF9FUlJPUlwiLFBMQVlFUl9SRUFEWTpcIlBMQVlFUl9SRUFEWVwiLFBMQVlFUl9OT1RfUkVBRFk6XCJQTEFZRVJfTk9UX1JFQURZXCIsUExBWUVSX1NUQVRFX0NIQU5HRUQ6XCJQTEFZRVJfU1RBVEVfQ0hBTkdFRFwiLFBSRVZfVFJBQ0s6XCJQUkVWX1RSQUNLXCIsUkVTVU1FOlwiUkVTVU1FXCIsU0VFSzpcIlNFRUtcIixTRVRfTkFNRTpcIlNFVF9OQU1FXCIsU0VUX1ZPTFVNRTpcIlNFVF9WT0xVTUVcIixUT0dHTEVfUExBWTpcIlRPR0dMRV9QTEFZXCIsVE9LRU46XCJUT0tFTlwiLFZPTFVNRTpcIlZPTFVNRVwiLGFjY291bnRFcnJvcjpmdW5jdGlvbihlKXtyZXR1cm4gdGhpcy5fY3JlYXRlRXZlbnRNZXNzYWdlKHIuQUNDT1VOVF9FUlJPUix7bWVzc2FnZTplfSl9LGF1dGhFcnJvcjpmdW5jdGlvbihlKXtyZXR1cm4gdGhpcy5fY3JlYXRlRXZlbnRNZXNzYWdlKHIuQVVUSF9FUlJPUixlKX0scGxheWJhY2tFcnJvcjpmdW5jdGlvbihlKXtyZXR1cm4gdGhpcy5fY3JlYXRlRXZlbnRNZXNzYWdlKHIuUExBWUJBQ0tfRVJST1IsZSl9LHBsYXllclJlYWR5OmZ1bmN0aW9uKGUpe3JldHVybiB0aGlzLl9jcmVhdGVFdmVudE1lc3NhZ2Uoci5QTEFZRVJfUkVBRFksZSl9LHBsYXllck5vdFJlYWR5OmZ1bmN0aW9uKGUpe3JldHVybiB0aGlzLl9jcmVhdGVFdmVudE1lc3NhZ2Uoci5QTEFZRVJfTk9UX1JFQURZLGUpfSxjb25uZWN0OmZ1bmN0aW9uKCl7cmV0dXJuIHRoaXMuX2NyZWF0ZU1lc3NhZ2Uoci5DT05ORUNUKX0sY29ubmVjdGVkOmZ1bmN0aW9uKGUsdCl7cmV0dXJuIHRoaXMuX2NyZWF0ZU1lc3NhZ2Uoci5DT05ORUNURUQse2Nvbm5lY3RlZDplLHJlZjp0fSl9LGRpc2Nvbm5lY3Q6ZnVuY3Rpb24oKXtyZXR1cm4gdGhpcy5fY3JlYXRlTWVzc2FnZShyLkRJU0NPTk5FQ1QpfSxpbml0OmZ1bmN0aW9uKGUpe3JldHVybiB0aGlzLl9jcmVhdGVNZXNzYWdlKHIuSU5JVCxlKX0scGxheWVySW5pdEVycm9yOmZ1bmN0aW9uKGUpe3JldHVybiB0aGlzLl9jcmVhdGVFdmVudE1lc3NhZ2Uoci5QTEFZRVJfSU5JVF9FUlJPUixlKX0sZ2V0VG9rZW46ZnVuY3Rpb24oKXtyZXR1cm4gdGhpcy5fY3JlYXRlTWVzc2FnZShyLkdFVF9UT0tFTil9LHRva2VuOmZ1bmN0aW9uKGUsdCl7cmV0dXJuIHRoaXMuX2NyZWF0ZU1lc3NhZ2Uoci5UT0tFTix7dG9rZW46ZSxyZWY6dH0pfSxwYXVzZTpmdW5jdGlvbigpe3JldHVybiB0aGlzLl9jcmVhdGVNZXNzYWdlKHIuUEFVU0UpfSxyZXN1bWU6ZnVuY3Rpb24oKXtyZXR1cm4gdGhpcy5fY3JlYXRlTWVzc2FnZShyLlJFU1VNRSl9LHRvZ2dsZVBsYXk6ZnVuY3Rpb24oKXtyZXR1cm4gdGhpcy5fY3JlYXRlTWVzc2FnZShyLlRPR0dMRV9QTEFZKX0sc2VlazpmdW5jdGlvbihlKXtyZXR1cm4gdGhpcy5fY3JlYXRlTWVzc2FnZShyLlNFRUssZSl9LG5leHRUcmFjazpmdW5jdGlvbihlKXtyZXR1cm4gdGhpcy5fY3JlYXRlTWVzc2FnZShyLk5FWFRfVFJBQ0ssZSl9LHByZXZpb3VzVHJhY2s6ZnVuY3Rpb24oZSl7cmV0dXJuIHRoaXMuX2NyZWF0ZU1lc3NhZ2Uoci5QUkVWX1RSQUNLLGUpfSxnZXRDdXJyZW50U3RhdGU6ZnVuY3Rpb24oKXtyZXR1cm4gdGhpcy5fY3JlYXRlTWVzc2FnZShyLkdFVF9DVVJSRU5UX1NUQVRFKX0sY3VycmVudFN0YXRlOmZ1bmN0aW9uKGUsdCl7cmV0dXJuIHRoaXMuX2NyZWF0ZU1lc3NhZ2Uoci5DVVJSRU5UX1NUQVRFLHtzdGF0ZTplLHJlZjp0fSl9LHBsYXllclN0YXRlQ2hhbmdlZDpmdW5jdGlvbihlKXtyZXR1cm4gdGhpcy5fY3JlYXRlRXZlbnRNZXNzYWdlKHIuUExBWUVSX1NUQVRFX0NIQU5HRUQsZSl9LGdldFZvbHVtZTpmdW5jdGlvbigpe3JldHVybiB0aGlzLl9jcmVhdGVNZXNzYWdlKHIuR0VUX1ZPTFVNRSl9LHZvbHVtZTpmdW5jdGlvbihlLHQpe3JldHVybiB0aGlzLl9jcmVhdGVNZXNzYWdlKHIuVk9MVU1FLHt2b2x1bWU6ZSxyZWY6dH0pfSxzZXRWb2x1bWU6ZnVuY3Rpb24oZSl7cmV0dXJuIHRoaXMuX2NyZWF0ZU1lc3NhZ2Uoci5TRVRfVk9MVU1FLGUpfSxzZXROYW1lOmZ1bmN0aW9uKGUpe3JldHVybiB0aGlzLl9jcmVhdGVNZXNzYWdlKHIuU0VUX05BTUUsZSl9LGVtYmVkZGVkTG9hZGVkOmZ1bmN0aW9uKCl7cmV0dXJuIHRoaXMuX2NyZWF0ZU1lc3NhZ2Uoci5MT0FERUQpfSxfY3JlYXRlRXZlbnRNZXNzYWdlOmZ1bmN0aW9uKGUsdCl7cmV0dXJuIHRoaXMuX2NyZWF0ZU1lc3NhZ2Uoci5FVkVOVCx7bmFtZTplLGV2ZW50RGF0YTp0fSl9LF9jcmVhdGVNZXNzYWdlOmZ1bmN0aW9uKGUsdCl7cmV0dXJue3R5cGU6ci5TUE9USUZZX01FU1NBR0UsYm9keTp7dG9waWM6ZSxkYXRhOnQ/SlNPTi5wYXJzZShKU09OLnN0cmluZ2lmeSh0KSk6bnVsbH19fX07ZS5leHBvcnRzPXJ9LGZ1bmN0aW9uKGUsdCl7dmFyIG47bj1mdW5jdGlvbigpe3JldHVybiB0aGlzfSgpO3RyeXtuPW58fEZ1bmN0aW9uKFwicmV0dXJuIHRoaXNcIikoKXx8KDAsZXZhbCkoXCJ0aGlzXCIpfWNhdGNoKGUpe1wib2JqZWN0XCI9PXR5cGVvZiB3aW5kb3cmJihuPXdpbmRvdyl9ZS5leHBvcnRzPW59LGZ1bmN0aW9uKGUsdCxuKXtcInVzZSBzdHJpY3RcIjtmdW5jdGlvbiByKCl7dmFyIGU9bigzKTtpZighZG9jdW1lbnQuYm9keSl0aHJvdyBuZXcgRXJyb3IoXCJEb2N1bWVudCBkb2Vzbid0IGhhdmUgYSBib2R5XCIpO2lmKHdpbmRvdy5TcG90aWZ5PXtQbGF5ZXI6ZS5zZXR1cFBsYXllckVudih3aW5kb3cpfSx3aW5kb3cub25TcG90aWZ5V2ViUGxheWJhY2tTREtSZWFkeSl3aW5kb3cub25TcG90aWZ5V2ViUGxheWJhY2tTREtSZWFkeSgpO2Vsc2V7aWYoIXdpbmRvdy5vblNwb3RpZnlQbGF5ZXJBUElSZWFkeSl0aHJvdyBuZXcgRXJyb3IoXCJvblNwb3RpZnlXZWJQbGF5YmFja1NES1JlYWR5IGlzIG5vdCBkZWZpbmVkXCIpO3dpbmRvdy5vblNwb3RpZnlQbGF5ZXJBUElSZWFkeSgpfX1cImNvbXBsZXRlXCI9PT1kb2N1bWVudC5yZWFkeVN0YXRlP3IoKTp3aW5kb3cuYWRkRXZlbnRMaXN0ZW5lcihcImxvYWRcIixyKX0sZnVuY3Rpb24oZSx0LG4pe1widXNlIHN0cmljdFwiO3ZhciByPW4oNCkscz1uKDUpLG89bigwKSxpPW4oNiksYT1mdW5jdGlvbihlLHQpe3ZhciBuLGE9XCJodHRwczovL3Nkay5zY2RuLmNvL2VtYmVkZGVkL2luZGV4Lmh0bWxcIix1PXMuZGVmZXIoKSxjPW5ldyByLF89dHx8ZnVuY3Rpb24odCl7dmFyIG49ZS5kb2N1bWVudC5jcmVhdGVFbGVtZW50KFwiaWZyYW1lXCIpO3JldHVybiBuLnNyYz10LG4uc2V0QXR0cmlidXRlKFwiYWx0XCIsXCJBdWRpbyBQbGF5YmFjayBDb250YWluZXJcIiksbi5zZXRBdHRyaWJ1dGUoXCJ0YWJJbmRleFwiLFwiLTFcIiksbi5zdHlsZS5zZXRQcm9wZXJ0eShcInBvc2l0aW9uXCIsXCJhYnNvbHV0ZVwiLFwiaW1wb3J0YW50XCIpLG4uc3R5bGUuc2V0UHJvcGVydHkoXCJsZWZ0XCIsXCItMXB4XCIsXCJpbXBvcnRhbnRcIiksbi5zdHlsZS5zZXRQcm9wZXJ0eShcIndpZHRoXCIsXCIwXCIsXCJpbXBvcnRhbnRcIiksbi5zdHlsZS5zZXRQcm9wZXJ0eShcImhlaWdodFwiLFwiMFwiLFwiaW1wb3J0YW50XCIpLG4uc3R5bGUuc2V0UHJvcGVydHkoXCJib3JkZXJcIixcIm5vbmVcIixcImltcG9ydGFudFwiKSxuLnN0eWxlLnNldFByb3BlcnR5KFwib3V0bGluZVwiLFwibm9uZVwiLFwiaW1wb3J0YW50XCIpLG4uYWxsb3c9XCJlbmNyeXB0ZWQtbWVkaWE7IGF1dG9wbGF5XCIsZS5kb2N1bWVudC5ib2R5LmFwcGVuZENoaWxkKG4pLG4uY29udGVudFdpbmRvd30saD1mdW5jdGlvbih0KXt0PT09by5MT0FERUQmJihjLnN0b3BMaXN0ZW5pbmcoZSxoKSx1LnJlc29sdmUoKSl9O2MubGlzdGVuKGUsaCksbj1fKGEpO3ZhciBmPWZ1bmN0aW9uKHQpe3RoaXMuX29wdGlvbnM9dGhpcy5fc2FuaXRpemVPcHRpb25zKHQpLHRoaXMuX2hhbmRsZU1lc3NhZ2VzPXRoaXMuX2hhbmRsZU1lc3NhZ2VzLmJpbmQodGhpcyksdGhpcy5fbWVzc2FnZUhhbmRsZXJzPXt9LHRoaXMuX2V2ZW50TGlzdGVuZXJzPXt9LHRoaXMuX3NldHVwTWVzc2FnZUhhbmRsZXJzKCksdGhpcy5fY29ubmVjdGlvblJlcXVlc3RzPXt9LHRoaXMuX2dldEN1cnJlbnRTdGF0ZVJlcXVlc3RzPXt9LHRoaXMuX2dldFZvbHVtZVJlcXVlc3RzPXt9LHRoaXMuaXNMb2FkZWQ9dS5wcm9taXNlLnRoZW4oZnVuY3Rpb24oKXtjLmxpc3RlbihlLHRoaXMuX2hhbmRsZU1lc3NhZ2VzKSx0aGlzLl9zZW5kTWVzc2FnZShvLmluaXQodGhpcy5fb3B0aW9ucykpfS5iaW5kKHRoaXMpKX07cmV0dXJuIGYucHJvdG90eXBlLl9zYW5pdGl6ZU9wdGlvbnM9ZnVuY3Rpb24odCl7dmFyIG49ZSYmZS5sb2NhdGlvbiYmZS5sb2NhdGlvbi5ob3N0bmFtZXx8XCJcIjtyZXR1cm57bmFtZTp0Lm5hbWV8fG4saWQ6aS5nZXQoKSxnZXRPQXV0aFRva2VuOnQuZ2V0T0F1dGhUb2tlbnx8dC5nZXRPYXV0aFRva2VuLHZvbHVtZTp0LnZvbHVtZXx8MX19LGYucHJvdG90eXBlLl9zZXR1cE1lc3NhZ2VIYW5kbGVycz1mdW5jdGlvbigpe3RoaXMuX21lc3NhZ2VIYW5kbGVyc1tvLkdFVF9UT0tFTl09dGhpcy5fb25HZXRUb2tlbi5iaW5kKHRoaXMpLHRoaXMuX21lc3NhZ2VIYW5kbGVyc1tvLkVWRU5UXT10aGlzLl9vbkV2ZW50LmJpbmQodGhpcyksdGhpcy5fbWVzc2FnZUhhbmRsZXJzW28uQ09OTkVDVEVEXT10aGlzLl9vbkNvbm5lY3RlZC5iaW5kKHRoaXMpLHRoaXMuX21lc3NhZ2VIYW5kbGVyc1tvLkNVUlJFTlRfU1RBVEVdPXRoaXMuX29uQ3VycmVudFN0YXRlLmJpbmQodGhpcyksdGhpcy5fbWVzc2FnZUhhbmRsZXJzW28uVk9MVU1FXT10aGlzLl9vblZvbHVtZS5iaW5kKHRoaXMpfSxmLnByb3RvdHlwZS5jb25uZWN0PWZ1bmN0aW9uKCl7cmV0dXJuIHRoaXMuaXNMb2FkZWQudGhlbihmdW5jdGlvbigpe3ZhciBlPXRoaXMuX3NlbmRNZXNzYWdlKG8uY29ubmVjdCgpKTtyZXR1cm4gdGhpcy5fY29ubmVjdGlvblJlcXVlc3RzW2VdPXMuZGVmZXIoKSx0aGlzLl9jb25uZWN0aW9uUmVxdWVzdHNbZV0ucHJvbWlzZX0uYmluZCh0aGlzKSl9LGYucHJvdG90eXBlLm9uPWZ1bmN0aW9uKGUsdCl7aWYoIWUpdGhyb3cgbmV3IFR5cGVFcnJvcihcIkFyZ3VtZW50IGBldmVudE5hbWVgIGlzIHJlcXVpcmVkLlwiKTtpZihcImZ1bmN0aW9uXCIhPXR5cGVvZiB0KXRocm93IG5ldyBUeXBlRXJyb3IoXCJBcmd1bWVudCBgbGlzdGVuZXJgIG11c3QgYmUgYSBmdW5jdGlvbi5cIik7cmV0dXJuIHRoaXMuX2V2ZW50TGlzdGVuZXJzW2VdPXRoaXMuX2V2ZW50TGlzdGVuZXJzW2VdfHxbXSwtMT09PXRoaXMuX2V2ZW50TGlzdGVuZXJzW2VdLmluZGV4T2YodCkmJih0aGlzLl9ldmVudExpc3RlbmVyc1tlXS5wdXNoKHQpLCEwKX0sZi5wcm90b3R5cGUuYWRkTGlzdGVuZXI9ZnVuY3Rpb24oZSx0KXtyZXR1cm4gdGhpcy5vbihlLHQpfSxmLnByb3RvdHlwZS5yZW1vdmVMaXN0ZW5lcj1mdW5jdGlvbihlLHQpe2lmKCFlKXRocm93IG5ldyBUeXBlRXJyb3IoXCJBcmd1bWVudCBgZXZlbnROYW1lYCBpcyByZXF1aXJlZC5cIik7aWYoMT09PWFyZ3VtZW50cy5sZW5ndGgpcmV0dXJuIHRoaXMuX2V2ZW50TGlzdGVuZXJzW2VdPVtdLCEwO2lmKFwiZnVuY3Rpb25cIiE9dHlwZW9mIHQpdGhyb3cgbmV3IFR5cGVFcnJvcihcIkFyZ3VtZW50IGBsaXN0ZW5lcmAgbXVzdCBiZSBhIGZ1bmN0aW9uLlwiKTt2YXIgbj10aGlzLl9ldmVudExpc3RlbmVyc1tlXTtyZXR1cm4hKCFufHwhbi5sZW5ndGgpJiYodGhpcy5fZXZlbnRMaXN0ZW5lcnNbZV09bi5maWx0ZXIoZnVuY3Rpb24oZSl7cmV0dXJuIGUhPT10fSksITApfSxmLnByb3RvdHlwZS5nZXRDdXJyZW50U3RhdGU9ZnVuY3Rpb24oKXtyZXR1cm4gdGhpcy5pc0xvYWRlZC50aGVuKGZ1bmN0aW9uKCl7dmFyIGU9dGhpcy5fc2VuZE1lc3NhZ2Uoby5nZXRDdXJyZW50U3RhdGUoKSk7cmV0dXJuIHRoaXMuX2dldEN1cnJlbnRTdGF0ZVJlcXVlc3RzW2VdPXMuZGVmZXIoKSx0aGlzLl9nZXRDdXJyZW50U3RhdGVSZXF1ZXN0c1tlXS5wcm9taXNlfS5iaW5kKHRoaXMpKX0sZi5wcm90b3R5cGUuZ2V0Vm9sdW1lPWZ1bmN0aW9uKCl7cmV0dXJuIHRoaXMuaXNMb2FkZWQudGhlbihmdW5jdGlvbigpe3ZhciBlPXRoaXMuX3NlbmRNZXNzYWdlKG8uZ2V0Vm9sdW1lKCkpO3JldHVybiB0aGlzLl9nZXRWb2x1bWVSZXF1ZXN0c1tlXT1zLmRlZmVyKCksdGhpcy5fZ2V0Vm9sdW1lUmVxdWVzdHNbZV0ucHJvbWlzZX0uYmluZCh0aGlzKSl9LGYucHJvdG90eXBlLnNldE5hbWU9ZnVuY3Rpb24oZSl7cmV0dXJuIHRoaXMuX3NlbmRNZXNzYWdlV2hlbkxvYWRlZChvLnNldE5hbWUoZSkpfSxmLnByb3RvdHlwZS5zZXRWb2x1bWU9ZnVuY3Rpb24oZSl7cmV0dXJuIHRoaXMuX3NlbmRNZXNzYWdlV2hlbkxvYWRlZChvLnNldFZvbHVtZShlKSl9LGYucHJvdG90eXBlLnBhdXNlPWZ1bmN0aW9uKCl7cmV0dXJuIHRoaXMuX3NlbmRNZXNzYWdlV2hlbkxvYWRlZChvLnBhdXNlKCkpfSxmLnByb3RvdHlwZS5yZXN1bWU9ZnVuY3Rpb24oKXtyZXR1cm4gdGhpcy5fc2VuZE1lc3NhZ2VXaGVuTG9hZGVkKG8ucmVzdW1lKCkpfSxmLnByb3RvdHlwZS50b2dnbGVQbGF5PWZ1bmN0aW9uKCl7cmV0dXJuIHRoaXMuX3NlbmRNZXNzYWdlV2hlbkxvYWRlZChvLnRvZ2dsZVBsYXkoKSl9LGYucHJvdG90eXBlLnNlZWs9ZnVuY3Rpb24oZSl7cmV0dXJuIHRoaXMuX3NlbmRNZXNzYWdlV2hlbkxvYWRlZChvLnNlZWsoZSkpfSxmLnByb3RvdHlwZS5wcmV2aW91c1RyYWNrPWZ1bmN0aW9uKGUpe3JldHVybiB0aGlzLl9zZW5kTWVzc2FnZVdoZW5Mb2FkZWQoby5wcmV2aW91c1RyYWNrKGUpKX0sZi5wcm90b3R5cGUubmV4dFRyYWNrPWZ1bmN0aW9uKGUpe3JldHVybiB0aGlzLl9zZW5kTWVzc2FnZVdoZW5Mb2FkZWQoby5uZXh0VHJhY2soZSkpfSxmLnByb3RvdHlwZS5kaXNjb25uZWN0PWZ1bmN0aW9uKCl7cmV0dXJuIHRoaXMuX3NlbmRNZXNzYWdlV2hlbkxvYWRlZChvLmRpc2Nvbm5lY3QoKSl9LGYucHJvdG90eXBlLl9nZXRMaXN0ZW5lcnM9ZnVuY3Rpb24oKXt2YXIgZT17fTtyZXR1cm4gZVtvLkFDQ09VTlRfRVJST1JdPVwiYWNjb3VudF9lcnJvclwiLGVbby5BVVRIX0VSUk9SXT1cImF1dGhlbnRpY2F0aW9uX2Vycm9yXCIsZVtvLlBMQVlCQUNLX0VSUk9SXT1cInBsYXliYWNrX2Vycm9yXCIsZVtvLlBMQVlFUl9JTklUX0VSUk9SXT1cImluaXRpYWxpemF0aW9uX2Vycm9yXCIsZVtvLlBMQVlFUl9SRUFEWV09XCJyZWFkeVwiLGVbby5QTEFZRVJfTk9UX1JFQURZXT1cIm5vdF9yZWFkeVwiLGVbby5QTEFZRVJfU1RBVEVfQ0hBTkdFRF09XCJwbGF5ZXJfc3RhdGVfY2hhbmdlZFwiLGZ1bmN0aW9uKHQpe3JldHVybiB0aGlzLl9ldmVudExpc3RlbmVyc1tlW3RdXXx8W119fSgpLGYucHJvdG90eXBlLl9vbkV2ZW50PWZ1bmN0aW9uKGUpe3RoaXMuX2dldExpc3RlbmVycyhlLm5hbWUpLmZvckVhY2goZnVuY3Rpb24odCl7dChlLmV2ZW50RGF0YSl9KX0sZi5wcm90b3R5cGUuX29uR2V0VG9rZW49ZnVuY3Rpb24oZSx0KXt2YXIgbj10aGlzLl9vcHRpb25zLmdldE9BdXRoVG9rZW47aWYoXCJmdW5jdGlvblwiIT10eXBlb2Ygbil7dmFyIHI9XCJnZXRPQXV0aFRva2VuIGlzIG5vdCBhIGZ1bmN0aW9uXCI7aWYodGhpcy5fZ2V0TGlzdGVuZXJzKG8uUExBWUVSX0lOSVRfRVJST1IpLmxlbmd0aClyZXR1cm4gdm9pZCB0aGlzLl9vbkV2ZW50KHtuYW1lOm8uUExBWUVSX0lOSVRfRVJST1IsZXZlbnREYXRhOnttZXNzYWdlOnJ9fSk7dGhyb3cgbmV3IEVycm9yKHIpfW5ldyBzKG4pLnRoZW4oZnVuY3Rpb24oZSl7dGhpcy5fc2VuZE1lc3NhZ2Uoby50b2tlbihlLHQpKX0uYmluZCh0aGlzKSl9LGYucHJvdG90eXBlLl9vbkNvbm5lY3RlZD1mdW5jdGlvbihlKXtlLnJlZiBpbiB0aGlzLl9jb25uZWN0aW9uUmVxdWVzdHMmJih0aGlzLl9jb25uZWN0aW9uUmVxdWVzdHNbZS5yZWZdLnJlc29sdmUoZS5jb25uZWN0ZWQpLGRlbGV0ZSB0aGlzLl9jb25uZWN0aW9uUmVxdWVzdHNbZS5yZWZdKX0sZi5wcm90b3R5cGUuX29uQ3VycmVudFN0YXRlPWZ1bmN0aW9uKGUpe2UucmVmIGluIHRoaXMuX2dldEN1cnJlbnRTdGF0ZVJlcXVlc3RzJiYodGhpcy5fZ2V0Q3VycmVudFN0YXRlUmVxdWVzdHNbZS5yZWZdLnJlc29sdmUoZS5zdGF0ZSksZGVsZXRlIHRoaXMuX2dldEN1cnJlbnRTdGF0ZVJlcXVlc3RzW2UucmVmXSl9LGYucHJvdG90eXBlLl9vblZvbHVtZT1mdW5jdGlvbihlKXtlLnJlZiBpbiB0aGlzLl9nZXRWb2x1bWVSZXF1ZXN0cyYmKHRoaXMuX2dldFZvbHVtZVJlcXVlc3RzW2UucmVmXS5yZXNvbHZlKGUudm9sdW1lKSxkZWxldGUgdGhpcy5fZ2V0Vm9sdW1lUmVxdWVzdHNbZS5yZWZdKX0sZi5wcm90b3R5cGUuX2hhbmRsZU1lc3NhZ2VzPWZ1bmN0aW9uKGUsdCxuKXtlIGluIHRoaXMuX21lc3NhZ2VIYW5kbGVycyYmdGhpcy5fbWVzc2FnZUhhbmRsZXJzW2VdKHQsbil9LGYucHJvdG90eXBlLl9zZW5kTWVzc2FnZT1mdW5jdGlvbihlKXtyZXR1cm4gYy5zZW5kKG4sZSxhKX0sZi5wcm90b3R5cGUuX3NlbmRNZXNzYWdlV2hlbkxvYWRlZD1mdW5jdGlvbihlKXtyZXR1cm4gdGhpcy5pc0xvYWRlZC50aGVuKHRoaXMuX3NlbmRNZXNzYWdlLmJpbmQodGhpcyxlKSl9LGZ9O2UuZXhwb3J0cy5zZXR1cFBsYXllckVudj1hfSxmdW5jdGlvbihlLHQsbil7XCJ1c2Ugc3RyaWN0XCI7dmFyIHI9bigwKSxzPWZ1bmN0aW9uKCl7dGhpcy5fb25NZXNzYWdlQ2FsbGJhY2s9ZnVuY3Rpb24oKXt9LHRoaXMuX3JlY2VpdmVNZXNzYWdlPXRoaXMuX3JlY2VpdmVNZXNzYWdlLmJpbmQodGhpcyksdGhpcy5fbWVzc2FnZUlkPTB9O3MucHJvdG90eXBlLmxpc3Rlbj1mdW5jdGlvbihlLHQpe3RoaXMuX29uTWVzc2FnZUNhbGxiYWNrPXQsZS5hZGRFdmVudExpc3RlbmVyKFwibWVzc2FnZVwiLHRoaXMuX3JlY2VpdmVNZXNzYWdlKX0scy5wcm90b3R5cGUuc3RvcExpc3RlbmluZz1mdW5jdGlvbihlKXtlLnJlbW92ZUV2ZW50TGlzdGVuZXIoXCJtZXNzYWdlXCIsdGhpcy5fcmVjZWl2ZU1lc3NhZ2UpfSxzLnByb3RvdHlwZS5zZW5kPWZ1bmN0aW9uKGUsdCxuKXtyZXR1cm4gZS5wb3N0TWVzc2FnZSh0aGlzLl9hZGRNZXNzYWdlSWQodCksbnx8XCIqXCIpLHQuc2VxfSxzLnByb3RvdHlwZS5fYWRkTWVzc2FnZUlkPWZ1bmN0aW9uKGUpe3JldHVybiBlLnNlcT10aGlzLl9tZXNzYWdlSWQrKyxlfSxzLnByb3RvdHlwZS5fcmVjZWl2ZU1lc3NhZ2U9ZnVuY3Rpb24oZSl7dmFyIHQ9ZS5kYXRhO3QudHlwZT09PXIuU1BPVElGWV9NRVNTQUdFJiZ0LmJvZHkmJnQuYm9keS50b3BpYyYmdGhpcy5fb25NZXNzYWdlQ2FsbGJhY2sodC5ib2R5LnRvcGljLHQuYm9keS5kYXRhLHQuc2VxKX0sZS5leHBvcnRzPXN9LGZ1bmN0aW9uKGUsdCxuKXtcInVzZSBzdHJpY3RcIjsoZnVuY3Rpb24odCl7dmFyIG49dC5Qcm9taXNlO2lmKCFuKXRocm93IG5ldyBFcnJvcihcIkZhdGFsOiBubyBQcm9taXNlIGltcGxlbWVudGF0aW9uIGF2YWlsYWJsZS5cIik7dmFyIHI7cj1PYmplY3QuZGVmaW5lUHJvcGVydHk/ZnVuY3Rpb24oZSx0LG4pe3JldHVybiBlW3RdP2U6KE9iamVjdC5kZWZpbmVQcm9wZXJ0eShlLHQse3ZhbHVlOm4sY29uZmlndXJhYmxlOiEwLHdyaXRhYmxlOiEwfSksZSl9OmZ1bmN0aW9uKGUsdCxuKXtyZXR1cm4gZVt0XT9lOihlW3RdPW4sZSl9LHIobixcImRlZmVyXCIsZnVuY3Rpb24oKXt2YXIgZT17fTtyZXR1cm4gZS5wcm9taXNlPW5ldyBuKGZ1bmN0aW9uKHQsbil7ZS5yZXNvbHZlPXQsZS5yZWplY3Q9bn0pLGV9KSxyKG4ucHJvdG90eXBlLFwic3ByZWFkXCIsZnVuY3Rpb24oZSx0KXtyZXR1cm4gdGhpcy50aGVuKGZ1bmN0aW9uKGUpe3JldHVybiBuLmFsbChlKX0pLnRoZW4oZnVuY3Rpb24odCl7cmV0dXJuIDE9PT10Lmxlbmd0aD9lKHRbMF0pOmUuYXBwbHkodGhpcyx0KX0sdCl9KSxlLmV4cG9ydHM9bn0pLmNhbGwodCxuKDEpKX0sZnVuY3Rpb24oZSx0LG4pe1widXNlIHN0cmljdFwiOyhmdW5jdGlvbih0KXtmdW5jdGlvbiByKCl7dmFyIGU9bmV3IHQuVWludDhBcnJheSgxNik7cmV0dXJuIHQuY3J5cHRvLmdldFJhbmRvbVZhbHVlcyhlKSxpLnRvSGV4KGUuam9pbihcIlwiKSw0MCkuc2xpY2UoMCw0MCl9ZnVuY3Rpb24gcygpe2Zvcih2YXIgZT1uZXcgQXJyYXkoMjcpLHQ9ZS5sZW5ndGg7dC0tOyllW3RdPU1hdGguZmxvb3IoOCpNYXRoLnJhbmRvbSgpKTtyZXR1cm4gaS50b0hleChlLmpvaW4oXCJcIiksNDApfWZ1bmN0aW9uIG8oZSxuKXtpZihlJiZcInN0cmluZ1wiPT10eXBlb2YgZSlyZXR1cm4gZTtpZihuKXJldHVybiB1KCk7dmFyIHI9dC5sb2NhbFN0b3JhZ2UuZ2V0SXRlbShjKTtyZXR1cm4gcnx8KHI9dSgpLHQubG9jYWxTdG9yYWdlLnNldEl0ZW0oYyxyKSkscn12YXIgaT1uKDcpLGE9XCJmdW5jdGlvblwiPT10eXBlb2YgdC5VaW50OEFycmF5JiZ2b2lkIDAhPT10LmNyeXB0byYmXCJmdW5jdGlvblwiPT10eXBlb2YgdC5jcnlwdG8uZ2V0UmFuZG9tVmFsdWVzLHU9YT9yOnMsYz1cIl9zcGhhcm1vbnlfZGV2aWNlX2lkXCI7ZS5leHBvcnRzPXtnZXQ6byxnZW5lcmF0ZTp1LGdlbmVyYXRlV2l0aENyeXB0bzpyLGdlbmVyYXRlV2l0aFJhbmRvbTpzfX0pLmNhbGwodCxuKDEpKX0sZnVuY3Rpb24oZSx0LG4pe1widXNlIHN0cmljdFwiO2Z1bmN0aW9uIHIoZSx0LG4pe2Zvcih2YXIgcj0wLHM9MDtzPGUubGVuZ3RoOysrcyl7dmFyIG89ZVtzXSp0K3I7ZVtzXT1vJW4scj1+fihvL24pfWZvcig7cjspZS5wdXNoKHIlbikscj1+fihyL24pfWZ1bmN0aW9uIHMoZSx0LG4scil7dmFyIHMsbyxpPTA7Zm9yKG89MDtvPHQubGVuZ3RoOysrbylzPX5+ZVtvXSt0W29dKm4raSxlW29dPXMlcixpPX5+KHMvcik7Zm9yKDtpOylzPX5+ZVtvXStpLGVbb109cyVyLGk9fn4ocy9yKSwrK299ZnVuY3Rpb24gbyhlLHQsbil7Zm9yKHZhciBvPVswXSxpPVsxXSxhPTA7YTxlLmxlbmd0aDsrK2EpcyhvLGksZVthXSxuKSxyKGksdCxuKTtyZXR1cm4gb31mdW5jdGlvbiBpKGUsdCl7Zm9yKHZhciBuPVtdLHI9MDtyPGUubGVuZ3RoOysrciluLnB1c2godFtlW3JdXSk7cmV0dXJuIG4ucmV2ZXJzZSgpfWZ1bmN0aW9uIGEoZSx0KXtmb3IoO2UubGVuZ3RoPHQ7KWUucHVzaCgwKTtyZXR1cm4gZX12YXIgdT1cIjAxMjM0NTY3ODlhYmNkZWZnaGlqa2xtbm9wcXJzdHV2d3h5ekFCQ0RFRkdISUpLTE1OT1BRUlNUVVZXWFlaXCIsYz17fSxfPXt9OyFmdW5jdGlvbigpe3ZhciBlLHQ7Zm9yKGU9MCx0PXUubGVuZ3RoO2U8dDsrK2UpX1t1W2VdXT1lO2ZvcihlPTA7ZTwxNjsrK2UpY1tcIjAxMjM0NTY3ODlhYmNkZWZcIltlXV09ZTtmb3IoZT0wO2U8MTY7KytlKWNbXCIwMTIzNDU2Nzg5QUJDREVGXCJbZV1dPWV9KCksZS5leHBvcnRzPXtmcm9tQnl0ZXM6ZnVuY3Rpb24oZSx0KXtyZXR1cm4gaShhKG8oZS5zbGljZSgwKS5yZXZlcnNlKCksMjU2LDYyKSx0KSx1KS5qb2luKFwiXCIpfSx0b0J5dGVzOmZ1bmN0aW9uKGUsdCl7cmV0dXJuIGEobyhpKGUsXyksNjIsMjU2KSx0KS5yZXZlcnNlKCl9LHRvSGV4OmZ1bmN0aW9uKGUsdCl7cmV0dXJuIGkoYShvKGkoZSxfKSw2MiwxNiksdCksdSkuam9pbihcIlwiKX0sZnJvbUhleDpmdW5jdGlvbihlLHQpe3JldHVybiBpKGEobyhpKGUsYyksMTYsNjIpLHQpLHUpLmpvaW4oXCJcIil9fX1dKTsiLCJcclxuaWYgKCF3aW5kb3dbJ1lUJ10pIHt2YXIgWVQgPSB7bG9hZGluZzogMCxsb2FkZWQ6IDB9O31pZiAoIXdpbmRvd1snWVRDb25maWcnXSkge3ZhciBZVENvbmZpZyA9IHsnaG9zdCc6ICdodHRwOi8vd3d3LnlvdXR1YmUuY29tJ307fWlmICghWVQubG9hZGluZykge1lULmxvYWRpbmcgPSAxOyhmdW5jdGlvbigpe3ZhciBsID0gW107WVQucmVhZHkgPSBmdW5jdGlvbihmKSB7aWYgKFlULmxvYWRlZCkge2YoKTt9IGVsc2Uge2wucHVzaChmKTt9fTt3aW5kb3cub25ZVFJlYWR5ID0gZnVuY3Rpb24oKSB7WVQubG9hZGVkID0gMTtmb3IgKHZhciBpID0gMDsgaSA8IGwubGVuZ3RoOyBpKyspIHt0cnkge2xbaV0oKTt9IGNhdGNoIChlKSB7fX19O1lULnNldENvbmZpZyA9IGZ1bmN0aW9uKGMpIHtmb3IgKHZhciBrIGluIGMpIHtpZiAoYy5oYXNPd25Qcm9wZXJ0eShrKSkge1lUQ29uZmlnW2tdID0gY1trXTt9fX07dmFyIGEgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCdzY3JpcHQnKTthLnR5cGUgPSAndGV4dC9qYXZhc2NyaXB0JzthLmlkID0gJ3d3dy13aWRnZXRhcGktc2NyaXB0JzthLnNyYyA9ICdodHRwczovL3MueXRpbWcuY29tL3l0cy9qc2Jpbi93d3ctd2lkZ2V0YXBpLXZmbFVGVnlFUC93d3ctd2lkZ2V0YXBpLmpzJzthLmFzeW5jID0gdHJ1ZTt2YXIgYyA9IGRvY3VtZW50LmN1cnJlbnRTY3JpcHQ7aWYgKGMpIHt2YXIgbiA9IGMubm9uY2UgfHwgYy5nZXRBdHRyaWJ1dGUoJ25vbmNlJyk7aWYgKG4pIHthLnNldEF0dHJpYnV0ZSgnbm9uY2UnLCBuKTt9fXZhciBiID0gZG9jdW1lbnQuZ2V0RWxlbWVudHNCeVRhZ05hbWUoJ3NjcmlwdCcpWzBdO2IucGFyZW50Tm9kZS5pbnNlcnRCZWZvcmUoYSwgYik7fSkoKTt9Il0sInNvdXJjZVJvb3QiOiIifQ==