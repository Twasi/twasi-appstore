!function(t){var e={};function n(i){if(e[i])return e[i].exports;var s=e[i]={i:i,l:!1,exports:{}};return t[i].call(s.exports,s,s.exports,n),s.l=!0,s.exports}n.m=t,n.c=e,n.d=function(t,e,i){n.o(t,e)||Object.defineProperty(t,e,{enumerable:!0,get:i})},n.r=function(t){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(t,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(t,"__esModule",{value:!0})},n.t=function(t,e){if(1&e&&(t=n(t)),8&e)return t;if(4&e&&"object"==typeof t&&t&&t.__esModule)return t;var i=Object.create(null);if(n.r(i),Object.defineProperty(i,"default",{enumerable:!0,value:t}),2&e&&"string"!=typeof t)for(var s in t)n.d(i,s,function(e){return t[e]}.bind(null,s));return i},n.n=function(t){var e=t&&t.__esModule?function(){return t.default}:function(){return t};return n.d(e,"a",e),e},n.o=function(t,e){return Object.prototype.hasOwnProperty.call(t,e)},n.p="",n(n.s=1)}([function(t,e,n){"use strict";var i,s=function(t){return{topic:"twasi-songrequests/events",scope:"action",action:{type:"add",song:t}}},r={topic:"twasi-songrequests/events",scope:"action",action:{type:"queue"}},o=function(t){return void 0===t&&(t=!1),{topic:"twasi-songrequests/events",scope:"action",action:{type:t?"skip":"next"}}},u=function(t,e,n,i){return new(n||(n=Promise))((function(s,r){function o(t){try{a(i.next(t))}catch(t){r(t)}}function u(t){try{a(i.throw(t))}catch(t){r(t)}}function a(t){var e;t.done?s(t.value):(e=t.value,e instanceof n?e:new n((function(t){t(e)}))).then(o,u)}a((i=i.apply(t,e||[])).next())}))},a=function(t,e){var n,i,s,r,o={label:0,sent:function(){if(1&s[0])throw s[1];return s[1]},trys:[],ops:[]};return r={next:u(0),throw:u(1),return:u(2)},"function"==typeof Symbol&&(r[Symbol.iterator]=function(){return this}),r;function u(r){return function(u){return function(r){if(n)throw new TypeError("Generator is already executing.");for(;o;)try{if(n=1,i&&(s=2&r[0]?i.return:r[0]?i.throw||((s=i.return)&&s.call(i),0):i.next)&&!(s=s.call(i,r[1])).done)return s;switch(i=0,s&&(r=[2&r[0],s.value]),r[0]){case 0:case 1:s=r;break;case 4:return o.label++,{value:r[1],done:!1};case 5:o.label++,i=r[1],r=[0];continue;case 7:r=o.ops.pop(),o.trys.pop();continue;default:if(!(s=(s=o.trys).length>0&&s[s.length-1])&&(6===r[0]||2===r[0])){o=0;continue}if(3===r[0]&&(!s||r[1]>s[0]&&r[1]<s[3])){o.label=r[1];break}if(6===r[0]&&o.label<s[1]){o.label=s[1],s=r;break}if(s&&o.label<s[2]){o.label=s[2],o.ops.push(r);break}s[2]&&o.ops.pop(),o.trys.pop();continue}r=e.call(t,o)}catch(t){r=[6,t],i=0}finally{n=s=0}if(5&r[0])throw r[1];return{value:r[0]?r[1]:void 0,done:!0}}([r,u])}}},c=function(){function t(t,e,n){this.api=t,this.jwt=e,this.statusListener=n,this.events=new Map,this.connect()}return t.prototype.connect=function(){var t=this;setTimeout((function(){t.connect()}),3e3),this.client&&this.client.readyState===this.client.OPEN||(this.client=new WebSocket(this.api),this.client.onerror=function(){t.statusListener.statusChanged(i.DISCONNECTED)},this.client.onopen=function(){return t.authorize()},this.client.onclose=function(){t.statusListener.statusChanged(i.DISCONNECTED)},this.requests=new l(this.client,this.events))},t.prototype.authorize=function(){return u(this,void 0,void 0,(function(){var t,e;return a(this,(function(n){switch(n.label){case 0:return[4,this.requests.request({topic:"auth",scope:"action",action:{type:"JWT_TOKEN",token:this.jwt}})];case 1:return"success"!==(t=n.sent()).status?[3,3]:(e=t.result.user.twitchId,[4,this.requests.request({topic:"twasi-songrequests/events",scope:"subscribe",config:{channel:e}})]);case 2:t=n.sent(),n.label=3;case 3:return this.statusListener.statusChanged("success"===t.status?i.CONNECTED:i.UNAUTHORIZED),[2]}}))}))},t.prototype.on=function(t,e){this.events.has(t)?this.events.get(t).push(e):this.events.set(t,[e])},t.prototype.add=function(t){return u(this,void 0,void 0,(function(){return a(this,(function(e){switch(e.label){case 0:return[4,this.requests.request(s(t))];case 1:return[2,e.sent()]}}))}))},t.prototype.getQueue=function(){return u(this,void 0,void 0,(function(){return a(this,(function(t){switch(t.label){case 0:return[4,this.requests.request(r)];case 1:return[2,t.sent().result]}}))}))},t.prototype.next=function(t){return void 0===t&&(t=!1),u(this,void 0,void 0,(function(){return a(this,(function(e){switch(e.label){case 0:return[4,this.requests.request(o(t))];case 1:return[2,e.sent()]}}))}))},t}();!function(t){t[t.CONNECTED=0]="CONNECTED",t[t.DISCONNECTED=1]="DISCONNECTED",t[t.UNAUTHORIZED=2]="UNAUTHORIZED"}(i||(i={}));var h,p,l=function(){function t(t,e){var n=this;this.count=0,this.pending=new Map,this.events=new Map,e&&(this.events=e),this.client=t,this.client.onmessage=function(t){var e=JSON.parse(t.data);e.ref&&n.pending.has(e.ref)?(n.pending.get(e.ref)(e.result),n.pending.delete(e.ref)):e.event&&n.events.has(e.event)&&n.events.get(e.event).forEach((function(t){t(e.details,new Date(e.timeStamp))}))}}return t.prototype.request=function(t,e){var n=this;return void 0===e&&(e=3e3),t.ref||(t.ref=this.newRef()),new Promise((function(i,s){n.pending.set(t.ref,i),n.client.send(JSON.stringify(t)),setTimeout((function(){n.pending.has(t.ref)&&(n.pending.delete(t.ref),s("Timed Out"))}),e)}))},t.prototype.on=function(t,e){this.events.has(t)?this.events.get(t).push(e):this.events.set(t,[e])},t.prototype.newRef=function(){return(this.count++).toString()},t}(),f={topic:"twasi-songrequests/spotify-credentials",scope:"action",action:{type:"get"}},d={topic:"twasi-songrequests/spotify-credentials",scope:"action",action:{type:"init"}},y=function(t){return{topic:"twasi-songrequests/spotify-credentials",scope:"action",action:{type:"set",code:t}}},v={topic:"twasi-songrequests/spotify-credentials",scope:"action",action:{type:"refresh"}},g={topic:"twasi-songrequests/spotify-credentials",scope:"action",action:{type:"remove"}},_=function(t,e,n,i){return new(n||(n=Promise))((function(s,r){function o(t){try{a(i.next(t))}catch(t){r(t)}}function u(t){try{a(i.throw(t))}catch(t){r(t)}}function a(t){var e;t.done?s(t.value):(e=t.value,e instanceof n?e:new n((function(t){t(e)}))).then(o,u)}a((i=i.apply(t,e||[])).next())}))},E=function(t,e){var n,i,s,r,o={label:0,sent:function(){if(1&s[0])throw s[1];return s[1]},trys:[],ops:[]};return r={next:u(0),throw:u(1),return:u(2)},"function"==typeof Symbol&&(r[Symbol.iterator]=function(){return this}),r;function u(r){return function(u){return function(r){if(n)throw new TypeError("Generator is already executing.");for(;o;)try{if(n=1,i&&(s=2&r[0]?i.return:r[0]?i.throw||((s=i.return)&&s.call(i),0):i.next)&&!(s=s.call(i,r[1])).done)return s;switch(i=0,s&&(r=[2&r[0],s.value]),r[0]){case 0:case 1:s=r;break;case 4:return o.label++,{value:r[1],done:!1};case 5:o.label++,i=r[1],r=[0];continue;case 7:r=o.ops.pop(),o.trys.pop();continue;default:if(!(s=(s=o.trys).length>0&&s[s.length-1])&&(6===r[0]||2===r[0])){o=0;continue}if(3===r[0]&&(!s||r[1]>s[0]&&r[1]<s[3])){o.label=r[1];break}if(6===r[0]&&o.label<s[1]){o.label=s[1],s=r;break}if(s&&o.label<s[2]){o.label=s[2],o.ops.push(r);break}s[2]&&o.ops.pop(),o.trys.pop();continue}r=e.call(t,o)}catch(t){r=[6,t],i=0}finally{n=s=0}if(5&r[0])throw r[1];return{value:r[0]?r[1]:void 0,done:!0}}([r,u])}}},b=function(){function t(t,e){var n=this;this.token=null,this.expires=null,this.api=t,this.listener=e;window.addEventListener("message",(function(t){return _(n,void 0,void 0,(function(){return E(this,(function(e){switch(e.label){case 0:return"string"!=typeof t.data?[2]:t.data.startsWith("code:")?[4,this.set(t.data.substr("code:".length))]:[2];case 1:return e.sent(),this.win.postMessage("close","*"),[2]}}))}))}),!1)}return t.prototype.get=function(){return _(this,void 0,void 0,(function(){var t;return E(this,(function(e){switch(e.label){case 0:return[4,this.api.requests.request(f)];case 1:return t=e.sent(),this.handle(t.token?t:null),[2]}}))}))},t.prototype.init=function(){return _(this,void 0,void 0,(function(){var t;return E(this,(function(e){switch(e.label){case 0:return[4,this.api.requests.request(d)];case 1:return t=e.sent(),this.win=window.open(t.result.uri,"popUpWindow","height=500,width=400,left=100,top=100,resizable=yes,scrollbars=yes,toolbar=yes,menubar=no,location=no,directories=no, status=yes"),[2]}}))}))},t.prototype.set=function(t){return _(this,void 0,void 0,(function(){var e;return E(this,(function(n){switch(n.label){case 0:return[4,this.api.requests.request(y(t))];case 1:return e=n.sent(),this.handle(e),[2]}}))}))},t.prototype.refresh=function(){return _(this,void 0,void 0,(function(){var t;return E(this,(function(e){switch(e.label){case 0:return[4,this.api.requests.request(v)];case 1:return t=e.sent(),this.handle(t.token?t:null),[2]}}))}))},t.prototype.remove=function(){return _(this,void 0,void 0,(function(){return E(this,(function(t){switch(t.label){case 0:return[4,this.api.requests.request(g)];case 1:if("success"!==t.sent().status)throw"An error occured";return[2]}}))}))},t.prototype.handle=function(t){var e=this;t?(this.token=t.token,this.expires=new Date(t.expires),this.listener.spotifyAuthenticated(!0,t.token),setTimeout((function(){return _(e,void 0,void 0,(function(){return E(this,(function(e){switch(e.label){case 0:return this.token!==t.token?[2]:[4,this.refresh()];case 1:return e.sent(),[2]}}))}))}),this.expires.getTime()-Date.now())):this.listener.spotifyAuthenticated(!1)},t}(),w=function(t){this.events=t},m=(h=function(t,e){return(h=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(t,e){t.__proto__=e}||function(t,e){for(var n in e)e.hasOwnProperty(n)&&(t[n]=e[n])})(t,e)},function(t,e){function n(){this.constructor=t}h(t,e),t.prototype=null===e?Object.create(e):(n.prototype=e.prototype,new n)}),T=function(t,e,n,i){return new(n||(n=Promise))((function(s,r){function o(t){try{a(i.next(t))}catch(t){r(t)}}function u(t){try{a(i.throw(t))}catch(t){r(t)}}function a(t){var e;t.done?s(t.value):(e=t.value,e instanceof n?e:new n((function(t){t(e)}))).then(o,u)}a((i=i.apply(t,e||[])).next())}))},R=function(t,e){var n,i,s,r,o={label:0,sent:function(){if(1&s[0])throw s[1];return s[1]},trys:[],ops:[]};return r={next:u(0),throw:u(1),return:u(2)},"function"==typeof Symbol&&(r[Symbol.iterator]=function(){return this}),r;function u(r){return function(u){return function(r){if(n)throw new TypeError("Generator is already executing.");for(;o;)try{if(n=1,i&&(s=2&r[0]?i.return:r[0]?i.throw||((s=i.return)&&s.call(i),0):i.next)&&!(s=s.call(i,r[1])).done)return s;switch(i=0,s&&(r=[2&r[0],s.value]),r[0]){case 0:case 1:s=r;break;case 4:return o.label++,{value:r[1],done:!1};case 5:o.label++,i=r[1],r=[0];continue;case 7:r=o.ops.pop(),o.trys.pop();continue;default:if(!(s=(s=o.trys).length>0&&s[s.length-1])&&(6===r[0]||2===r[0])){o=0;continue}if(3===r[0]&&(!s||r[1]>s[0]&&r[1]<s[3])){o.label=r[1];break}if(6===r[0]&&o.label<s[1]){o.label=s[1],s=r;break}if(s&&o.label<s[2]){o.label=s[2],o.ops.push(r);break}s[2]&&o.ops.pop(),o.trys.pop();continue}r=e.call(t,o)}catch(t){r=[6,t],i=0}finally{n=s=0}if(5&r[0])throw r[1];return{value:r[0]?r[1]:void 0,done:!0}}([r,u])}}},P=function(t){function e(e,n){var i=t.call(this,e)||this;return i.events=e,i.api=n,i}return m(e,t),e.prototype.init=function(t){var e=this;this.player&&this.player.disconnect(),this.token=t;var n=new Spotify.Player({name:"Twasi-Panel",getOAuthToken:function(e){e(t)}});n.addListener("initialization_error",(function(t){var e=t.message;window.TSRI.reports.spotifyReports.push({type:"initialization_error",message:e})})),n.addListener("authentication_error",(function(t){var n=t.message;return T(e,void 0,void 0,(function(){return R(this,(function(t){return window.TSRI.reports.spotifyReports.push({type:"authentication_error",message:n}),[2]}))}))})),n.addListener("account_error",(function(t){var n=t.message;return T(e,void 0,void 0,(function(){return R(this,(function(t){return window.TSRI.reports.spotifyReports.push({type:"account_error",message:n}),[2]}))}))})),n.addListener("playback_error",(function(t){var n=t.message;return T(e,void 0,void 0,(function(){return R(this,(function(t){return window.TSRI.reports.spotifyReports.push({type:"playback_error",message:n}),[2]}))}))})),n.addListener("player_state_changed",(function(t){return T(e,void 0,void 0,(function(){return R(this,(function(e){return t?(t.position&&t.duration?this.events.onPositionChange(t.position,t.duration):t.paused||this.events.onPositionChange(0,this.song.duration),t.paused?this.events.onPause():this.events.onPlay(this.song),t.paused&&t.disallows.resuming&&t.position&&t.duration&&t.position/t.duration>.98&&this.events.onNext(),[2]):[2]}))}))})),n.addListener("ready",(function(t){var n=t.device_id;e.id=n})),n.addListener("not_ready",(function(t){t.device_id;return T(e,void 0,void 0,(function(){return R(this,(function(t){switch(t.label){case 0:return[4,window.TSRI.spotifyAuth.refresh()];case 1:return t.sent(),[2]}}))}))})),this.player=n,n.connect()},e.prototype.pause=function(){this.player.pause()},e.prototype.play=function(t,e){return T(this,void 0,void 0,(function(){return R(this,(function(e){switch(e.label){case 0:return this.song&&this.song.uri===t.uri?(this.player.resume(),[3,3]):[3,1];case 1:return this.song=t,[4,fetch("https://api.spotify.com/v1/me/player/play?device_id="+this.id,{method:"PUT",body:JSON.stringify({uris:[t.uri]}),headers:{"Content-Type":"application/json",Authorization:"Bearer "+this.token}})];case 2:e.sent(),e.label=3;case 3:return[2]}}))}))},e.prototype.seek=function(t){this.player.seek(this.song.duration*t)},e.prototype.setVolume=function(t,e){e-=.5,t=t/10*7.5,t+=.25*(e*=-2),this.player.setVolume(t),console.log("Spotify balance: %s, volume: %s",e,t)},e.prototype.resume=function(){this.player.resume()},e}(w),A=function(){var t=function(e,n){return(t=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(t,e){t.__proto__=e}||function(t,e){for(var n in e)e.hasOwnProperty(n)&&(t[n]=e[n])})(e,n)};return function(e,n){function i(){this.constructor=e}t(e,n),e.prototype=null===n?Object.create(n):(i.prototype=n.prototype,new i)}}(),O=function(t){function e(e,n,i){var s=t.call(this,e)||this;if(!i)throw"API_NOT_READY";s.player=new YT.Player("youtube-player",{events:{onStateChange:function(t){return s.onUpdate(t)}}});var r=function(){s.setPos(),setTimeout(r,500)};return r(),s}return A(e,t),e.prototype.setPos=function(){try{this.events.onPositionChange(1e3*this.player.getCurrentTime(),1e3*this.player.getDuration())}catch(t){}},e.prototype.onUpdate=function(t){1===t.data?this.events.onPlay():0===t.data?this.events.onNext():this.events.onPause(),this.setPos()},e.prototype.pause=function(){this.player.pauseVideo()},e.prototype.play=function(t,e){this.player.loadVideoById(t.uri)},e.prototype.seek=function(t){this.player.seekTo(this.player.getDuration()*t)},e.prototype.setVolume=function(t,e){e-=.5,t=t/10*7.5,t+=.25*(e*=2),this.player.setVolume(100*t),console.log("YouTube balance: %s, volume: %s",e,t)},e.prototype.resume=function(){this.player.playVideo()},e}(w);!function(t){t[t.NONE=0]="NONE",t[t.SPOTIFY=1]="SPOTIFY",t[t.YOUTUBE=2]="YOUTUBE"}(p||(p={}));var S={topic:"twasi-songrequests/events",scope:"action",action:{type:"back"}},N=function(t){return{topic:"twasi-songrequests/events",scope:"action",action:{type:"settings",settings:t}}},C=function(t,e,n,i){return new(n||(n=Promise))((function(s,r){function o(t){try{a(i.next(t))}catch(t){r(t)}}function u(t){try{a(i.throw(t))}catch(t){r(t)}}function a(t){var e;t.done?s(t.value):(e=t.value,e instanceof n?e:new n((function(t){t(e)}))).then(o,u)}a((i=i.apply(t,e||[])).next())}))},q=function(t,e){var n,i,s,r,o={label:0,sent:function(){if(1&s[0])throw s[1];return s[1]},trys:[],ops:[]};return r={next:u(0),throw:u(1),return:u(2)},"function"==typeof Symbol&&(r[Symbol.iterator]=function(){return this}),r;function u(r){return function(u){return function(r){if(n)throw new TypeError("Generator is already executing.");for(;o;)try{if(n=1,i&&(s=2&r[0]?i.return:r[0]?i.throw||((s=i.return)&&s.call(i),0):i.next)&&!(s=s.call(i,r[1])).done)return s;switch(i=0,s&&(r=[2&r[0],s.value]),r[0]){case 0:case 1:s=r;break;case 4:return o.label++,{value:r[1],done:!1};case 5:o.label++,i=r[1],r=[0];continue;case 7:r=o.ops.pop(),o.trys.pop();continue;default:if(!(s=(s=o.trys).length>0&&s[s.length-1])&&(6===r[0]||2===r[0])){o=0;continue}if(3===r[0]&&(!s||r[1]>s[0]&&r[1]<s[3])){o.label=r[1];break}if(6===r[0]&&o.label<s[1]){o.label=s[1],s=r;break}if(s&&o.label<s[2]){o.label=s[2],o.ops.push(r);break}s[2]&&o.ops.pop(),o.trys.pop();continue}r=e.call(t,o)}catch(t){r=[6,t],i=0}finally{n=s=0}if(5&r[0])throw r[1];return{value:r[0]?r[1]:void 0,done:!0}}([r,u])}}},k=function(){for(var t=0,e=0,n=arguments.length;e<n;e++)t+=arguments[e].length;var i=Array(t),s=0;for(e=0;e<n;e++)for(var r=arguments[e],o=0,u=r.length;o<u;o++,s++)i[s]=r[o];return i},M=function(){function t(t,e,n){var i=this;this.api=t,this.frontendEvents=e,this.song=null,this.queue=[],this._history=[],this.firstPlayback=!0,this.shouldPlay=!1,this.posPredicter=new L((function(t){return i.frontendEvents.position(t)})),this.spotify=new P(this.playbackProviderEvents(p.SPOTIFY),t),this.youtube=new O(this.playbackProviderEvents(p.YOUTUBE),t,n.youtubeApi),t.on("queue",(function(t){return i.setQueue(t.queue,t.history,i.shouldPlay)})),t.on("settings",(function(t){i.settings=t}))}return t.prototype.setEvents=function(t){this.frontendEvents=t,this.shouldPlay?t.play():t.pause();var e=k(this.queue);t.queueUpdate(e,this._history),t.song(this.song),t.settingsUpdate(this.settings)},t.prototype.play=function(t,e){return C(this,void 0,void 0,(function(){return q(this,(function(n){switch(n.label){case 0:return this.shouldPlay=!0,e?(this.song&&this.pause(),this.song=e,this.getController(e.provider).play(e,t),[3,4]):[3,1];case 1:return this.song?(this.firstPlayback||0===this.posPredicter.prediction?(this.firstPlayback=!1,this.play(!0,this.song)):this.getController(this.song.provider).resume(),[3,4]):[3,2];case 2:return[4,this.next()];case 3:n.sent(),n.label=4;case 4:return this.frontendEvents.song(this.song),this.shouldPlay=!0,[2]}}))}))},t.prototype.pause=function(){this.shouldPlay=!0,this.song&&this.getController(this.song.provider).pause()},t.prototype.getController=function(t){switch(t){case p.NONE:default:return null;case p.SPOTIFY:return this.spotify;case p.YOUTUBE:return this.youtube}},t.prototype.seek=function(t){this.song&&this.getController(this.song.provider).seek(t)},t.prototype.localAdd=function(t){this.queue.push(t),this.frontendEvents.queueUpdate(this.queue,this._history),this.posPredicter.predict||this.play(!1,void 0)},t.prototype.setQueue=function(t,e,n){if(void 0===n&&(n=!0),t.length){var i=t[0];n&&(!this.song||this.song&&this.song.uri!==i.uri)?this.play(!0,i):(this.frontendEvents.song(t[0]),this.song=i)}else this.posPredicter.resetPosition(),this.song&&this.pause(),this.song=null,this.frontendEvents.song(null),this.posPredicter.resetPosition();this.queue=t,this._history=e,this.frontendEvents.queueUpdate(this.queue,this._history)},t.prototype.localNext=function(){this.posPredicter.resetPosition(),this.song&&(this.pause(),this._history.unshift(this.song)),this.queue.length?(this.play(!0,this.queue[0]),this.queue.shift()):(this.song=null,this.frontendEvents.song(null),this.posPredicter.resetPosition()),this.frontendEvents.queueUpdate(this.queue,this._history)},t.prototype.back=function(){return C(this,void 0,void 0,(function(){var t;return q(this,(function(e){switch(e.label){case 0:return[4,this.api.requests.request(S)];case 1:if("success"!==(t=e.sent()).status)throw t.message;return[2]}}))}))},t.prototype.next=function(){return C(this,void 0,void 0,(function(){return q(this,(function(t){switch(t.label){case 0:return[4,this.api.requests.request(o(!1))];case 1:return t.sent(),[2]}}))}))},t.prototype.skip=function(){return C(this,void 0,void 0,(function(){return q(this,(function(t){switch(t.label){case 0:return[4,this.api.requests.request(o(!0))];case 1:return t.sent(),[2]}}))}))},t.prototype.apiAdd=function(t){return C(this,void 0,void 0,(function(){return q(this,(function(e){switch(e.label){case 0:return[4,this.api.requests.request(s(t))];case 1:return e.sent(),[2]}}))}))},t.prototype.playbackProviderEvents=function(t){var e=this;return{onPause:function(){e.song&&![p.NONE,t].includes(e.song.provider)||(e.posPredicter.predict=!1,e.frontendEvents.stop())},onPlay:function(n){e.song&&e.song.provider===t&&(e.posPredicter.predict=!0,e.frontendEvents.play())},onPositionChange:function(n,i){e.song&&e.song.provider===t&&e.posPredicter.setPosition(n,i)},onNext:function(){return e.next()}}},t.prototype.loadQueue=function(t){return void 0===t&&(t=!0),C(this,void 0,void 0,(function(){var e;return q(this,(function(n){switch(n.label){case 0:return[4,this.api.requests.request(r)];case 1:return e=n.sent().result,this.setQueue(e.queue,e.history,t),[2]}}))}))},t.prototype.setVolume=function(t){return C(this,void 0,void 0,(function(){return q(this,(function(e){switch(e.label){case 0:return[4,this.setSettings({volume:t})];case 1:return e.sent(),[2]}}))}))},t.prototype.setVolumeBalance=function(t){return C(this,void 0,void 0,(function(){return q(this,(function(e){switch(e.label){case 0:return[4,this.setSettings({volumeBalance:t})];case 1:return e.sent(),[2]}}))}))},t.prototype.setSettings=function(t){return C(this,void 0,void 0,(function(){var e;return q(this,(function(n){switch(n.label){case 0:return[4,this.api.requests.request(N(t))];case 1:return e=n.sent(),console.log(e),"success"===e.status&&this.handleSettings(e.result),[2,e]}}))}))},t.prototype.handleSettings=function(t){this.frontendEvents.settingsUpdate(t),this.spotify.setVolume(t.volume,t.volumeBalance),this.youtube.setVolume(t.volume,t.volumeBalance)},t}(),L=function(){function t(t){var e=this;this.callback=t,this.predict=!1,this.lastPosition=Date.now(),this.duration=0,this.position=0,this.prediction=0;var n=function(){e.predictNow(),setTimeout(n,500)};n()}return t.prototype.setPosition=function(t,e){this.lastPosition=Date.now(),this.position=t,this.duration=e,this.predictNow()},t.prototype.resetPosition=function(){this.setPosition(0,0)},t.prototype.predictNow=function(){var t;0!==this.duration||0!==this.position?(this.predict&&(t=(this.position+(Date.now()-this.lastPosition))/this.duration),"number"==typeof t&&(this.prediction=t>1?1:t),this.callback(this.prediction)):this.callback(0)},t}(),x=function(t,e){return{topic:"twasi-songrequests/events",scope:"action",action:{type:"search",provider:p.SPOTIFY,token:t,query:e}}},I=function(t){return{topic:"twasi-songrequests/events",scope:"action",action:{type:"search",provider:p.YOUTUBE,query:t}}},U=function(t,e,n,i){return new(n||(n=Promise))((function(s,r){function o(t){try{a(i.next(t))}catch(t){r(t)}}function u(t){try{a(i.throw(t))}catch(t){r(t)}}function a(t){var e;t.done?s(t.value):(e=t.value,e instanceof n?e:new n((function(t){t(e)}))).then(o,u)}a((i=i.apply(t,e||[])).next())}))},D=function(t,e){var n,i,s,r,o={label:0,sent:function(){if(1&s[0])throw s[1];return s[1]},trys:[],ops:[]};return r={next:u(0),throw:u(1),return:u(2)},"function"==typeof Symbol&&(r[Symbol.iterator]=function(){return this}),r;function u(r){return function(u){return function(r){if(n)throw new TypeError("Generator is already executing.");for(;o;)try{if(n=1,i&&(s=2&r[0]?i.return:r[0]?i.throw||((s=i.return)&&s.call(i),0):i.next)&&!(s=s.call(i,r[1])).done)return s;switch(i=0,s&&(r=[2&r[0],s.value]),r[0]){case 0:case 1:s=r;break;case 4:return o.label++,{value:r[1],done:!1};case 5:o.label++,i=r[1],r=[0];continue;case 7:r=o.ops.pop(),o.trys.pop();continue;default:if(!(s=(s=o.trys).length>0&&s[s.length-1])&&(6===r[0]||2===r[0])){o=0;continue}if(3===r[0]&&(!s||r[1]>s[0]&&r[1]<s[3])){o.label=r[1];break}if(6===r[0]&&o.label<s[1]){o.label=s[1],s=r;break}if(s&&o.label<s[2]){o.label=s[2],o.ops.push(r);break}s[2]&&o.ops.pop(),o.trys.pop();continue}r=e.call(t,o)}catch(t){r=[6,t],i=0}finally{n=s=0}if(5&r[0])throw r[1];return{value:r[0]?r[1]:void 0,done:!0}}([r,u])}}},Y=function(){function t(t,e){this.api=t,this.spotify=e}return t.prototype.onSpotify=function(t){return U(this,void 0,void 0,(function(){var e;return D(this,(function(n){switch(n.label){case 0:return[4,this.api.requests.request(x(this.spotify.token,t))];case 1:if("success"===(e=n.sent()).status)return[2,e.result];throw"An error occurred."}}))}))},t.prototype.onYouTube=function(t){return U(this,void 0,void 0,(function(){var e;return D(this,(function(n){switch(n.label){case 0:return[4,this.api.requests.request(I(t),6e3)];case 1:if("success"===(e=n.sent()).status)return[2,e.result];throw"An error occurred."}}))}))},t}();n.d(e,"a",(function(){return j}));var V=function(t,e,n,i){return new(n||(n=Promise))((function(s,r){function o(t){try{a(i.next(t))}catch(t){r(t)}}function u(t){try{a(i.throw(t))}catch(t){r(t)}}function a(t){var e;t.done?s(t.value):(e=t.value,e instanceof n?e:new n((function(t){t(e)}))).then(o,u)}a((i=i.apply(t,e||[])).next())}))},G=function(t,e){var n,i,s,r,o={label:0,sent:function(){if(1&s[0])throw s[1];return s[1]},trys:[],ops:[]};return r={next:u(0),throw:u(1),return:u(2)},"function"==typeof Symbol&&(r[Symbol.iterator]=function(){return this}),r;function u(r){return function(u){return function(r){if(n)throw new TypeError("Generator is already executing.");for(;o;)try{if(n=1,i&&(s=2&r[0]?i.return:r[0]?i.throw||((s=i.return)&&s.call(i),0):i.next)&&!(s=s.call(i,r[1])).done)return s;switch(i=0,s&&(r=[2&r[0],s.value]),r[0]){case 0:case 1:s=r;break;case 4:return o.label++,{value:r[1],done:!1};case 5:o.label++,i=r[1],r=[0];continue;case 7:r=o.ops.pop(),o.trys.pop();continue;default:if(!(s=(s=o.trys).length>0&&s[s.length-1])&&(6===r[0]||2===r[0])){o=0;continue}if(3===r[0]&&(!s||r[1]>s[0]&&r[1]<s[3])){o.label=r[1];break}if(6===r[0]&&o.label<s[1]){o.label=s[1],s=r;break}if(s&&o.label<s[2]){o.label=s[2],o.ops.push(r);break}s[2]&&o.ops.pop(),o.trys.pop();continue}r=e.call(t,o)}catch(t){r=[6,t],i=0}finally{n=s=0}if(5&r[0])throw r[1];return{value:r[0]?r[1]:void 0,done:!0}}([r,u])}}},j=function(){function t(){this.status=K,this.reports={spotifyReports:[]},this.authenticated=!1}return t.prototype.init=function(t,e,n){var s=this;if(this.events=n,this.API)return this.playback.setEvents(n),n.enableSpotifyAuth(!this.authenticated),void n.initialized(this.status);this.API=new c(e,t,{statusChanged:function(t){return V(s,void 0,void 0,(function(){return G(this,(function(e){switch(e.label){case 0:return this.status.api=0===t,this.e().initialized(this.status),this.status.api?[4,this.spotifyAuth.get()]:[3,2];case 1:e.sent(),e.label=2;case 2:return t!==i.CONNECTED?[3,4]:(this.loadQueue(!1),[4,this.playback.setSettings()]);case 3:e.sent(),e.label=4;case 4:return[2]}}))}))}}),this.playback=new M(this.API,this.events,this.status),this.search=new Y(this.API,this.playback.spotify),this.spotifyAuth=new b(this.API,{statusChanged:this.spotifyStatus,spotifyAuthenticated:function(t,e){s.authenticated=t,s.e().enableSpotifyAuth(!t),e&&s.playback.spotify.init(e)}}),this.e().initialized(this.status)},t.prototype.spotifyStatus=function(t){this.status.spotify=t,this.e().initialized(this.status)},t.prototype.youtubeApiReady=function(){this.status.youtubeApi=!0,this.e().initialized(this.status)},t.prototype.spotifyApiReady=function(){this.status.spotifyApi=!0,this.e().initialized(this.status)},t.prototype.e=function(){return this.events?this.events:H},t.prototype.loadQueue=function(t){return void 0===t&&(t=!0),V(this,void 0,void 0,(function(){return G(this,(function(e){switch(e.label){case 0:return[4,this.playback.loadQueue(t)];case 1:return e.sent(),[2]}}))}))},t.prototype.report=function(t){return V(this,void 0,void 0,(function(){return G(this,(function(e){switch(e.label){case 0:return this.reports.reason=t,[4,this.API.requests.request((n=this.reports,{topic:"twasi-songrequests/events",scope:"action",action:{type:"report",message:n.message,report:n}}))];case 1:return e.sent(),[2]}var n}))}))},t}(),H={settingsUpdate:function(t){},queueUpdate:function(t){},enableSpotifyAuth:function(t){console.log("Spotify Authentication is now %s.",t?"enabled":"disabled")},initialized:function(t){},pause:function(){console.log("PAUSE")},play:function(){console.log("PLAY")},position:function(t){console.log("POS: "+t)},song:function(t){console.log("SONG: "+t.name)},stop:function(){console.log("STOP")}},K={api:!1,spotifyApi:!1,spotify:!1,youtubeApi:!1,youtube:!1}},function(t,e,n){"use strict";n.r(e),function(t){var e=new(n(0).a),i=window;i.TSRI=e,i.onSpotifyWebPlaybackSDKReady=function(){return e.spotifyApiReady()},(window||t).onYouTubeIframeAPIReady=function(){return e.youtubeApiReady()},n(3),n(4)}.call(this,n(2))},function(t,e){var n;n=function(){return this}();try{n=n||new Function("return this")()}catch(t){"object"==typeof window&&(n=window)}t.exports=n},function(t,e){!function(t){function e(i){if(n[i])return n[i].exports;var s=n[i]={i:i,l:!1,exports:{}};return t[i].call(s.exports,s,s.exports,e),s.l=!0,s.exports}var n={};e.m=t,e.c=n,e.d=function(t,n,i){e.o(t,n)||Object.defineProperty(t,n,{configurable:!1,enumerable:!0,get:i})},e.n=function(t){var n=t&&t.__esModule?function(){return t.default}:function(){return t};return e.d(n,"a",n),n},e.o=function(t,e){return Object.prototype.hasOwnProperty.call(t,e)},e.p="",e(e.s=2)}([function(t,e,n){"use strict";var i={SPOTIFY_MESSAGE:"SP_MESSAGE",ACCOUNT_ERROR:"ACCOUNT_ERROR",AUTH_ERROR:"AUTH_ERROR",CONNECT:"CONNECT",CONNECTED:"CONNECTED",CURRENT_STATE:"CURRENT_STATE",DISCONNECT:"DISCONNECT",EVENT:"EVENT",GET_CURRENT_STATE:"GET_CURRENT_STATE",GET_TOKEN:"GET_TOKEN",GET_VOLUME:"GET_VOLUME",INIT:"INIT",LOADED:"LOADED",NEXT_TRACK:"NEXT_TRACK",PAUSE:"PAUSE",PLAYBACK_ERROR:"PLAYBACK_ERROR",PLAYER_INIT_ERROR:"PLAYER_INIT_ERROR",PLAYER_READY:"PLAYER_READY",PLAYER_NOT_READY:"PLAYER_NOT_READY",PLAYER_STATE_CHANGED:"PLAYER_STATE_CHANGED",PREV_TRACK:"PREV_TRACK",RESUME:"RESUME",SEEK:"SEEK",SET_NAME:"SET_NAME",SET_VOLUME:"SET_VOLUME",TOGGLE_PLAY:"TOGGLE_PLAY",TOKEN:"TOKEN",VOLUME:"VOLUME",accountError:function(t){return this._createEventMessage(i.ACCOUNT_ERROR,{message:t})},authError:function(t){return this._createEventMessage(i.AUTH_ERROR,t)},playbackError:function(t){return this._createEventMessage(i.PLAYBACK_ERROR,t)},playerReady:function(t){return this._createEventMessage(i.PLAYER_READY,t)},playerNotReady:function(t){return this._createEventMessage(i.PLAYER_NOT_READY,t)},connect:function(){return this._createMessage(i.CONNECT)},connected:function(t,e){return this._createMessage(i.CONNECTED,{connected:t,ref:e})},disconnect:function(){return this._createMessage(i.DISCONNECT)},init:function(t){return this._createMessage(i.INIT,t)},playerInitError:function(t){return this._createEventMessage(i.PLAYER_INIT_ERROR,t)},getToken:function(){return this._createMessage(i.GET_TOKEN)},token:function(t,e){return this._createMessage(i.TOKEN,{token:t,ref:e})},pause:function(){return this._createMessage(i.PAUSE)},resume:function(){return this._createMessage(i.RESUME)},togglePlay:function(){return this._createMessage(i.TOGGLE_PLAY)},seek:function(t){return this._createMessage(i.SEEK,t)},nextTrack:function(t){return this._createMessage(i.NEXT_TRACK,t)},previousTrack:function(t){return this._createMessage(i.PREV_TRACK,t)},getCurrentState:function(){return this._createMessage(i.GET_CURRENT_STATE)},currentState:function(t,e){return this._createMessage(i.CURRENT_STATE,{state:t,ref:e})},playerStateChanged:function(t){return this._createEventMessage(i.PLAYER_STATE_CHANGED,t)},getVolume:function(){return this._createMessage(i.GET_VOLUME)},volume:function(t,e){return this._createMessage(i.VOLUME,{volume:t,ref:e})},setVolume:function(t){return this._createMessage(i.SET_VOLUME,t)},setName:function(t){return this._createMessage(i.SET_NAME,t)},embeddedLoaded:function(){return this._createMessage(i.LOADED)},_createEventMessage:function(t,e){return this._createMessage(i.EVENT,{name:t,eventData:e})},_createMessage:function(t,e){return{type:i.SPOTIFY_MESSAGE,body:{topic:t,data:e?JSON.parse(JSON.stringify(e)):null}}}};t.exports=i},function(t,e){var n;n=function(){return this}();try{n=n||Function("return this")()||(0,eval)("this")}catch(t){"object"==typeof window&&(n=window)}t.exports=n},function(t,e,n){"use strict";function i(){var t=n(3);if(!document.body)throw new Error("Document doesn't have a body");if(window.Spotify={Player:t.setupPlayerEnv(window)},window.onSpotifyWebPlaybackSDKReady)window.onSpotifyWebPlaybackSDKReady();else{if(!window.onSpotifyPlayerAPIReady)throw new Error("onSpotifyWebPlaybackSDKReady is not defined");window.onSpotifyPlayerAPIReady()}}"complete"===document.readyState?i():window.addEventListener("load",i)},function(t,e,n){"use strict";var i=n(4),s=n(5),r=n(0),o=n(6);t.exports.setupPlayerEnv=function(t,e){var n,u="https://sdk.scdn.co/embedded/index.html",a=s.defer(),c=new i,h=e||function(e){var n=t.document.createElement("iframe");return n.src=e,n.setAttribute("alt","Audio Playback Container"),n.setAttribute("tabIndex","-1"),n.style.setProperty("position","absolute","important"),n.style.setProperty("left","-1px","important"),n.style.setProperty("width","0","important"),n.style.setProperty("height","0","important"),n.style.setProperty("border","none","important"),n.style.setProperty("outline","none","important"),n.allow="encrypted-media; autoplay",t.document.body.appendChild(n),n.contentWindow},p=function(e){e===r.LOADED&&(c.stopListening(t,p),a.resolve())};c.listen(t,p),n=h(u);var l=function(e){this._options=this._sanitizeOptions(e),this._handleMessages=this._handleMessages.bind(this),this._messageHandlers={},this._eventListeners={},this._setupMessageHandlers(),this._connectionRequests={},this._getCurrentStateRequests={},this._getVolumeRequests={},this.isLoaded=a.promise.then(function(){c.listen(t,this._handleMessages),this._sendMessage(r.init(this._options))}.bind(this))};return l.prototype._sanitizeOptions=function(e){var n=t&&t.location&&t.location.hostname||"";return{name:e.name||n,id:o.get(),getOAuthToken:e.getOAuthToken||e.getOauthToken,volume:e.volume||1}},l.prototype._setupMessageHandlers=function(){this._messageHandlers[r.GET_TOKEN]=this._onGetToken.bind(this),this._messageHandlers[r.EVENT]=this._onEvent.bind(this),this._messageHandlers[r.CONNECTED]=this._onConnected.bind(this),this._messageHandlers[r.CURRENT_STATE]=this._onCurrentState.bind(this),this._messageHandlers[r.VOLUME]=this._onVolume.bind(this)},l.prototype.connect=function(){return this.isLoaded.then(function(){var t=this._sendMessage(r.connect());return this._connectionRequests[t]=s.defer(),this._connectionRequests[t].promise}.bind(this))},l.prototype.on=function(t,e){if(!t)throw new TypeError("Argument `eventName` is required.");if("function"!=typeof e)throw new TypeError("Argument `listener` must be a function.");return this._eventListeners[t]=this._eventListeners[t]||[],-1===this._eventListeners[t].indexOf(e)&&(this._eventListeners[t].push(e),!0)},l.prototype.addListener=function(t,e){return this.on(t,e)},l.prototype.removeListener=function(t,e){if(!t)throw new TypeError("Argument `eventName` is required.");if(1===arguments.length)return this._eventListeners[t]=[],!0;if("function"!=typeof e)throw new TypeError("Argument `listener` must be a function.");var n=this._eventListeners[t];return!(!n||!n.length||(this._eventListeners[t]=n.filter((function(t){return t!==e})),0))},l.prototype.getCurrentState=function(){return this.isLoaded.then(function(){var t=this._sendMessage(r.getCurrentState());return this._getCurrentStateRequests[t]=s.defer(),this._getCurrentStateRequests[t].promise}.bind(this))},l.prototype.getVolume=function(){return this.isLoaded.then(function(){var t=this._sendMessage(r.getVolume());return this._getVolumeRequests[t]=s.defer(),this._getVolumeRequests[t].promise}.bind(this))},l.prototype.setName=function(t){return this._sendMessageWhenLoaded(r.setName(t))},l.prototype.setVolume=function(t){return this._sendMessageWhenLoaded(r.setVolume(t,result.volumeBalance))},l.prototype.pause=function(){return this._sendMessageWhenLoaded(r.pause())},l.prototype.resume=function(){return this._sendMessageWhenLoaded(r.resume())},l.prototype.togglePlay=function(){return this._sendMessageWhenLoaded(r.togglePlay())},l.prototype.seek=function(t){return this._sendMessageWhenLoaded(r.seek(t))},l.prototype.previousTrack=function(t){return this._sendMessageWhenLoaded(r.previousTrack(t))},l.prototype.nextTrack=function(t){return this._sendMessageWhenLoaded(r.nextTrack(t))},l.prototype.disconnect=function(){return this._sendMessageWhenLoaded(r.disconnect())},l.prototype._getListeners=function(){var t={};return t[r.ACCOUNT_ERROR]="account_error",t[r.AUTH_ERROR]="authentication_error",t[r.PLAYBACK_ERROR]="playback_error",t[r.PLAYER_INIT_ERROR]="initialization_error",t[r.PLAYER_READY]="ready",t[r.PLAYER_NOT_READY]="not_ready",t[r.PLAYER_STATE_CHANGED]="player_state_changed",function(e){return this._eventListeners[t[e]]||[]}}(),l.prototype._onEvent=function(t){this._getListeners(t.name).forEach((function(e){e(t.eventData)}))},l.prototype._onGetToken=function(t,e){var n=this._options.getOAuthToken;if("function"!=typeof n){var i="getOAuthToken is not a function";if(this._getListeners(r.PLAYER_INIT_ERROR).length)return void this._onEvent({name:r.PLAYER_INIT_ERROR,eventData:{message:i}});throw new Error(i)}new s(n).then(function(t){this._sendMessage(r.token(t,e))}.bind(this))},l.prototype._onConnected=function(t){t.ref in this._connectionRequests&&(this._connectionRequests[t.ref].resolve(t.connected),delete this._connectionRequests[t.ref])},l.prototype._onCurrentState=function(t){t.ref in this._getCurrentStateRequests&&(this._getCurrentStateRequests[t.ref].resolve(t.state),delete this._getCurrentStateRequests[t.ref])},l.prototype._onVolume=function(t){t.ref in this._getVolumeRequests&&(this._getVolumeRequests[t.ref].resolve(t.volume),delete this._getVolumeRequests[t.ref])},l.prototype._handleMessages=function(t,e,n){t in this._messageHandlers&&this._messageHandlers[t](e,n)},l.prototype._sendMessage=function(t){return c.send(n,t,u)},l.prototype._sendMessageWhenLoaded=function(t){return this.isLoaded.then(this._sendMessage.bind(this,t))},l}},function(t,e,n){"use strict";var i=n(0),s=function(){this._onMessageCallback=function(){},this._receiveMessage=this._receiveMessage.bind(this),this._messageId=0};s.prototype.listen=function(t,e){this._onMessageCallback=e,t.addEventListener("message",this._receiveMessage)},s.prototype.stopListening=function(t){t.removeEventListener("message",this._receiveMessage)},s.prototype.send=function(t,e,n){return t.postMessage(this._addMessageId(e),n||"*"),e.seq},s.prototype._addMessageId=function(t){return t.seq=this._messageId++,t},s.prototype._receiveMessage=function(t){var e=t.data;e.type===i.SPOTIFY_MESSAGE&&e.body&&e.body.topic&&this._onMessageCallback(e.body.topic,e.body.data,e.seq)},t.exports=s},function(t,e,n){"use strict";(function(e){var n,i=e.Promise;if(!i)throw new Error("Fatal: no Promise implementation available.");(n=Object.defineProperty?function(t,e,n){return t[e]?t:(Object.defineProperty(t,e,{value:n,configurable:!0,writable:!0}),t)}:function(t,e,n){return t[e]?t:(t[e]=n,t)})(i,"defer",(function(){var t={};return t.promise=new i((function(e,n){t.resolve=e,t.reject=n})),t})),n(i.prototype,"spread",(function(t,e){return this.then((function(t){return i.all(t)})).then((function(e){return 1===e.length?t(e[0]):t.apply(this,e)}),e)})),t.exports=i}).call(e,n(1))},function(t,e,n){"use strict";(function(e){function i(){var t=new e.Uint8Array(16);return e.crypto.getRandomValues(t),r.toHex(t.join(""),40).slice(0,40)}function s(){for(var t=new Array(27),e=t.length;e--;)t[e]=Math.floor(8*Math.random());return r.toHex(t.join(""),40)}var r=n(7),o="function"==typeof e.Uint8Array&&void 0!==e.crypto&&"function"==typeof e.crypto.getRandomValues?i:s,u="_spharmony_device_id";t.exports={get:function(t,n){if(t&&"string"==typeof t)return t;if(n)return o();var i=e.localStorage.getItem(u);return i||(i=o(),e.localStorage.setItem(u,i)),i},generate:o,generateWithCrypto:i,generateWithRandom:s}}).call(e,n(1))},function(t,e,n){"use strict";function i(t,e,n){for(var i=0,s=0;s<t.length;++s){var r=t[s]*e+i;t[s]=r%n,i=~~(r/n)}for(;i;)t.push(i%n),i=~~(i/n)}function s(t,e,n,i){var s,r,o=0;for(r=0;r<e.length;++r)s=~~t[r]+e[r]*n+o,t[r]=s%i,o=~~(s/i);for(;o;)s=~~t[r]+o,t[r]=s%i,o=~~(s/i),++r}function r(t,e,n){for(var r=[0],o=[1],u=0;u<t.length;++u)s(r,o,t[u],n),i(o,e,n);return r}function o(t,e){for(var n=[],i=0;i<t.length;++i)n.push(e[t[i]]);return n.reverse()}function u(t,e){for(;t.length<e;)t.push(0);return t}var a="0123456789abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ",c={},h={};!function(){var t,e;for(t=0,e=a.length;t<e;++t)h[a[t]]=t;for(t=0;t<16;++t)c["0123456789abcdef"[t]]=t;for(t=0;t<16;++t)c["0123456789ABCDEF"[t]]=t}(),t.exports={fromBytes:function(t,e){return o(u(r(t.slice(0).reverse(),256,62),e),a).join("")},toBytes:function(t,e){return u(r(o(t,h),62,256),e).reverse()},toHex:function(t,e){return o(u(r(o(t,h),62,16),e),a).join("")},fromHex:function(t,e){return o(u(r(o(t,c),16,62),e),a).join("")}}}])},function(t,e){if(!window.YT)var n={loading:0,loaded:0};if(!window.YTConfig)var i={host:"http://www.youtube.com"};n.loading||(n.loading=1,function(){var t=[];n.ready=function(e){n.loaded?e():t.push(e)},window.onYTReady=function(){n.loaded=1;for(var e=0;e<t.length;e++)try{t[e]()}catch(t){}},n.setConfig=function(t){for(var e in t)t.hasOwnProperty(e)&&(i[e]=t[e])};var e=document.createElement("script");e.type="text/javascript",e.id="www-widgetapi-script",e.src="https://s.ytimg.com/yts/jsbin/www-widgetapi-vflUFVyEP/www-widgetapi.js",e.async=!0;var s=document.currentScript;if(s){var r=s.nonce||s.getAttribute("nonce");r&&e.setAttribute("nonce",r)}var o=document.getElementsByTagName("script")[0];o.parentNode.insertBefore(e,o)}())}]);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,